%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: BC_CFD_H_GRY_rev.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Calvin Jones
%%CreationDate: 11/19/2013
%%BoundingBox: 0 0 620 245
%%HiResBoundingBox: 0 0 619.7525 244.6324
%%CropBox: 0 0 619.7525 244.6324
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.4%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.4 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2013-11-19T10:09:55-08:00</xmp:CreateDate>
         <xmp:MetadataDate>2013-11-19T10:09:55-08:00</xmp:MetadataDate>
         <xmp:ModifyDate>2013-11-19T10:09:55-08:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>104</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAaAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.607666</stDim:w>
            <stDim:h>3.397664</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>0</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100 1</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:20806CCA1220681180839027355CDBCA</stRef:instanceID>
            <stRef:documentID>xmp.did:20806CCA1220681180839027355CDBCA</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:20806CCA1220681180839027355CDBCA</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:23806CCA1220681180839027355CDBCA</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:23806CCA1220681180839027355CDBCA</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:20806CCA1220681180839027355CDBCA</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:20806CCA1220681180839027355CDBCA</stEvt:instanceID>
                  <stEvt:when>2013-11-19T10:07:14-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:23806CCA1220681180839027355CDBCA</stEvt:instanceID>
                  <stEvt:when>2013-11-19T10:09:55-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -244.632 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 244.632 li
619.752 244.632 li
619.752 0 li
cp
clp
286.651 108.621 mo
287.537 110.43 288.383 112.202 289.307 113.895 cv
289.384 113.895 li
290.424 112.085 291.386 110.083 292.349 108.121 cv
295.967 100.767 li
297.7 97.2642 298.816 95.147 298.894 93.3755 cv
300.202 93.4917 301.011 93.4917 301.781 93.4917 cv
302.743 93.4917 304.014 93.4526 305.207 93.3755 cv
305.438 93.5298 305.438 94.1841 305.246 94.3384 cv
304.437 94.4155 li
302.012 94.646 301.704 95.3774 301.742 98.0728 cv
301.819 102.153 301.858 109.276 302.166 114.819 cv
302.281 116.744 302.243 117.784 304.052 117.937 cv
305.284 118.053 li
305.515 118.284 305.477 118.862 305.207 119.015 cv
303.628 118.938 302.05 118.9 300.664 118.9 cv
299.317 118.9 297.584 118.938 296.006 119.015 cv
295.736 118.823 295.698 118.284 295.929 118.053 cv
297.045 117.937 li
298.932 117.745 298.932 117.129 298.932 114.666 cv
298.816 98.6118 li
298.739 98.6118 li
298.47 99.0347 297.007 102.115 296.237 103.617 cv
292.811 110.353 li
291.078 113.741 289.346 117.36 288.653 119.131 cv
288.576 119.247 288.422 119.285 288.268 119.285 cv
288.191 119.285 287.999 119.247 287.921 119.131 cv
287.267 117.09 285.419 113.318 284.534 111.431 cv
281.069 104.001 li
280.26 102.23 279.452 100.228 278.605 98.4575 cv
278.528 98.4575 li
278.374 100.844 278.258 103.078 278.143 105.31 cv
278.027 107.659 277.874 111.084 277.874 114.357 cv
277.874 117.206 278.104 117.822 279.606 117.937 cv
281.069 118.053 li
281.338 118.284 281.3 118.9 281.03 119.015 cv
279.721 118.938 278.22 118.9 276.757 118.9 cv
275.525 118.9 274.139 118.938 272.83 119.015 cv
272.599 118.823 272.522 118.246 272.753 118.053 cv
273.6 117.937 li
275.217 117.707 275.756 117.475 275.987 114.781 cv
276.218 112.24 276.411 110.123 276.642 106.311 cv
276.834 103.116 276.988 99.8433 277.065 97.7261 cv
277.142 95.3003 276.834 94.7231 274.486 94.4155 cv
273.87 94.3384 li
273.677 94.1069 273.716 93.5298 274.023 93.3755 cv
275.179 93.4526 276.103 93.4917 277.065 93.4917 cv
277.951 93.4917 278.99 93.4917 280.26 93.3755 cv
280.106 94.8774 281.069 97.2642 282.262 99.728 cv
286.651 108.621 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
312.908 96.8794 mo
312.908 98.2651 311.946 98.8813 310.868 98.8813 cv
309.674 98.8813 308.904 97.9956 308.904 96.9565 cv
308.904 95.686 309.829 94.8774 310.983 94.8774 cv
312.138 94.8774 312.908 95.8013 312.908 96.8794 cv
cp
309.712 107.851 mo
309.712 106.349 309.712 106.157 308.673 105.464 cv
308.327 105.233 li
308.172 105.08 308.172 104.656 308.366 104.541 cv
309.25 104.232 311.445 103.231 312.331 102.654 cv
312.523 102.654 312.677 102.731 312.715 102.884 cv
312.638 104.232 312.562 106.081 312.562 107.659 cv
312.562 114.588 li
312.562 117.36 312.638 117.745 314.025 117.937 cv
314.833 118.053 li
315.102 118.246 315.026 118.9 314.756 119.015 cv
313.601 118.938 312.485 118.9 311.137 118.9 cv
309.751 118.9 308.596 118.938 307.518 119.015 cv
307.249 118.9 307.171 118.246 307.441 118.053 cv
308.25 117.937 li
309.674 117.745 309.712 117.36 309.712 114.588 cv
309.712 107.851 li
cp
f
319.221 107.851 mo
319.221 106.349 319.221 106.157 318.182 105.464 cv
317.835 105.233 li
317.681 105.08 317.681 104.656 317.875 104.541 cv
318.759 104.232 320.954 103.231 321.724 102.654 cv
321.877 102.654 322.071 102.731 322.147 102.923 cv
322.071 103.809 322.071 104.386 322.071 104.733 cv
322.071 104.963 322.224 105.156 322.494 105.156 cv
324.111 104.155 325.92 103.193 327.883 103.193 cv
331.079 103.193 332.388 105.387 332.388 107.966 cv
332.388 114.588 li
332.388 117.36 332.464 117.745 333.851 117.937 cv
334.698 118.053 li
334.967 118.246 334.89 118.9 334.621 119.015 cv
333.465 118.938 332.349 118.9 331.001 118.9 cv
329.616 118.9 328.461 118.938 327.421 119.015 cv
327.152 118.9 327.075 118.246 327.344 118.053 cv
328.076 117.937 li
329.5 117.707 329.539 117.36 329.539 114.588 cv
329.539 108.852 li
329.539 106.658 328.538 105.041 325.92 105.041 cv
324.458 105.041 323.187 105.657 322.648 106.388 cv
322.147 107.042 322.071 107.582 322.071 108.698 cv
322.071 114.588 li
322.071 117.36 322.147 117.707 323.534 117.937 cv
324.226 118.053 li
324.496 118.246 324.418 118.9 324.149 119.015 cv
323.11 118.938 321.994 118.9 320.646 118.9 cv
319.26 118.9 318.105 118.938 317.027 119.015 cv
316.757 118.9 316.681 118.246 316.95 118.053 cv
317.758 117.937 li
319.183 117.745 319.221 117.36 319.221 114.588 cv
319.221 107.851 li
cp
f
342.245 96.8794 mo
342.245 98.2651 341.283 98.8813 340.205 98.8813 cv
339.011 98.8813 338.241 97.9956 338.241 96.9565 cv
338.241 95.686 339.166 94.8774 340.32 94.8774 cv
341.475 94.8774 342.245 95.8013 342.245 96.8794 cv
cp
339.049 107.851 mo
339.049 106.349 339.049 106.157 338.01 105.464 cv
337.664 105.233 li
337.509 105.08 337.509 104.656 337.703 104.541 cv
338.587 104.232 340.782 103.231 341.667 102.654 cv
341.86 102.654 342.014 102.731 342.052 102.884 cv
341.975 104.232 341.899 106.081 341.899 107.659 cv
341.899 114.588 li
341.899 117.36 341.975 117.745 343.362 117.937 cv
344.169 118.053 li
344.439 118.246 344.363 118.9 344.093 119.015 cv
342.938 118.938 341.822 118.9 340.474 118.9 cv
339.088 118.9 337.933 118.938 336.855 119.015 cv
336.585 118.9 336.509 118.246 336.778 118.053 cv
337.586 117.937 li
339.011 117.745 339.049 117.36 339.049 114.588 cv
339.049 107.851 li
cp
f
355.334 103.885 mo
355.68 104.733 355.95 105.964 355.95 107.004 cv
355.796 107.274 355.218 107.35 355.026 107.12 cv
354.372 105.425 353.216 104.309 351.638 104.309 cv
350.137 104.309 349.174 105.272 349.174 106.658 cv
349.174 108.236 350.792 109.083 352.139 109.853 cv
354.179 111.008 356.066 112.317 356.066 115.05 cv
356.066 117.976 353.371 119.439 350.522 119.439 cv
348.712 119.439 347.365 119.054 346.403 118.284 cv
346.094 117.552 345.864 115.667 345.941 114.396 cv
346.133 114.165 346.633 114.126 346.826 114.357 cv
347.481 116.474 348.712 118.323 350.907 118.323 cv
352.292 118.323 353.486 117.514 353.486 115.859 cv
353.486 114.087 351.946 113.125 350.522 112.317 cv
348.289 111.046 346.71 109.699 346.71 107.582 cv
346.71 104.771 349.02 103.193 351.946 103.193 cv
353.563 103.193 354.988 103.578 355.334 103.885 cv
cp
f
363.765 105.349 mo
363.111 105.349 363.072 105.464 363.072 106.273 cv
363.072 113.472 li
363.072 115.705 363.341 117.745 365.882 117.745 cv
366.267 117.745 366.614 117.667 366.922 117.552 cv
367.268 117.437 367.769 117.013 367.884 117.013 cv
368.192 117.013 368.346 117.437 368.269 117.667 cv
367.577 118.476 366.191 119.439 364.227 119.439 cv
360.917 119.439 360.223 117.591 360.223 115.281 cv
360.223 106.465 li
360.223 105.425 360.185 105.349 359.415 105.349 cv
358.336 105.349 li
358.106 105.195 358.068 104.771 358.221 104.541 cv
359.337 104.194 360.3 103.693 360.685 103.347 cv
361.186 102.884 361.917 101.845 362.302 101.076 cv
362.495 100.999 362.957 100.999 363.111 101.268 cv
363.111 103 li
363.111 103.693 363.149 103.732 363.803 103.732 cv
368.077 103.732 li
368.539 104.079 368.461 105.118 368.116 105.349 cv
363.765 105.349 li
cp
f
372.042 107.851 mo
372.042 106.349 372.042 106.157 371.003 105.464 cv
370.657 105.233 li
370.502 105.08 370.502 104.656 370.696 104.541 cv
371.581 104.232 373.622 103.231 374.583 102.654 cv
374.776 102.692 374.892 102.769 374.892 102.923 cv
374.892 105.156 li
374.892 105.349 374.93 105.464 375.007 105.502 cv
376.355 104.386 377.818 103.193 379.242 103.193 cv
380.205 103.193 380.974 103.809 380.974 104.733 cv
380.974 106.003 379.935 106.503 379.319 106.503 cv
378.934 106.503 378.742 106.388 378.472 106.234 cv
377.894 105.849 377.317 105.618 376.778 105.618 cv
376.162 105.618 375.7 105.964 375.392 106.388 cv
375.007 106.927 374.892 108.043 374.892 109.352 cv
374.892 114.588 li
374.892 117.36 374.968 117.822 376.431 117.937 cv
377.818 118.053 li
378.087 118.246 378.01 118.9 377.741 119.015 cv
375.931 118.938 374.815 118.9 373.467 118.9 cv
372.082 118.9 370.926 118.938 369.925 119.015 cv
369.656 118.9 369.579 118.246 369.848 118.053 cv
370.58 117.937 li
372.004 117.707 372.042 117.36 372.042 114.588 cv
372.042 107.851 li
cp
f
382.283 126.831 mo
382.283 125.792 382.976 125.291 383.823 125.291 cv
384.554 125.291 li
385.17 125.291 385.555 125.021 385.825 124.597 cv
386.941 122.865 387.711 121.249 388.057 120.325 cv
388.173 120.016 388.443 119.208 388.443 118.668 cv
388.443 117.899 388.289 117.437 387.788 116.012 cv
384.786 107.774 li
384.13 105.964 383.861 105.041 382.514 104.771 cv
381.551 104.579 li
381.321 104.386 381.359 103.732 381.667 103.617 cv
382.899 103.693 384.054 103.732 385.324 103.732 cv
386.364 103.732 387.442 103.693 388.673 103.617 cv
388.982 103.732 389.02 104.386 388.75 104.579 cv
387.788 104.771 li
387.25 104.886 386.941 105.002 386.941 105.272 cv
386.941 105.734 387.827 108.236 388.057 108.89 cv
389.29 112.432 li
389.52 113.048 390.251 115.088 390.406 115.166 cv
390.521 115.088 391.137 113.895 391.831 112.317 cv
393.139 109.276 li
393.986 107.274 394.487 105.849 394.487 105.425 cv
394.487 105.156 394.255 104.886 393.563 104.771 cv
392.37 104.579 li
392.1 104.386 392.138 103.732 392.447 103.617 cv
393.678 103.693 394.833 103.732 395.834 103.732 cv
396.796 103.732 397.682 103.693 398.76 103.617 cv
399.068 103.77 399.106 104.348 398.837 104.579 cv
398.182 104.694 li
396.912 104.925 396.219 106.042 394.91 108.775 cv
392.754 113.203 li
391.484 115.782 388.327 122.48 386.441 126.676 cv
385.787 128.139 384.862 128.486 383.977 128.486 cv
382.86 128.486 382.283 127.792 382.283 126.831 cv
cp
f
416.163 104.348 mo
413.622 104.348 411.735 106.773 411.735 111.008 cv
411.735 114.511 413.313 118.284 416.701 118.284 cv
420.089 118.284 421.128 114.742 421.128 111.778 cv
421.128 108.505 419.82 104.348 416.163 104.348 cv
cp
424.439 111.162 mo
424.439 115.974 421.128 119.439 416.316 119.439 cv
411.889 119.439 408.424 116.321 408.424 111.508 cv
408.424 106.658 412.082 103.193 416.625 103.193 cv
420.936 103.193 424.439 106.426 424.439 111.162 cv
cp
f
432.562 105.349 mo
431.908 105.349 431.908 105.425 431.908 106.465 cv
431.908 114.588 li
431.908 117.36 431.985 117.822 433.371 117.937 cv
434.757 118.053 li
435.026 118.246 434.95 118.9 434.68 119.015 cv
432.948 118.938 431.831 118.9 430.484 118.9 cv
429.097 118.9 427.943 118.938 426.788 119.015 cv
426.518 118.9 426.441 118.246 426.71 118.053 cv
427.596 117.937 li
429.021 117.745 429.059 117.36 429.059 114.588 cv
429.059 106.465 li
429.059 105.425 429.059 105.349 428.29 105.349 cv
426.942 105.349 li
426.71 105.195 426.672 104.848 426.827 104.617 cv
428.482 103.809 li
428.79 103.655 429.059 103.423 429.059 103.039 cv
429.059 100.806 429.329 98.4194 430.252 96.2632 cv
431.215 94.0688 433.371 91.3735 437.182 91.3735 cv
439.222 91.3735 440.955 92.2974 440.955 93.6841 cv
440.955 94.4536 440.223 95.0698 439.492 95.0698 cv
439.069 95.0698 438.837 94.9155 438.568 94.6079 cv
437.836 93.7612 436.758 92.9136 435.489 92.9136 cv
434.294 92.9136 433.333 93.645 432.755 95.0308 cv
432.062 96.8022 431.908 99.6128 431.908 101.538 cv
431.908 102.654 li
431.908 103.693 431.908 103.732 432.562 103.732 cv
436.952 103.732 li
437.375 104.117 437.105 105.195 436.682 105.349 cv
432.562 105.349 li
cp
f
278.22 134.648 mo
281.03 132.454 284.611 131.375 288.614 131.375 cv
290.693 131.375 293.619 131.798 295.429 132.299 cv
295.891 132.415 296.16 132.492 296.506 132.454 cv
296.545 133.338 296.737 135.764 297.045 138.113 cv
296.853 138.382 296.275 138.42 296.006 138.189 cv
295.429 135.572 293.696 132.569 288.114 132.569 cv
282.224 132.569 277.219 136.303 277.219 144.272 cv
277.219 152.357 282.339 156.823 288.653 156.823 cv
293.619 156.823 295.813 153.588 296.699 151.317 cv
296.968 151.125 297.546 151.202 297.7 151.471 cv
297.43 153.473 296.43 156.014 295.852 156.746 cv
295.39 156.823 294.928 156.976 294.504 157.13 cv
293.658 157.438 290.886 158.016 288.422 158.016 cv
284.957 158.016 281.646 157.323 278.836 155.436 cv
275.756 153.319 273.369 149.816 273.369 144.849 cv
273.369 140.577 275.294 136.919 278.22 134.648 cv
cp
f
301.474 135.687 mo
301.474 133.416 301.436 133.185 300.281 132.492 cv
299.896 132.261 li
299.703 132.145 299.703 131.606 299.896 131.491 cv
300.858 131.183 302.667 130.605 304.054 129.874 cv
304.208 129.874 304.362 129.951 304.438 130.105 cv
304.4 131.26 304.323 133.185 304.323 134.878 cv
304.323 142.963 li
304.323 143.31 304.362 143.618 304.477 143.695 cv
305.863 142.617 307.71 141.693 309.674 141.693 cv
313.332 141.693 314.64 143.964 314.64 146.659 cv
314.64 153.088 li
314.64 155.86 314.717 156.284 316.103 156.437 cv
317.143 156.553 li
317.413 156.746 317.335 157.4 317.066 157.515 cv
315.68 157.438 314.564 157.4 313.216 157.4 cv
311.831 157.4 310.675 157.438 309.636 157.515 cv
309.367 157.4 309.29 156.746 309.559 156.553 cv
310.329 156.437 li
311.753 156.207 311.792 155.86 311.792 153.088 cv
311.792 147.583 li
311.792 145.119 310.598 143.463 308.134 143.463 cv
306.826 143.463 305.825 143.925 305.131 144.503 cv
304.438 145.081 304.323 145.273 304.323 146.621 cv
304.323 153.088 li
304.323 155.86 304.4 156.245 305.786 156.437 cv
306.594 156.553 li
306.864 156.707 306.787 157.4 306.517 157.515 cv
305.362 157.438 304.246 157.4 302.898 157.4 cv
301.513 157.4 300.358 157.438 299.126 157.515 cv
298.856 157.4 298.779 156.746 299.049 156.553 cv
300.011 156.437 li
301.436 156.284 301.474 155.86 301.474 153.088 cv
301.474 135.687 li
cp
f
324.497 135.379 mo
324.497 136.765 323.535 137.381 322.457 137.381 cv
321.263 137.381 320.493 136.496 320.493 135.457 cv
320.493 134.186 321.417 133.377 322.572 133.377 cv
323.727 133.377 324.497 134.301 324.497 135.379 cv
cp
321.301 146.351 mo
321.301 144.849 321.301 144.657 320.262 143.964 cv
319.916 143.733 li
319.761 143.58 319.761 143.156 319.955 143.041 cv
320.839 142.732 323.034 141.731 323.919 141.154 cv
324.112 141.154 324.266 141.231 324.304 141.384 cv
324.227 142.732 324.151 144.581 324.151 146.159 cv
324.151 153.088 li
324.151 155.86 324.227 156.245 325.614 156.437 cv
326.421 156.553 li
326.691 156.746 326.615 157.4 326.345 157.515 cv
325.19 157.438 324.074 157.4 322.726 157.4 cv
321.34 157.4 320.185 157.438 319.107 157.515 cv
318.837 157.4 318.761 156.746 319.03 156.553 cv
319.838 156.437 li
321.263 156.245 321.301 155.86 321.301 153.088 cv
321.301 146.351 li
cp
f
333.274 153.088 mo
333.274 155.86 333.351 156.245 334.737 156.437 cv
335.662 156.553 li
335.93 156.746 335.854 157.4 335.584 157.515 cv
334.314 157.438 333.197 157.4 331.85 157.4 cv
330.464 157.4 329.309 157.438 328.154 157.515 cv
327.884 157.4 327.807 156.746 328.077 156.553 cv
328.962 156.437 li
330.387 156.245 330.425 155.86 330.425 153.088 cv
330.425 135.687 li
330.425 133.416 330.387 133.185 329.232 132.492 cv
328.847 132.261 li
328.655 132.145 328.655 131.606 328.847 131.491 cv
329.809 131.183 331.619 130.605 333.004 129.874 cv
333.159 129.874 333.313 129.951 333.39 130.105 cv
333.351 131.26 333.274 133.185 333.274 134.878 cv
333.274 153.088 li
cp
f
349.636 146.004 mo
349.636 145.235 349.482 144.888 349.212 144.503 cv
348.635 143.695 347.48 142.886 345.979 142.886 cv
342.475 142.886 340.666 145.927 340.666 149.277 cv
340.666 152.78 342.629 156.091 346.402 156.091 cv
347.442 156.091 348.75 155.629 349.367 155.013 cv
349.597 154.782 349.636 154.205 349.636 153.588 cv
349.636 146.004 li
cp
352.485 151.779 mo
352.485 154.821 352.523 156.245 353.601 156.245 cv
354.025 156.245 354.679 156.052 355.256 155.86 cv
355.526 155.937 355.565 156.9 355.218 157.092 cv
353.601 157.323 351.214 157.9 350.136 158.324 cv
349.906 158.324 349.712 158.208 349.712 158.016 cv
349.712 157.362 li
349.712 156.784 349.712 156.322 349.636 156.167 cv
349.482 156.167 li
347.788 157.323 346.479 157.939 344.631 157.939 cv
340.358 157.939 337.509 154.589 337.509 150.547 cv
337.509 145.158 341.589 141.693 346.826 141.693 cv
348.134 141.693 348.981 141.885 349.405 142.04 cv
349.597 142.04 349.636 141.808 349.636 141.5 cv
349.636 135.687 li
349.636 133.416 349.597 133.185 348.443 132.492 cv
348.057 132.261 li
347.865 132.145 347.865 131.606 348.057 131.491 cv
349.02 131.183 350.83 130.605 352.215 129.874 cv
352.37 129.874 352.523 129.951 352.6 130.105 cv
352.562 131.26 352.485 133.185 352.485 134.878 cv
352.485 151.779 li
cp
f
359.145 146.351 mo
359.145 144.849 359.145 144.657 358.106 143.964 cv
357.759 143.733 li
357.605 143.58 357.605 143.156 357.798 143.041 cv
358.683 142.732 360.724 141.731 361.686 141.154 cv
361.878 141.192 361.995 141.269 361.995 141.423 cv
361.995 143.656 li
361.995 143.849 362.033 143.964 362.11 144.002 cv
363.458 142.886 364.92 141.693 366.344 141.693 cv
367.307 141.693 368.077 142.309 368.077 143.233 cv
368.077 144.503 367.038 145.003 366.421 145.003 cv
366.037 145.003 365.844 144.888 365.575 144.734 cv
364.997 144.349 364.419 144.118 363.88 144.118 cv
363.264 144.118 362.802 144.464 362.495 144.888 cv
362.11 145.427 361.995 146.543 361.995 147.852 cv
361.995 153.088 li
361.995 155.86 362.071 156.322 363.534 156.437 cv
364.92 156.553 li
365.19 156.746 365.113 157.4 364.843 157.515 cv
363.034 157.438 361.917 157.4 360.57 157.4 cv
359.184 157.4 358.029 157.438 357.028 157.515 cv
356.758 157.4 356.681 156.746 356.951 156.553 cv
357.682 156.437 li
359.107 156.207 359.145 155.86 359.145 153.088 cv
359.145 146.351 li
cp
f
374.776 146.389 mo
377.625 146.389 378.472 146.236 378.78 146.004 cv
378.895 145.927 379.01 145.774 379.01 145.273 cv
379.01 144.195 378.279 142.848 376.046 142.848 cv
373.775 142.848 371.812 144.926 371.773 146.197 cv
371.773 146.274 371.773 146.389 372.042 146.389 cv
374.776 146.389 li
cp
372.389 147.544 mo
371.388 147.544 371.349 147.622 371.349 148.583 cv
371.349 152.472 373.621 155.783 377.74 155.783 cv
379.01 155.783 380.088 155.398 381.282 153.897 cv
381.667 153.781 381.936 154.012 381.975 154.359 cv
380.705 156.976 377.933 157.939 375.931 157.939 cv
373.428 157.939 371.465 156.861 370.348 155.398 cv
369.194 153.897 368.732 152.087 368.732 150.393 cv
368.732 145.658 371.85 141.693 376.47 141.693 cv
379.781 141.693 381.936 143.964 381.936 146.274 cv
381.936 146.813 381.86 147.121 381.783 147.275 cv
381.667 147.506 381.128 147.544 379.511 147.544 cv
372.389 147.544 li
cp
f
386.018 146.351 mo
386.018 144.849 386.018 144.657 384.979 143.964 cv
384.632 143.733 li
384.478 143.58 384.478 143.156 384.671 143.041 cv
385.556 142.732 387.75 141.731 388.521 141.154 cv
388.674 141.154 388.868 141.231 388.944 141.423 cv
388.868 142.309 388.868 142.886 388.868 143.233 cv
388.868 143.463 389.021 143.656 389.291 143.656 cv
390.908 142.655 392.717 141.693 394.68 141.693 cv
397.875 141.693 399.185 143.887 399.185 146.466 cv
399.185 153.088 li
399.185 155.86 399.261 156.245 400.648 156.437 cv
401.495 156.553 li
401.764 156.746 401.687 157.4 401.417 157.515 cv
400.262 157.438 399.146 157.4 397.798 157.4 cv
396.413 157.4 395.258 157.438 394.218 157.515 cv
393.949 157.4 393.872 156.746 394.141 156.553 cv
394.873 156.437 li
396.297 156.207 396.335 155.86 396.335 153.088 cv
396.335 147.352 li
396.335 145.158 395.334 143.541 392.717 143.541 cv
391.254 143.541 389.984 144.157 389.445 144.888 cv
388.944 145.542 388.868 146.082 388.868 147.198 cv
388.868 153.088 li
388.868 155.86 388.944 156.207 390.331 156.437 cv
391.023 156.553 li
391.292 156.746 391.215 157.4 390.946 157.515 cv
389.907 157.438 388.791 157.4 387.443 157.4 cv
386.057 157.4 384.902 157.438 383.824 157.515 cv
383.554 157.4 383.478 156.746 383.747 156.553 cv
384.555 156.437 li
385.98 156.245 386.018 155.86 386.018 153.088 cv
386.018 146.351 li
cp
f
418.05 156.207 mo
418.82 156.207 420.013 155.629 420.399 155.244 cv
420.861 154.782 420.861 154.243 420.899 153.435 cv
420.976 151.164 li
420.976 150.74 420.822 150.663 420.591 150.663 cv
420.36 150.663 419.706 150.817 419.012 151.047 cv
416.741 151.818 415.625 152.395 415.625 153.897 cv
415.625 154.551 416.086 156.207 418.05 156.207 cv
cp
420.437 149.431 mo
421.014 149.239 421.091 148.892 421.091 148.314 cv
421.13 146.543 li
421.168 145.119 420.707 143.194 418.32 143.194 cv
417.242 143.194 415.933 143.733 415.856 144.926 cv
415.817 145.542 415.779 146.004 415.471 146.236 cv
414.893 146.698 413.854 146.967 413.277 146.967 cv
412.93 146.967 412.738 146.775 412.738 146.428 cv
412.738 144.426 417.087 141.693 419.898 141.693 cv
422.669 141.693 424.017 143.31 423.902 146.197 cv
423.67 152.896 li
423.594 154.667 423.94 156.245 425.442 156.245 cv
425.827 156.245 426.173 156.129 426.404 156.014 cv
426.596 155.899 426.79 155.745 426.905 155.745 cv
427.059 155.745 427.174 155.975 427.174 156.245 cv
427.174 156.437 425.827 157.939 423.94 157.939 cv
423.016 157.939 422.092 157.592 421.438 156.746 cv
421.284 156.514 421.053 156.207 420.822 156.207 cv
420.552 156.207 420.09 156.553 419.321 156.976 cv
418.473 157.438 417.626 157.939 416.548 157.939 cv
415.432 157.939 414.508 157.631 413.854 157.053 cv
413.123 156.399 412.661 155.436 412.661 154.359 cv
412.661 152.857 413.392 151.972 415.856 151.086 cv
420.437 149.431 li
cp
f
430.254 146.351 mo
430.254 144.849 430.254 144.657 429.215 143.964 cv
428.869 143.733 li
428.714 143.58 428.714 143.156 428.908 143.041 cv
429.792 142.732 431.987 141.731 432.757 141.154 cv
432.911 141.154 433.104 141.231 433.18 141.423 cv
433.104 142.309 433.104 142.886 433.104 143.233 cv
433.104 143.463 433.257 143.656 433.527 143.656 cv
435.144 142.655 436.954 141.693 438.917 141.693 cv
442.112 141.693 443.421 143.887 443.421 146.466 cv
443.421 153.088 li
443.421 155.86 443.498 156.245 444.884 156.437 cv
445.731 156.553 li
446 156.746 445.923 157.4 445.654 157.515 cv
444.499 157.438 443.382 157.4 442.035 157.4 cv
440.649 157.4 439.495 157.438 438.455 157.515 cv
438.185 157.4 438.108 156.746 438.377 156.553 cv
439.109 156.437 li
440.534 156.207 440.572 155.86 440.572 153.088 cv
440.572 147.352 li
440.572 145.158 439.571 143.541 436.954 143.541 cv
435.491 143.541 434.22 144.157 433.681 144.888 cv
433.18 145.542 433.104 146.082 433.104 147.198 cv
433.104 153.088 li
433.104 155.86 433.18 156.207 434.567 156.437 cv
435.259 156.553 li
435.529 156.746 435.452 157.4 435.182 157.515 cv
434.143 157.438 433.027 157.4 431.679 157.4 cv
430.293 157.4 429.138 157.438 428.06 157.515 cv
427.791 157.4 427.714 156.746 427.983 156.553 cv
428.792 156.437 li
430.216 156.245 430.254 155.86 430.254 153.088 cv
430.254 146.351 li
cp
f
459.784 146.004 mo
459.784 145.235 459.629 144.888 459.36 144.503 cv
458.783 143.695 457.627 142.886 456.126 142.886 cv
452.623 142.886 450.813 145.927 450.813 149.277 cv
450.813 152.78 452.777 156.091 456.549 156.091 cv
457.589 156.091 458.898 155.629 459.514 155.013 cv
459.745 154.782 459.784 154.205 459.784 153.588 cv
459.784 146.004 li
cp
462.632 151.779 mo
462.632 154.821 462.67 156.245 463.749 156.245 cv
464.172 156.245 464.827 156.052 465.404 155.86 cv
465.673 155.937 465.712 156.9 465.366 157.092 cv
463.749 157.323 461.362 157.9 460.284 158.324 cv
460.053 158.324 459.861 158.208 459.861 158.016 cv
459.861 157.362 li
459.861 156.784 459.861 156.322 459.784 156.167 cv
459.629 156.167 li
457.935 157.323 456.626 157.939 454.779 157.939 cv
450.505 157.939 447.657 154.589 447.657 150.547 cv
447.657 145.158 451.737 141.693 456.973 141.693 cv
458.282 141.693 459.128 141.885 459.552 142.04 cv
459.745 142.04 459.784 141.808 459.784 141.5 cv
459.784 135.687 li
459.784 133.416 459.745 133.185 458.59 132.492 cv
458.205 132.261 li
458.012 132.145 458.012 131.606 458.205 131.491 cv
459.167 131.183 460.977 130.605 462.363 129.874 cv
462.517 129.874 462.67 129.951 462.748 130.105 cv
462.709 131.26 462.632 133.185 462.632 134.878 cv
462.632 151.779 li
cp
f
482.844 142.848 mo
482.844 143.887 482.959 143.887 484.115 143.887 cv
486.732 143.887 li
488.31 143.887 489.542 143.81 490.004 143.656 cv
490.428 143.502 490.736 143.31 490.967 142.309 cv
491.313 140.769 li
491.506 140.538 492.161 140.538 492.314 140.769 cv
492.314 141.693 492.161 143.233 492.161 144.657 cv
492.161 146.043 492.314 147.506 492.314 148.391 cv
492.161 148.623 491.583 148.623 491.313 148.391 cv
490.928 146.89 li
490.736 146.197 490.428 145.658 489.697 145.427 cv
489.158 145.273 488.195 145.235 486.732 145.235 cv
484.115 145.235 li
482.959 145.235 482.844 145.273 482.844 146.274 cv
482.844 151.625 li
482.844 155.667 482.92 156.245 485.192 156.437 cv
486.501 156.553 li
486.732 156.707 486.655 157.4 486.424 157.515 cv
484.153 157.438 482.844 157.4 481.304 157.4 cv
479.61 157.4 478.301 157.438 476.492 157.515 cv
476.26 157.4 476.184 156.784 476.415 156.553 cv
477.377 156.437 li
479.61 156.167 479.687 155.667 479.687 151.625 cv
479.687 137.766 li
479.687 133.724 479.61 133.185 477.377 132.916 cv
476.761 132.838 li
476.53 132.684 476.607 131.992 476.838 131.875 cv
478.455 131.953 479.764 131.992 481.304 131.992 cv
488.387 131.992 li
490.851 131.992 493.084 131.992 493.584 131.875 cv
493.584 133.647 493.624 135.495 493.701 136.958 cv
493.584 137.189 493.045 137.304 492.776 137.073 cv
492.468 135.34 492.006 133.917 490.082 133.416 cv
489.235 133.185 487.964 133.185 486.347 133.185 cv
483.999 133.185 li
482.844 133.185 482.844 133.261 482.844 134.725 cv
482.844 142.848 li
cp
f
499.977 156.207 mo
500.747 156.207 501.94 155.629 502.326 155.244 cv
502.788 154.782 502.788 154.243 502.826 153.435 cv
502.903 151.164 li
502.903 150.74 502.749 150.663 502.518 150.663 cv
502.287 150.663 501.632 150.817 500.939 151.047 cv
498.667 151.818 497.551 152.395 497.551 153.897 cv
497.551 154.551 498.013 156.207 499.977 156.207 cv
cp
502.364 149.431 mo
502.941 149.239 503.018 148.892 503.018 148.314 cv
503.057 146.543 li
503.095 145.119 502.633 143.194 500.247 143.194 cv
499.168 143.194 497.86 143.733 497.783 144.926 cv
497.744 145.542 497.706 146.004 497.398 146.236 cv
496.82 146.698 495.781 146.967 495.204 146.967 cv
494.857 146.967 494.665 146.775 494.665 146.428 cv
494.665 144.426 499.014 141.693 501.825 141.693 cv
504.596 141.693 505.944 143.31 505.829 146.197 cv
505.597 152.896 li
505.521 154.667 505.867 156.245 507.369 156.245 cv
507.753 156.245 508.1 156.129 508.331 156.014 cv
508.523 155.899 508.716 155.745 508.832 155.745 cv
508.986 155.745 509.101 155.975 509.101 156.245 cv
509.101 156.437 507.753 157.939 505.867 157.939 cv
504.943 157.939 504.019 157.592 503.365 156.746 cv
503.21 156.514 502.98 156.207 502.749 156.207 cv
502.479 156.207 502.017 156.553 501.248 156.976 cv
500.4 157.438 499.553 157.939 498.475 157.939 cv
497.359 157.939 496.435 157.631 495.781 157.053 cv
495.049 156.399 494.587 155.436 494.587 154.359 cv
494.587 152.857 495.319 151.972 497.783 151.086 cv
502.364 149.431 li
cp
f
532.585 147.506 mo
532.585 144.888 531.43 143.541 529.005 143.541 cv
527.542 143.541 526.349 144.195 525.81 144.888 cv
525.348 145.465 525.232 145.85 525.232 147.198 cv
525.232 153.088 li
525.232 155.86 525.309 156.245 526.695 156.437 cv
527.503 156.553 li
527.773 156.746 527.696 157.4 527.426 157.515 cv
526.272 157.438 525.156 157.4 523.808 157.4 cv
522.422 157.4 521.382 157.438 520.304 157.515 cv
520.035 157.4 519.958 156.746 520.228 156.553 cv
520.92 156.437 li
522.345 156.207 522.383 155.86 522.383 153.088 cv
522.383 147.506 li
522.383 144.926 521.228 143.541 518.841 143.541 cv
517.263 143.541 516.185 144.234 515.608 144.926 cv
515.223 145.388 515.031 145.889 515.031 147.121 cv
515.031 153.088 li
515.031 155.86 515.107 156.207 516.494 156.437 cv
517.186 156.553 li
517.456 156.746 517.378 157.4 517.109 157.515 cv
516.07 157.438 514.954 157.4 513.606 157.4 cv
512.22 157.4 511.065 157.438 509.872 157.515 cv
509.602 157.4 509.525 156.746 509.794 156.553 cv
510.718 156.437 li
512.143 156.245 512.181 155.86 512.181 153.088 cv
512.181 146.351 li
512.181 144.849 512.181 144.657 511.142 143.964 cv
510.795 143.733 li
510.641 143.58 510.641 143.156 510.834 143.041 cv
511.719 142.732 513.914 141.731 514.684 141.154 cv
514.837 141.154 515.031 141.231 515.107 141.423 cv
515.031 142.309 515.031 142.886 515.031 143.233 cv
515.031 143.463 515.184 143.656 515.454 143.656 cv
516.917 142.617 518.726 141.693 520.574 141.693 cv
522.499 141.693 523.577 142.385 524.655 143.964 cv
525.001 144.042 525.271 143.887 525.618 143.656 cv
527.157 142.579 529.043 141.693 530.853 141.693 cv
533.933 141.693 535.434 143.81 535.434 146.466 cv
535.434 153.088 li
535.434 155.86 535.511 156.245 536.897 156.437 cv
537.821 156.553 li
538.09 156.746 538.013 157.4 537.744 157.515 cv
536.474 157.438 535.357 157.4 534.01 157.4 cv
532.624 157.4 531.584 157.438 530.506 157.515 cv
530.237 157.4 530.16 156.746 530.429 156.553 cv
531.123 156.437 li
532.547 156.207 532.585 155.86 532.585 153.088 cv
532.585 147.506 li
cp
f
545.291 135.379 mo
545.291 136.765 544.329 137.381 543.25 137.381 cv
542.057 137.381 541.287 136.496 541.287 135.457 cv
541.287 134.186 542.211 133.377 543.366 133.377 cv
544.521 133.377 545.291 134.301 545.291 135.379 cv
cp
542.095 146.351 mo
542.095 144.849 542.095 144.657 541.056 143.964 cv
540.709 143.733 li
540.555 143.58 540.555 143.156 540.749 143.041 cv
541.633 142.732 543.828 141.731 544.713 141.154 cv
544.906 141.154 545.06 141.231 545.098 141.384 cv
545.021 142.732 544.945 144.581 544.945 146.159 cv
544.945 153.088 li
544.945 155.86 545.021 156.245 546.408 156.437 cv
547.215 156.553 li
547.485 156.746 547.409 157.4 547.139 157.515 cv
545.984 157.438 544.868 157.4 543.52 157.4 cv
542.134 157.4 540.979 157.438 539.901 157.515 cv
539.631 157.4 539.554 156.746 539.824 156.553 cv
540.632 156.437 li
542.057 156.245 542.095 155.86 542.095 153.088 cv
542.095 146.351 li
cp
f
554.068 153.088 mo
554.068 155.86 554.145 156.245 555.531 156.437 cv
556.455 156.553 li
556.724 156.746 556.648 157.4 556.378 157.515 cv
555.108 157.438 553.992 157.4 552.644 157.4 cv
551.258 157.4 550.103 157.438 548.948 157.515 cv
548.678 157.4 548.601 156.746 548.871 156.553 cv
549.756 156.437 li
551.181 156.245 551.219 155.86 551.219 153.088 cv
551.219 135.687 li
551.219 133.416 551.181 133.185 550.026 132.492 cv
549.641 132.261 li
549.449 132.145 549.449 131.606 549.641 131.491 cv
550.603 131.183 552.413 130.605 553.798 129.874 cv
553.953 129.874 554.107 129.951 554.184 130.105 cv
554.145 131.26 554.068 133.185 554.068 134.878 cv
554.068 153.088 li
cp
f
557.879 165.331 mo
557.879 164.292 558.573 163.791 559.419 163.791 cv
560.151 163.791 li
560.767 163.791 561.152 163.521 561.421 163.097 cv
562.538 161.365 563.308 159.749 563.654 158.825 cv
563.77 158.516 564.04 157.708 564.04 157.168 cv
564.04 156.399 563.885 155.937 563.384 154.512 cv
560.382 146.274 li
559.727 144.464 559.458 143.541 558.111 143.271 cv
557.148 143.079 li
556.917 142.886 556.956 142.232 557.263 142.117 cv
558.496 142.193 559.651 142.232 560.92 142.232 cv
561.96 142.232 563.039 142.193 564.27 142.117 cv
564.579 142.232 564.617 142.886 564.347 143.079 cv
563.384 143.271 li
562.846 143.386 562.538 143.502 562.538 143.772 cv
562.538 144.234 563.423 146.736 563.654 147.39 cv
564.886 150.932 li
565.117 151.548 565.848 153.588 566.002 153.666 cv
566.118 153.588 566.734 152.395 567.427 150.817 cv
568.736 147.776 li
569.583 145.774 570.083 144.349 570.083 143.925 cv
570.083 143.656 569.852 143.386 569.16 143.271 cv
567.966 143.079 li
567.697 142.886 567.735 142.232 568.042 142.117 cv
569.275 142.193 570.43 142.232 571.431 142.232 cv
572.393 142.232 573.279 142.193 574.357 142.117 cv
574.665 142.27 574.703 142.848 574.434 143.079 cv
573.779 143.194 li
572.508 143.425 571.816 144.542 570.507 147.275 cv
568.351 151.703 li
567.081 154.282 563.923 160.98 562.038 165.176 cv
561.383 166.639 560.458 166.986 559.574 166.986 cv
558.457 166.986 557.879 166.292 557.879 165.331 cv
cp
f
279.76 189.24 mo
279.76 191.28 279.875 192.512 280.53 193.436 cv
281.377 194.629 282.84 195.014 285.265 195.014 cv
292.734 195.014 296.083 190.125 296.083 182.964 cv
296.083 178.73 294.042 171.569 283.956 171.569 cv
281.685 171.569 280.453 171.877 280.145 172.108 cv
279.837 172.339 279.76 173.301 279.76 175.034 cv
279.76 189.24 li
cp
276.603 175.496 mo
276.603 172.801 276.411 171.993 274.793 171.761 cv
273.947 171.646 li
273.639 171.454 273.6 170.837 273.985 170.684 cv
277.257 170.492 280.376 170.375 283.648 170.375 cv
286.882 170.375 289.615 170.607 292.118 171.531 cv
297.315 173.417 299.933 177.806 299.933 182.887 cv
299.933 187.777 297.584 191.973 293.196 194.36 cv
290.693 195.708 287.537 196.208 284.572 196.208 cv
282.108 196.208 279.645 195.9 278.297 195.9 cv
276.68 195.9 275.294 195.938 273.485 196.015 cv
273.254 195.9 273.177 195.284 273.408 195.053 cv
274.293 194.937 li
276.526 194.629 276.603 194.167 276.603 190.125 cv
276.603 175.496 li
cp
f
308.481 184.889 mo
311.33 184.889 312.177 184.736 312.485 184.504 cv
312.6 184.427 312.715 184.274 312.715 183.773 cv
312.715 182.695 311.984 181.348 309.751 181.348 cv
307.48 181.348 305.517 183.426 305.478 184.697 cv
305.478 184.774 305.478 184.889 305.748 184.889 cv
308.481 184.889 li
cp
306.094 186.044 mo
305.093 186.044 305.055 186.122 305.055 187.083 cv
305.055 190.972 307.326 194.283 311.445 194.283 cv
312.715 194.283 313.793 193.898 314.987 192.397 cv
315.373 192.281 315.641 192.512 315.68 192.859 cv
314.41 195.476 311.638 196.439 309.636 196.439 cv
307.133 196.439 305.17 195.361 304.054 193.898 cv
302.899 192.397 302.437 190.587 302.437 188.893 cv
302.437 184.158 305.555 180.193 310.175 180.193 cv
313.486 180.193 315.641 182.464 315.641 184.774 cv
315.641 185.313 315.565 185.621 315.488 185.775 cv
315.373 186.006 314.833 186.044 313.216 186.044 cv
306.094 186.044 li
cp
f
319.108 184.543 mo
318.53 183.119 318.183 181.886 316.797 181.694 cv
316.028 181.579 li
315.796 181.271 315.835 180.732 316.143 180.617 cv
317.106 180.693 318.453 180.732 319.762 180.732 cv
320.801 180.732 321.572 180.693 322.88 180.617 cv
323.15 180.77 323.188 181.386 322.918 181.579 cv
322.457 181.656 li
321.263 181.848 321.225 182.041 321.61 183.196 cv
322.496 185.852 323.612 188.546 324.498 190.548 cv
324.843 191.319 324.998 191.666 325.113 191.781 cv
325.267 191.666 325.537 191.126 325.844 190.318 cv
326.345 189.008 327.654 185.66 328.039 184.659 cv
328.578 183.311 328.732 182.502 328.732 182.272 cv
328.732 181.925 328.501 181.771 328.039 181.694 cv
327.154 181.579 li
326.922 181.309 326.961 180.77 327.231 180.617 cv
328.424 180.693 329.386 180.732 330.118 180.732 cv
331.081 180.732 331.735 180.693 332.813 180.617 cv
333.083 180.77 333.121 181.348 332.89 181.579 cv
332.312 181.656 li
330.965 181.848 330.619 182.849 329.501 185.005 cv
328.963 186.044 326.576 191.626 325.96 193.205 cv
325.575 194.167 325.19 195.053 324.69 196.362 cv
324.613 196.477 324.458 196.516 324.305 196.516 cv
324.112 196.516 323.919 196.477 323.804 196.362 cv
323.497 195.284 322.918 193.783 322.341 192.358 cv
319.108 184.543 li
cp
f
339.358 184.889 mo
342.207 184.889 343.054 184.736 343.362 184.504 cv
343.477 184.427 343.592 184.274 343.592 183.773 cv
343.592 182.695 342.861 181.348 340.628 181.348 cv
338.357 181.348 336.394 183.426 336.355 184.697 cv
336.355 184.774 336.355 184.889 336.625 184.889 cv
339.358 184.889 li
cp
336.971 186.044 mo
335.97 186.044 335.931 186.122 335.931 187.083 cv
335.931 190.972 338.203 194.283 342.322 194.283 cv
343.592 194.283 344.67 193.898 345.864 192.397 cv
346.25 192.281 346.518 192.512 346.557 192.859 cv
345.287 195.476 342.515 196.439 340.513 196.439 cv
338.01 196.439 336.047 195.361 334.93 193.898 cv
333.776 192.397 333.314 190.587 333.314 188.893 cv
333.314 184.158 336.432 180.193 341.052 180.193 cv
344.363 180.193 346.518 182.464 346.518 184.774 cv
346.518 185.313 346.442 185.621 346.365 185.775 cv
346.25 186.006 345.71 186.044 344.093 186.044 cv
336.971 186.044 li
cp
f
353.063 191.588 mo
353.063 194.36 353.14 194.745 354.526 194.937 cv
355.451 195.053 li
355.719 195.246 355.643 195.9 355.374 196.015 cv
354.103 195.938 352.986 195.9 351.639 195.9 cv
350.253 195.9 349.098 195.938 347.943 196.015 cv
347.673 195.9 347.596 195.246 347.866 195.053 cv
348.751 194.937 li
350.176 194.745 350.214 194.36 350.214 191.588 cv
350.214 174.187 li
350.214 171.916 350.176 171.685 349.021 170.992 cv
348.636 170.761 li
348.444 170.645 348.444 170.106 348.636 169.991 cv
349.598 169.683 351.408 169.105 352.793 168.374 cv
352.948 168.374 353.102 168.451 353.179 168.605 cv
353.14 169.76 353.063 171.685 353.063 173.378 cv
353.063 191.588 li
cp
f
365.037 181.348 mo
362.496 181.348 360.609 183.773 360.609 188.008 cv
360.609 191.511 362.187 195.284 365.575 195.284 cv
368.963 195.284 370.002 191.742 370.002 188.778 cv
370.002 185.505 368.694 181.348 365.037 181.348 cv
cp
373.313 188.162 mo
373.313 192.974 370.002 196.439 365.19 196.439 cv
360.763 196.439 357.298 193.321 357.298 188.508 cv
357.298 183.658 360.956 180.193 365.499 180.193 cv
369.81 180.193 373.313 183.426 373.313 188.162 cv
cp
f
380.398 192.011 mo
380.398 193.244 380.783 193.706 381.553 194.322 cv
382.323 194.899 383.516 195.168 384.325 195.168 cv
387.482 195.168 389.33 192.243 389.33 188.239 cv
389.33 185.159 387.597 182.041 384.132 182.041 cv
382.477 182.041 381.284 182.657 380.86 183.119 cv
380.513 183.542 380.398 184.12 380.398 185.39 cv
380.398 192.011 li
cp
377.549 184.851 mo
377.549 183.349 377.549 183.157 376.509 182.464 cv
376.164 182.233 li
376.009 182.08 376.009 181.656 376.202 181.541 cv
377.203 181.117 379.012 180.193 380.013 179.461 cv
380.244 179.461 380.398 179.539 380.475 179.731 cv
380.398 180.423 380.321 181.001 380.321 181.501 cv
380.321 181.771 380.398 182.002 380.667 182.002 cv
381.168 181.771 383.593 180.193 386.057 180.193 cv
389.946 180.193 392.448 183.349 392.448 187.238 cv
392.448 192.589 388.521 196.439 383.054 196.439 cv
382.362 196.439 381.284 196.362 380.937 196.285 cv
380.59 196.362 380.398 196.554 380.398 197.363 cv
380.398 201.405 li
380.398 204.138 380.475 204.485 381.861 204.677 cv
383.363 204.87 li
383.632 205.062 383.555 205.717 383.286 205.833 cv
381.437 205.755 380.321 205.717 378.973 205.717 cv
377.587 205.717 376.433 205.755 375.355 205.833 cv
375.085 205.717 375.008 205.062 375.278 204.87 cv
376.086 204.754 li
377.51 204.562 377.549 204.177 377.549 201.405 cv
377.549 184.851 li
cp
f
417.587 186.006 mo
417.587 183.388 416.432 182.041 414.007 182.041 cv
412.544 182.041 411.351 182.695 410.812 183.388 cv
410.35 183.965 410.234 184.35 410.234 185.698 cv
410.234 191.588 li
410.234 194.36 410.311 194.745 411.697 194.937 cv
412.505 195.053 li
412.775 195.246 412.698 195.9 412.428 196.015 cv
411.274 195.938 410.158 195.9 408.81 195.9 cv
407.424 195.9 406.384 195.938 405.306 196.015 cv
405.037 195.9 404.96 195.246 405.23 195.053 cv
405.922 194.937 li
407.347 194.707 407.385 194.36 407.385 191.588 cv
407.385 186.006 li
407.385 183.426 406.23 182.041 403.843 182.041 cv
402.265 182.041 401.187 182.734 400.61 183.426 cv
400.225 183.888 400.033 184.389 400.033 185.621 cv
400.033 191.588 li
400.033 194.36 400.109 194.707 401.496 194.937 cv
402.188 195.053 li
402.458 195.246 402.38 195.9 402.111 196.015 cv
401.072 195.938 399.956 195.9 398.608 195.9 cv
397.222 195.9 396.067 195.938 394.874 196.015 cv
394.604 195.9 394.527 195.246 394.796 195.053 cv
395.72 194.937 li
397.145 194.745 397.183 194.36 397.183 191.588 cv
397.183 184.851 li
397.183 183.349 397.183 183.157 396.144 182.464 cv
395.797 182.233 li
395.643 182.08 395.643 181.656 395.836 181.541 cv
396.721 181.232 398.916 180.231 399.686 179.654 cv
399.839 179.654 400.033 179.731 400.109 179.923 cv
400.033 180.809 400.033 181.386 400.033 181.733 cv
400.033 181.963 400.186 182.156 400.456 182.156 cv
401.918 181.117 403.728 180.193 405.576 180.193 cv
407.5 180.193 408.579 180.885 409.657 182.464 cv
410.003 182.542 410.273 182.387 410.62 182.156 cv
412.159 181.079 414.045 180.193 415.855 180.193 cv
418.935 180.193 420.436 182.31 420.436 184.966 cv
420.436 191.588 li
420.436 194.36 420.513 194.745 421.899 194.937 cv
422.823 195.053 li
423.092 195.246 423.015 195.9 422.746 196.015 cv
421.476 195.938 420.359 195.9 419.012 195.9 cv
417.625 195.9 416.586 195.938 415.508 196.015 cv
415.239 195.9 415.162 195.246 415.431 195.053 cv
416.125 194.937 li
417.549 194.707 417.587 194.36 417.587 191.588 cv
417.587 186.006 li
cp
f
430.716 184.889 mo
433.565 184.889 434.412 184.736 434.72 184.504 cv
434.835 184.427 434.951 184.274 434.951 183.773 cv
434.951 182.695 434.219 181.348 431.987 181.348 cv
429.715 181.348 427.752 183.426 427.713 184.697 cv
427.713 184.774 427.713 184.889 427.983 184.889 cv
430.716 184.889 li
cp
428.33 186.044 mo
427.329 186.044 427.29 186.122 427.29 187.083 cv
427.29 190.972 429.561 194.283 433.68 194.283 cv
434.951 194.283 436.029 193.898 437.222 192.397 cv
437.608 192.281 437.876 192.512 437.916 192.859 cv
436.645 195.476 433.874 196.439 431.872 196.439 cv
429.369 196.439 427.406 195.361 426.289 193.898 cv
425.134 192.397 424.672 190.587 424.672 188.893 cv
424.672 184.158 427.791 180.193 432.411 180.193 cv
435.721 180.193 437.876 182.464 437.876 184.774 cv
437.876 185.313 437.8 185.621 437.723 185.775 cv
437.608 186.006 437.069 186.044 435.452 186.044 cv
428.33 186.044 li
cp
f
441.958 184.851 mo
441.958 183.349 441.958 183.157 440.919 182.464 cv
440.573 182.233 li
440.418 182.08 440.418 181.656 440.612 181.541 cv
441.497 181.232 443.691 180.231 444.461 179.654 cv
444.615 179.654 444.808 179.731 444.884 179.923 cv
444.808 180.809 444.808 181.386 444.808 181.733 cv
444.808 181.963 444.961 182.156 445.231 182.156 cv
446.848 181.155 448.658 180.193 450.621 180.193 cv
453.816 180.193 455.125 182.387 455.125 184.966 cv
455.125 191.588 li
455.125 194.36 455.202 194.745 456.588 194.937 cv
457.435 195.053 li
457.705 195.246 457.627 195.9 457.358 196.015 cv
456.203 195.938 455.086 195.9 453.739 195.9 cv
452.353 195.9 451.199 195.938 450.159 196.015 cv
449.889 195.9 449.812 195.246 450.082 195.053 cv
450.813 194.937 li
452.238 194.707 452.276 194.36 452.276 191.588 cv
452.276 185.852 li
452.276 183.658 451.275 182.041 448.658 182.041 cv
447.195 182.041 445.924 182.657 445.385 183.388 cv
444.884 184.042 444.808 184.582 444.808 185.698 cv
444.808 191.588 li
444.808 194.36 444.884 194.707 446.271 194.937 cv
446.963 195.053 li
447.233 195.246 447.156 195.9 446.886 196.015 cv
445.847 195.938 444.731 195.9 443.383 195.9 cv
441.998 195.9 440.842 195.938 439.764 196.015 cv
439.495 195.9 439.417 195.246 439.687 195.053 cv
440.496 194.937 li
441.92 194.745 441.958 194.36 441.958 191.588 cv
441.958 184.851 li
cp
f
464.943 182.349 mo
464.289 182.349 464.25 182.464 464.25 183.273 cv
464.25 190.472 li
464.25 192.705 464.519 194.745 467.06 194.745 cv
467.445 194.745 467.792 194.667 468.1 194.552 cv
468.446 194.437 468.947 194.013 469.062 194.013 cv
469.37 194.013 469.524 194.437 469.447 194.667 cv
468.754 195.476 467.369 196.439 465.405 196.439 cv
462.094 196.439 461.401 194.591 461.401 192.281 cv
461.401 183.465 li
461.401 182.425 461.363 182.349 460.592 182.349 cv
459.514 182.349 li
459.284 182.195 459.246 181.771 459.399 181.541 cv
460.515 181.194 461.478 180.693 461.863 180.347 cv
462.364 179.884 463.095 178.845 463.48 178.076 cv
463.672 177.999 464.134 177.999 464.289 178.268 cv
464.289 180 li
464.289 180.693 464.327 180.732 464.981 180.732 cv
469.254 180.732 li
469.716 181.079 469.639 182.118 469.293 182.349 cv
464.943 182.349 li
cp
f
247.152 49.3384 mo
247.152 196.464 li
248.707 196.464 li
248.707 49.3384 li
247.152 49.3384 li
cp
f
77.1445 161.316 mo
77.1445 162.61 77.2246 164.444 77.9824 165.236 cv
78.7417 166.062 79.939 166.244 81.1357 166.244 cv
84.687 166.244 87.4004 164.803 87.4004 161.208 cv
87.4004 158.369 85.8047 155.061 79.459 155.061 cv
77.3047 155.061 77.1445 155.277 77.1445 155.996 cv
77.1445 161.316 li
cp
77.1445 152.973 mo
77.1445 153.983 77.1851 154.053 79.2197 153.983 cv
83.29 153.836 85.4858 152.759 85.4858 149.379 cv
85.4858 145.856 82.5713 144.527 79.5396 144.527 cv
78.6616 144.527 78.063 144.598 77.7036 144.743 cv
77.3047 144.851 77.1445 145.031 77.1445 145.677 cv
77.1445 152.973 li
cp
73.8721 148.195 mo
73.8721 145.534 73.6851 144.828 71.8887 144.684 cv
70.6396 144.598 li
70.4365 144.437 70.4941 143.716 70.6792 143.701 cv
72.834 143.507 75.5483 143.413 79.2598 143.413 cv
81.7739 143.413 84.168 143.59 85.9644 144.418 cv
87.6802 145.174 88.9971 146.611 88.9971 148.913 cv
88.9971 151.501 87.3213 152.833 84.9263 153.836 cv
84.9263 154.198 85.2456 154.306 85.6851 154.377 cv
87.8398 154.738 91.0322 156.535 91.0322 160.38 cv
91.0322 164.552 87.6006 167.357 80.4165 167.357 cv
79.2598 167.357 77.3047 167.249 75.6284 167.249 cv
73.8721 167.249 72.5156 167.322 71.0391 167.357 cv
70.8003 167.249 70.7197 166.674 70.959 166.458 cv
71.6782 166.349 li
73.792 166.026 73.8721 165.63 73.8721 161.856 cv
73.8721 148.195 li
cp
f
118.769 151.733 mo
118.769 148.477 118.701 147.956 116.689 147.802 cv
115.837 147.742 li
115.633 147.618 115.702 147.067 115.906 146.971 cv
117.611 147.035 118.769 147.067 120.201 147.067 cv
121.564 147.067 122.723 147.035 124.427 146.971 cv
124.632 147.067 124.7 147.618 124.496 147.742 cv
123.644 147.802 li
121.633 147.956 121.564 148.477 121.564 151.733 cv
121.564 162.666 li
121.564 165.92 121.633 166.351 123.644 166.566 cv
124.496 166.658 li
124.7 166.78 124.632 167.333 124.427 167.425 cv
122.723 167.364 121.564 167.333 120.201 167.333 cv
118.769 167.333 117.611 167.364 115.906 167.425 cv
115.702 167.333 115.633 166.843 115.837 166.658 cv
116.689 166.566 li
118.701 166.351 118.769 165.92 118.769 162.666 cv
118.769 151.733 li
cp
f
137.68 162.727 mo
137.68 165.951 137.744 166.411 139.597 166.566 cv
140.618 166.658 li
140.81 166.78 140.747 167.333 140.554 167.425 cv
138.734 167.364 137.649 167.333 136.371 167.333 cv
135.094 167.333 133.976 167.364 131.932 167.425 cv
131.74 167.333 131.676 166.811 131.932 166.658 cv
133.082 166.566 li
134.901 166.411 135.061 165.951 135.061 162.727 cv
135.061 149 li
135.061 148.047 135.061 148.019 134.103 148.019 cv
132.347 148.019 li
130.973 148.019 129.216 148.079 128.418 148.785 cv
127.651 149.459 127.333 150.137 126.982 150.904 cv
126.726 151.088 126.279 150.935 126.15 150.689 cv
126.662 149.308 127.141 147.342 127.364 146.113 cv
127.46 146.052 127.876 146.022 127.971 146.113 cv
128.163 147.096 129.216 147.067 130.686 147.067 cv
143.621 147.067 li
145.345 147.067 145.632 147.002 146.112 146.207 cv
146.271 146.144 146.623 146.175 146.687 146.296 cv
146.335 147.557 146.112 150.044 146.208 150.965 cv
146.081 151.211 145.537 151.211 145.377 151.027 cv
145.281 150.259 145.058 149.123 144.579 148.785 cv
143.844 148.262 142.631 148.019 140.874 148.019 cv
138.607 148.019 li
137.649 148.019 137.68 148.047 137.68 149.062 cv
137.68 162.727 li
cp
f
151.369 151.733 mo
151.369 148.477 151.3 147.956 149.29 147.802 cv
148.438 147.742 li
148.232 147.618 148.301 147.067 148.506 146.971 cv
150.21 147.035 151.369 147.067 152.801 147.067 cv
154.164 147.067 155.323 147.035 157.028 146.971 cv
157.232 147.067 157.3 147.618 157.097 147.742 cv
156.243 147.802 li
154.232 147.956 154.164 148.477 154.164 151.733 cv
154.164 162.666 li
154.164 165.92 154.232 166.351 156.243 166.566 cv
157.097 166.658 li
157.3 166.78 157.232 167.333 157.028 167.425 cv
155.323 167.364 154.164 167.333 152.801 167.333 cv
151.369 167.333 150.21 167.364 148.506 167.425 cv
148.301 167.333 148.232 166.843 148.438 166.658 cv
149.29 166.566 li
151.3 166.351 151.369 165.92 151.369 162.666 cv
151.369 151.733 li
cp
f
166.644 167.742 mo
163.601 167.742 161.68 166.941 160.991 166.605 cv
160.556 165.927 160.086 163.748 160.013 162.303 cv
160.194 162.089 160.738 162.029 160.883 162.212 cv
161.426 163.78 162.911 166.787 167.116 166.787 cv
170.159 166.787 171.645 165.099 171.645 163.256 cv
171.645 161.906 171.319 160.4 168.673 158.958 cv
165.232 157.053 li
163.419 156.04 161.317 154.29 161.317 151.771 cv
161.317 148.854 163.999 146.489 168.709 146.489 cv
169.833 146.489 171.138 146.673 172.079 146.888 cv
172.551 147.011 173.058 147.073 173.347 147.073 cv
173.674 147.81 174.001 149.529 174.001 150.819 cv
173.855 151.002 173.276 151.095 173.094 150.913 cv
172.624 149.436 171.645 147.44 168.166 147.44 cv
164.615 147.44 163.854 149.436 163.854 150.849 cv
163.854 152.631 165.593 153.92 166.934 154.627 cv
169.833 156.163 li
172.116 157.359 174.362 159.14 174.362 162.058 cv
174.362 165.436 171.355 167.742 166.644 167.742 cv
cp
f
184.884 157.415 mo
183.298 157.415 183.231 157.476 183.231 158.397 cv
183.231 162.727 li
183.231 165.951 183.396 166.381 185.248 166.566 cv
186.205 166.658 li
186.404 166.78 186.337 167.333 186.14 167.425 cv
184.355 167.364 183.231 167.333 181.943 167.333 cv
180.521 167.333 179.397 167.395 178.109 167.425 cv
177.911 167.333 177.845 166.843 178.044 166.658 cv
178.604 166.566 li
180.457 166.259 180.521 165.951 180.521 162.727 cv
180.521 151.672 li
180.521 148.448 180.291 147.926 178.572 147.802 cv
177.712 147.742 li
177.514 147.618 177.581 147.067 177.779 146.971 cv
179.397 147.002 180.521 147.067 181.943 147.067 cv
183.231 147.067 184.355 147.035 185.775 146.971 cv
185.974 147.067 186.041 147.618 185.842 147.742 cv
185.214 147.802 li
183.298 147.988 183.231 148.448 183.231 151.672 cv
183.231 155.203 li
183.231 156.155 183.298 156.185 184.884 156.185 cv
194.335 156.185 li
195.92 156.185 195.988 156.155 195.988 155.203 cv
195.988 151.672 li
195.988 148.448 195.92 147.988 193.972 147.802 cv
193.344 147.742 li
193.144 147.618 193.21 147.067 193.41 146.971 cv
194.929 147.035 196.054 147.067 197.408 147.067 cv
198.697 147.067 199.82 147.035 201.306 146.971 cv
201.505 147.067 201.571 147.618 201.373 147.742 cv
200.679 147.802 li
198.763 147.988 198.697 148.448 198.697 151.672 cv
198.697 162.727 li
198.697 165.951 198.763 166.351 200.679 166.566 cv
201.472 166.658 li
201.671 166.78 201.605 167.333 201.406 167.425 cv
199.82 167.364 198.697 167.333 197.408 167.333 cv
196.054 167.333 194.864 167.364 193.41 167.425 cv
193.21 167.333 193.144 166.843 193.344 166.658 cv
193.972 166.566 li
195.988 166.259 195.988 165.951 195.988 162.727 cv
195.988 158.397 li
195.988 157.476 195.92 157.415 194.335 157.415 cv
184.884 157.415 li
cp
f
54.9604 174.173 mo
57.6758 172.06 61.1362 171.022 65.0059 171.022 cv
67.0151 171.022 69.8428 171.428 71.5913 171.911 cv
72.0381 172.023 72.2988 172.097 72.6328 172.06 cv
72.6704 172.913 72.8564 175.249 73.1543 177.511 cv
72.9678 177.769 72.4102 177.807 72.1494 177.584 cv
71.5913 175.063 69.917 172.171 64.5215 172.171 cv
58.8296 172.171 53.9917 175.767 53.9917 183.443 cv
53.9917 191.228 58.9409 195.53 65.042 195.53 cv
69.8428 195.53 71.9639 192.415 72.8193 190.228 cv
73.0796 190.043 73.6382 190.115 73.7866 190.375 cv
73.5264 192.304 72.5591 194.751 72.0005 195.456 cv
71.5547 195.53 71.1074 195.677 70.6987 195.825 cv
69.8794 196.122 67.2012 196.68 64.8193 196.68 cv
61.4717 196.68 58.271 196.012 55.5547 194.194 cv
52.5781 192.157 50.2715 188.782 50.2715 184 cv
50.2715 179.882 52.1323 176.361 54.9604 174.173 cv
cp
f
94.7529 186.811 mo
94.7529 181.744 92.3994 176.277 86.2407 176.277 cv
82.8862 176.277 78.5337 178.458 78.5337 185.184 cv
78.5337 189.728 80.855 195.625 87.2075 195.625 cv
91.0767 195.625 94.7529 192.862 94.7529 186.811 cv
cp
75.3091 186.166 mo
75.3091 180.025 80.1455 175.326 86.7881 175.326 cv
94.2373 175.326 97.9766 180.454 97.9766 185.858 cv
97.9766 192.061 93.0117 196.58 86.7881 196.58 cv
79.6304 196.58 75.3091 191.694 75.3091 186.166 cv
cp
f
134.355 183.525 mo
134.355 181.623 134.29 178.091 133.736 177.168 cv
133.509 176.8 132.923 176.585 132.109 176.523 cv
131.295 176.461 li
131.1 176.247 131.166 175.848 131.36 175.724 cv
132.598 175.786 133.801 175.816 135.071 175.816 cv
136.438 175.816 137.318 175.786 138.49 175.725 cv
138.75 175.88 138.717 176.277 138.555 176.461 cv
137.774 176.523 li
136.959 176.585 136.341 176.862 136.146 177.262 cv
135.69 178.273 135.69 181.806 135.69 183.525 cv
135.69 186.996 li
135.69 189.667 135.233 192.493 133.412 194.336 cv
132.012 195.778 129.603 196.58 127.194 196.58 cv
124.948 196.58 122.702 196.178 121.107 194.888 cv
119.382 193.538 118.568 191.296 118.568 187.64 cv
118.568 180.392 li
118.568 177.199 118.502 176.677 116.615 176.523 cv
115.8 176.461 li
115.606 176.339 115.67 175.817 115.866 175.724 cv
117.494 175.786 118.6 175.816 119.903 175.816 cv
121.237 175.816 122.312 175.786 123.906 175.725 cv
124.101 175.817 124.167 176.339 123.972 176.461 cv
123.189 176.523 li
121.302 176.677 121.237 177.199 121.237 180.392 cv
121.237 187.026 li
121.237 191.971 122.865 195.225 127.845 195.225 cv
132.565 195.225 134.355 191.724 134.355 187.057 cv
134.355 183.525 li
cp
f
175.141 191.01 mo
175.141 192.126 175.213 193.71 175.896 194.392 cv
176.581 195.105 177.66 195.259 178.739 195.259 cv
181.94 195.259 184.387 194.018 184.387 190.918 cv
184.387 188.467 182.948 185.615 177.228 185.615 cv
175.285 185.615 175.141 185.8 175.141 186.419 cv
175.141 191.01 li
cp
175.141 183.814 mo
175.141 184.683 175.178 184.745 177.012 184.683 cv
180.682 184.559 182.661 183.629 182.661 180.711 cv
182.661 177.673 180.034 176.525 177.3 176.525 cv
176.508 176.525 175.969 176.587 175.644 176.711 cv
175.285 176.804 175.141 176.958 175.141 177.518 cv
175.141 183.814 li
cp
172.19 179.69 mo
172.19 177.393 172.046 176.804 170.428 176.679 cv
169.276 176.569 li
169.145 176.451 169.075 175.828 169.312 175.811 cv
171.255 175.667 173.702 175.565 177.048 175.565 cv
179.315 175.565 181.473 175.719 183.093 176.432 cv
184.64 177.083 185.826 178.325 185.826 180.31 cv
185.826 182.544 184.316 183.692 182.157 184.559 cv
182.157 184.868 182.444 184.963 182.841 185.025 cv
184.784 185.334 187.662 186.886 187.662 190.205 cv
187.662 193.801 184.568 196.222 178.09 196.222 cv
177.048 196.222 175.285 196.125 173.773 196.125 cv
172.19 196.125 170.969 196.19 169.635 196.222 cv
169.42 196.125 169.348 195.631 169.564 195.446 cv
170.212 195.354 li
172.119 195.074 172.19 194.733 172.19 191.477 cv
172.19 179.69 li
cp
f
101.135 156.568 mo
100.516 156.568 99.2783 156.798 99.2783 155.976 cv
99.2783 150.084 li
99.2783 147.783 99.3516 147.452 102.117 147.452 cv
105.357 147.452 107.359 149.097 107.359 152.125 cv
107.359 153.442 106.885 154.659 105.684 155.481 cv
104.301 156.436 102.809 156.568 101.135 156.568 cv
cp
113.559 166.658 mo
112.707 166.583 li
112.534 166.566 112.381 166.544 112.235 166.521 cv
110.988 166.299 110.489 165.189 109.901 164.159 cv
106.954 159.026 li
106.445 158.169 105.898 157.017 104.733 156.855 cv
107.755 156.492 110.484 154.749 110.484 151.755 cv
110.484 148.297 107.063 146.751 103.606 146.751 cv
101.531 146.751 99.6406 146.807 97.5298 146.807 cv
96.3652 146.807 94.98 146.751 93.8159 146.751 cv
93.1689 146.751 93.1611 146.884 93.1611 147.244 cv
93.1611 147.78 93.3867 147.63 94.0718 147.667 cv
96.5303 147.806 96.436 148.264 96.436 150.371 cv
96.436 163.83 li
96.436 165.756 96.603 166.331 94.5801 166.514 cv
94.5801 166.514 94.271 166.544 94.0947 166.563 cv
93.2378 166.652 li
93.0342 166.835 93.1016 167.327 93.3066 167.419 cv
93.7622 167.402 94.5703 167.37 94.5703 167.37 cv
95.6895 167.337 96.8091 167.25 97.9287 167.25 cv
99.0532 167.25 100.131 167.338 101.238 167.37 cv
101.238 167.372 li
101.632 167.383 102.046 167.398 102.501 167.414 cv
102.706 167.322 102.774 166.831 102.569 166.647 cv
101.707 166.565 li
101.531 166.546 101.229 166.519 101.229 166.519 cv
99.186 166.379 99.312 165.805 99.312 163.83 cv
99.312 158.763 li
99.312 158.465 99.2744 157.676 99.4932 157.447 cv
99.6753 157.249 100.002 157.281 100.293 157.281 cv
103.061 157.281 103.023 157.543 104.334 159.848 cv
107.901 166.265 li
108.19 166.758 108.409 167.383 109.138 167.383 cv
112.236 167.383 li
112.626 167.397 113.038 167.41 113.49 167.425 cv
113.695 167.333 113.763 166.843 113.559 166.658 cv
cp
f
101.802 180.497 mo
101.802 177.274 101.736 176.781 99.6079 176.628 cv
98.7632 176.566 li
98.5601 176.443 98.6274 175.892 98.8306 175.798 cv
100.722 175.86 101.871 175.891 103.222 175.891 cv
104.539 175.891 105.688 175.86 107.377 175.799 cv
107.58 175.892 107.647 176.443 107.444 176.566 cv
106.634 176.628 li
104.641 176.781 104.573 177.274 104.573 180.497 cv
104.573 191.184 li
104.573 193.12 104.674 193.916 105.282 194.501 cv
105.653 194.838 106.295 195.207 108.964 195.207 cv
111.836 195.207 112.545 195.086 113.086 194.808 cv
113.762 194.44 114.64 193.333 115.315 191.768 cv
115.519 191.615 116.16 191.738 116.16 191.953 cv
116.16 192.291 115.214 195.421 114.741 196.25 cv
113.019 196.19 109.809 196.16 106.33 196.16 cv
103.222 196.16 li
101.802 196.16 100.722 196.19 98.8306 196.25 cv
98.6274 196.16 98.5601 195.667 98.7632 195.484 cv
99.7764 195.392 li
101.736 195.207 101.802 194.777 101.802 191.554 cv
101.802 180.497 li
cp
f
192.296 180.558 mo
192.296 177.303 192.231 176.781 190.274 176.628 cv
189.445 176.566 li
189.246 176.443 189.312 175.892 189.511 175.798 cv
191.169 175.86 192.296 175.891 193.691 175.891 cv
195.017 175.891 196.144 175.86 197.803 175.799 cv
198.001 175.892 198.068 176.443 197.869 176.566 cv
197.04 176.628 li
195.083 176.781 195.017 177.303 195.017 180.558 cv
195.017 191.492 li
195.017 194.746 195.083 195.177 197.04 195.392 cv
197.869 195.484 li
198.068 195.607 198.001 196.16 197.803 196.25 cv
196.144 196.19 195.017 196.16 193.691 196.16 cv
192.296 196.16 191.169 196.19 189.511 196.25 cv
189.312 196.16 189.246 195.667 189.445 195.484 cv
190.274 195.392 li
192.231 195.177 192.296 194.746 192.296 191.492 cv
192.296 180.558 li
cp
f
165.795 195.385 mo
165.625 195.367 165.307 195.34 165.307 195.34 cv
164.956 195.306 164.644 195.256 164.396 194.984 cv
163.965 194.528 164 193.225 164 192.704 cv
164 179.247 li
164 178.659 163.857 177.389 164.287 176.933 cv
164.503 176.692 164.95 176.653 165.349 176.629 cv
165.349 176.628 li
165.59 176.61 165.597 176.61 165.81 176.598 cv
166.663 176.539 li
166.867 176.415 166.798 175.862 166.593 175.769 cv
166.139 175.786 165.724 175.78 165.331 175.792 cv
165.331 175.792 li
161.707 175.792 li
161.313 175.792 160.955 175.792 160.739 176.218 cv
153.356 191.595 li
146.834 176.738 li
146.618 176.218 146.583 175.792 145.901 175.792 cv
142.13 175.792 li
141.737 175.782 141.303 175.786 140.848 175.769 cv
140.644 175.862 140.576 176.415 140.779 176.539 cv
141.632 176.598 li
141.808 176.614 142.127 176.634 142.127 176.634 cv
143.541 176.724 143.628 177.041 143.5 178.53 cv
142.389 192.964 li
142.292 194.414 142.212 195.178 140.695 195.32 cv
140.695 195.32 140.373 195.362 140.197 195.379 cv
139.345 195.47 li
139.141 195.654 139.209 196.146 139.414 196.239 cv
139.863 196.223 140.661 196.199 140.661 196.199 cv
141.431 196.162 142.215 196.091 142.999 196.091 cv
143.844 196.091 144.691 196.171 145.538 196.206 cv
145.538 196.207 li
145.93 196.22 146.345 196.233 146.8 196.25 cv
147.005 196.158 147.073 195.667 146.87 195.482 cv
146.016 195.39 li
145.792 195.372 145.541 195.348 145.541 195.348 cv
143.35 195.198 143.399 193.65 143.535 191.76 cv
144.576 178.335 li
144.826 178.335 li
151.887 194.855 li
151.958 195.082 152.065 195.473 152.424 195.473 cv
152.748 195.473 152.854 195.116 152.962 194.886 cv
160.917 177.943 li
161.17 177.943 li
161.17 192.704 li
161.17 193.29 161.241 194.497 160.632 194.952 cv
160.313 195.188 159.278 195.332 159.278 195.332 cv
159.136 195.354 158.985 195.374 158.816 195.392 cv
157.965 195.484 li
157.759 195.667 157.827 196.16 158.032 196.25 cv
158.481 196.237 159.278 196.21 159.278 196.21 cv
160.433 196.178 161.607 196.091 162.782 196.091 cv
163.626 196.091 165.28 196.173 165.28 196.173 cv
165.674 196.185 166.123 196.228 166.579 196.245 cv
166.784 196.153 166.851 195.661 166.646 195.476 cv
165.795 195.385 li
cp
f
212.228 187.868 mo
208.24 187.868 li
208.1 187.868 206.992 187.998 206.992 187.671 cv
206.992 187.575 207.06 187.378 207.095 187.282 cv
209.489 181.354 li
209.558 181.192 209.8 180.377 210.078 180.377 cv
210.287 180.377 210.563 181.225 210.632 181.354 cv
212.99 186.891 li
212.99 186.956 213.233 187.476 213.233 187.607 cv
213.233 187.965 212.435 187.868 212.228 187.868 cv
cp
221.179 195.467 mo
221.066 195.376 li
220.895 195.358 220.744 195.337 220.602 195.315 cv
219.273 195.018 218.755 193.417 218.265 192.279 cv
211.431 176.103 li
211.364 175.91 211.228 175.491 210.957 175.491 cv
210.585 175.491 210.484 175.942 210.381 176.2 cv
203.852 192.343 li
203.615 192.954 203.006 194.437 202.566 194.888 cv
202.23 195.233 201.79 195.301 201.322 195.348 cv
201.322 195.348 200.954 195.384 200.779 195.403 cv
199.975 195.484 li
199.771 195.667 199.839 196.16 200.043 196.25 cv
200.5 196.237 201.306 196.206 201.306 196.206 cv
202.201 196.194 203.093 196.081 203.988 196.081 cv
204.74 196.081 205.492 196.162 206.244 196.194 cv
206.244 196.194 207.05 196.224 207.505 196.241 cv
207.71 196.147 207.779 195.656 207.574 195.472 cv
206.722 195.38 li
206.552 195.363 206.259 195.334 206.259 195.334 cv
205.474 195.247 204.496 195.107 204.496 194.244 cv
204.496 193.663 204.765 192.987 204.969 192.471 cv
205.983 190.056 li
206.492 188.896 206.289 188.766 207.641 188.766 cv
212.242 188.766 li
213.867 188.766 213.628 188.766 214.341 190.412 cv
215.423 192.859 li
215.593 193.278 215.896 193.986 215.896 194.437 cv
215.896 195.247 215.012 195.302 214.187 195.371 cv
214.187 195.371 213.913 195.394 213.675 195.411 cv
212.855 195.47 li
212.65 195.655 212.718 196.146 212.923 196.24 cv
213.378 196.223 214.187 196.19 214.187 196.19 cv
215.15 196.155 216.117 196.081 217.046 196.081 cv
218.232 196.081 219.417 196.162 220.602 196.194 cv
220.602 196.194 li
220.99 196.205 220.662 196.22 221.111 196.237 cv
221.316 196.143 221.384 195.652 221.179 195.467 cv
cp
f
177.906 101.259 mo
180.504 102.335 li
186.264 98.3179 li
177.906 101.259 li
cp
120.787 85.875 mo
106.84 58.0859 li
107.667 57.7222 li
119.194 79.8101 li
109.497 56.917 li
110.362 56.5322 li
121.509 81.5942 li
112.118 55.8228 li
113.007 55.4985 li
121.935 78.7036 li
114.883 54.8062 li
115.729 54.4937 li
125.012 84.1333 li
124.994 84.2119 li
125.017 84.2031 li
125.634 83.9961 126.261 83.8135 126.893 83.6416 cv
126.187 69.4053 124.08 57.2271 124.08 57.2271 cv
124.08 57.2271 126.688 69.2983 131.363 82.7573 cv
132.015 82.6772 132.669 82.6094 133.331 82.564 cv
133.311 82.5332 li
133.391 82.5332 li
133.344 82.4653 li
130.846 51.5073 li
131.749 51.4795 li
134.163 76.2778 li
133.748 51.418 li
134.693 51.3862 li
135.64 78.7998 li
136.586 51.3857 li
137.533 51.418 li
137.118 76.2778 li
139.532 51.48 li
140.434 51.5073 li
137.936 82.4653 li
137.888 82.5332 li
137.902 82.5332 li
137.895 82.543 li
137.936 82.543 li
138.583 82.583 139.223 82.6484 139.859 82.7251 cv
144.528 69.2783 147.131 57.2271 147.131 57.2271 cv
147.131 57.2271 145.032 69.3682 144.322 83.5786 cv
144.96 83.7476 145.59 83.9321 146.212 84.1357 cv
155.461 54.5996 li
156.308 54.9121 li
149.257 78.8086 li
158.186 55.6035 li
159.073 55.9282 li
149.682 81.6997 li
160.83 56.6372 li
161.694 57.0215 li
151.996 79.915 li
163.524 57.8276 li
164.351 58.1919 li
150.487 85.8599 li
150.511 85.8696 li
151.081 86.1475 151.641 86.4448 152.193 86.752 cv
161.572 76.0249 168.512 65.8091 168.512 65.8091 cv
168.512 65.8091 161.999 76.3076 156.011 89.2412 cv
156.546 89.646 157.068 90.0625 157.577 90.4961 cv
177.197 66.5977 li
177.867 67.2051 li
162.376 86.7207 li
179.347 68.5493 li
180.048 69.1831 li
161.687 89.5605 li
181.411 70.4985 li
182.07 71.1797 li
164.501 88.7734 li
183.465 72.6123 li
184.095 73.2588 li
160.887 93.7095 li
160.9 93.7231 li
161.306 94.1753 161.695 94.6411 162.079 95.1138 cv
174.822 88.6704 185.12 81.7744 185.12 81.7744 cv
185.12 81.7744 175.113 89.0942 164.698 98.8677 cv
164.982 99.3442 165.443 100.158 165.707 100.648 cv
192.857 85.8647 li
193.25 86.6797 li
171.577 98.9702 li
194.119 88.4805 li
194.532 89.3311 li
173.536 99.562 li
173.939 99.7026 li
195.302 91.061 li
195.658 91.9385 li
175.8 100.385 li
176.171 100.539 li
189.403 96.1279 li
191.398 94.7358 li
192.06 95.2412 li
196.414 93.7896 li
196.757 94.6245 li
192.99 95.9502 li
198.433 100.104 li
191.144 96.0391 li
180.545 103.472 li
173.416 100.696 li
171.002 101.916 156.111 111.873 156.111 111.873 cv
150.395 107.736 li
144.263 106.521 li
136.087 100.569 li
126.708 107.007 li
126.708 107.007 116.243 113.083 115.884 113.083 cv
115.523 113.083 103.258 103.362 103.258 103.362 cv
97.6079 97.4087 li
96.6455 98.0166 92.8022 99.7798 92.8022 99.7798 cv
92.6045 99.8315 li
88.8853 98.6812 li
84.3682 96.2856 li
71.9351 101.917 li
81.1143 96.7715 li
74.2856 94.3696 li
74.6294 93.5327 li
82.3184 96.0967 li
82.3516 96.0781 li
83.3662 95.5029 li
83.771 95.249 li
75.3857 91.6826 li
75.7402 90.8057 li
94.4551 98.3745 li
95.0723 98.1196 li
76.5112 89.0742 li
76.9253 88.2241 li
96.5942 97.3784 li
96.8662 97.2397 li
77.7949 86.4229 li
78.187 85.6104 li
105.727 100.595 li
105.952 100.179 106.425 99.4194 106.667 99.0112 cv
96.1968 89.166 86.0918 81.7744 86.0918 81.7744 cv
86.0918 81.7744 96.4839 88.7334 109.308 95.2031 cv
109.731 94.6743 110.079 94.25 110.532 93.7485 cv
87.0366 73.064 li
87.6675 72.4165 li
106.63 88.5781 li
89.0625 70.9839 li
89.7197 70.3037 li
109.444 89.3652 li
91.0835 68.9883 li
91.7856 68.3545 li
108.755 86.5259 li
93.2666 67.0098 li
93.9341 66.4028 li
113.788 90.564 li
114.301 90.1216 114.728 89.7886 115.265 89.3765 cv
109.259 76.3809 102.7 65.8091 102.7 65.8091 cv
102.7 65.8091 109.68 76.084 119.099 86.8457 cv
119.674 86.522 120.191 86.1675 120.787 85.875 cv
120.787 85.875 li
cp
ef
69.7051 112.751 mo
69.6411 113.89 69.603 115.094 69.603 116.358 cv
69.603 120.619 70.0415 124.208 70.8066 128.248 cv
70.8076 128.248 70.8076 128.249 70.8076 128.25 cv
71.3936 128.123 71.6357 128.064 72.2886 127.933 cv
72.2881 127.929 72.2881 127.928 72.2876 127.926 cv
78.2896 126.894 87.7925 125.658 95.9106 126.681 cv
108.81 128.314 116.872 130.486 130.49 133.561 cv
144.105 136.641 154.14 139.537 168.832 137.908 cv
181.695 136.482 190.501 134.477 199.078 128.833 cv
199.079 128.832 199.079 128.83 199.08 128.828 cv
199.089 128.823 199.769 128.38 199.769 128.38 cv
199.917 128.279 200.501 127.839 200.687 127.707 cv
201.316 124.027 201.788 120.37 201.788 116.513 cv
201.788 116.513 li
201.788 111.339 201.091 105.75 199.966 100.868 cv
199.954 100.86 li
199.262 98.0933 198.208 94.7158 197.181 92.1006 cv
187.337 67.145 162.517 50.1313 135.607 50.1313 cv
104.073 50.1313 77.7168 72.2813 71.2334 101.871 cv
71.231 101.872 li
71.2251 101.897 71.1865 102.076 71.1572 102.234 cv
71.168 102.23 li
70.7598 104.163 70.1035 107.343 69.7866 111.515 cv
69.7051 112.751 li
cp
68.396 112.069 mo
68.6226 108.492 69.126 104.981 69.8931 101.739 cv
73.625 85.9712 82.1416 72.563 94.5234 62.9639 cv
106.273 53.854 120.942 48.8384 135.83 48.8384 cv
150.086 48.8384 164.402 53.7085 176.145 62.5518 cv
182.134 67.0625 187.296 72.4692 191.488 78.6206 cv
195.885 85.0762 199.123 92.228 201.11 99.8765 cv
201.115 99.8999 li
202.412 105.277 203.128 111.177 203.128 116.513 cv
203.128 120.832 202.529 124.884 202.007 127.932 cv
201.904 128.474 li
201.066 129.094 li
200.537 129.482 li
200.531 129.485 li
199.718 130.008 li
199.812 129.956 li
190.845 135.859 181.714 137.833 168.976 139.247 cv
155.575 140.732 146.187 138.562 134.3 135.816 cv
123.104 133.249 li
113.274 130.978 106.173 129.335 95.7363 128.015 cv
89.6133 127.244 81.7979 127.658 72.5093 129.25 cv
72.5454 129.253 li
71.5947 129.453 li
71.0825 129.563 li
69.7368 129.854 li
69.4805 128.497 li
68.6206 123.952 68.2539 120.321 68.2539 116.358 cv
68.2539 114.953 68.3027 113.545 68.3906 112.149 cv
68.396 112.069 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 16.0.4%%For: (Calvin Jones) ()%%Title: (BC_CFD_H_GRY_rev.eps)%%CreationDate: 11/19/2013 10:10 AM%%Canvassize: 16383%AI9_DataStream%Gb!!kh6(>"E@1G`q$uRWJ:1:O`ICd0dV6>J1WQq3fkq<=%AB;W-"V:lX?ulb2,?GqM!k_S]bbmmm.#cQ8?.Qbbs_hhnK5SSr8Q>c%r:oNW&"e=NlYldK0;#sLTfd`87Xn$#IEMN507NHK55`=qn*^MC\$\+7g"rSGAU&KIo^\7$gXo#e^\]\A]_h6lrML`doA)@ohLGS(%o/@c+q<n,e^A5aOrhfV]Y<RD^s4?.Up\Nt^:ZLgcYRl<YlQ8?=r9Ea"I/V[khu3,FNZd9P48mu"IK/EthuE7=s&m/)GCT3F+hrI*%_[gfchuE7]cLHhU^\rZ]n+4SKq%W=j^\AoNnG`/(^Am0(07Wcdc):U;QT"G"^46+Tj-N!C[lri^U"1GPIF63l)".DE^R31K#'t[O%`r,k*hB&raVc89G/;EqC[#FM_"n-s;nG\K`I/7dM^\mBqGD:`WIJ:Wt5Q&9;=#GrGXi.-)-WX10p?-r#n`0N8roqme+)H/9qO:ol%ptK`$HN3N%:XLQcl]5C&#4t+\s*r[>b4#?"bO9o[reGcNhgG?!2ZLsuIc+!8eLt;/l2<`/VdLVAqetAAqT!OR=dStRSm.[4GRC:j%<o[-B[6KXIT46@>jST]i_InLQK$>k<a=Njqc-uL54KlO"m_eKXI/;q@q3]5q4UE1qgCS,,6iF4GIJ@QJBo>dCr^V2*[\*O\pg78#%`5)sK]`3YE9NlcAgCnEDDu]O?Es7'dl)Wuc?KF;`TE"WN8J.RA\U=>;p\$QGBDp$Oq2aFeDY2h9pNPN=d2tQoS8\C%s3cDkRu]eZ%5Q04&^A7<R^\RNp2fJ]T='pCIYOA+_q>IoI^A2Z<m8m)5s0)H<rl\Y4rIr\cdm&<Ujh!Ohr-'7Sp<+!(roIdjS"'<CrKI2"r_ic]%s8V83rEnE24YPOc\O$8\dnfEsIe2r@>).M$l)U`^roJ@]rqWOCoC:""?[haFE1csf_b]kW?VX:s\JOUF9KFWbgPHpKM%7)n^h3kA%rq&!1o]6U5Gl%*RpRf1rhWM=s]j8.arqq/YI4$lHh:&RBqsjPJ4T4;!hgG'1Du\n)"0><:s.A<j^X4-NqYO'CT^.pui;QB5(&b'-%arLBT$hKGZR:h$Ko&Ib$^]3`FDu]=ch<kB7^\aAaDuUTiqU=cFIe3*IpTKLH:6=@\q:uQ'hL0eOgHU,d_u&&XICN(&p!ni>j;qRd%c]7hg+2@a4h&frer9JQ6IeVh"B5aC^^t0Yl9tC,mgE/ZXn9uPES(DRID0c!F+27[H]l)kc5Q%pLr2iasIQ(F0RCRh;`Ll2eqA7+&%p@.2trpK_,I7#1UjdY;p=7a3,o#E[R^0*5e?iDn^jo:eLn@p=6O&,T9DkI$Ls#cmeP*,e6k)1;#e25<H&'&p!64Zkq'6r%%G"UG0%!l*NAbM/V7<q)Pe$hO`hl,*FKrqH/2P;W0ln4sjQ[?/"M[g!GeiTP3@R`f8&R,R/OfD:9p[^VRa&+sdR3F_:O[N&5h<,e=1';h1$%=)RqLReha>CWbI`3QLZ#o@D^'XWt1t5<\%Jl%fel$V,N[5-k."Q6$(,H0T/PN:glZH$nAe!H:(t`2@'9!u$XOhiF;#e2mO)\Rp4?%[ZiN?W#`Yf7)QH/o`,DZf\2deNFLfa6MD3O?m)gCi!9W>37:bKTD&WS8PCt\%,@.4F]L^5=h\<'*:\m+;t7]6cCop2&!"jE:2m7r%W#PtNH]L:qT(CES"j^<)ZlMC@K&M@S=5N)78"Ntm<QNfPLs2:obc,OjO\;/WN2aZDG\XB,f$!64U5AGE0hiBLHj.#SP6^$7lP"dn%Ebq?Q@DH1N51kmPMe>f3\W._/i<6,f'eT9`G:Oen"H>o3NID$jKncF`Gs"k,$mB_AY)L[[Xd?l;%?T-Df%.@?cLm@)RTY-d=Ma&V%=BKI+gR.^@+$5M&=\B/?WSE(U#`810mk2XU;Tkl.cD0j-iTR0sZF1<7!QFf.O[IE0FW:N[nc<L&R>$?[N2q3>mIQsFLGCnC6B*5e%m[VN-M_nhe,G'EjEQK1^=USrA*b1^Xa(OX&E5B09-AqcEeEDZE:OiRT)_]XP;U*%%F7:7Cq$15f<Wec`1^"hE5sAf">I;i-&HHWf%$gj+S6LNLh8TAnEbjABmXO/YU:e`G?:1THEAS84,D4K`H`($mll7mM%UE4L@:Bh5qPWafaVsVc[cZTRu_%]1[bq$UjJ/u\J(+6nC%B`Q@3!Z7*Z\=QfaN,:9MSFYS@_$ESD2;W=Y!LK,M%mmr5=20G\;7Stjn>I_!B2kGPaO$&'"/TIb-S@C3/8ioVRg/>&W1=SMX#7Ok%hf01F9olj\N`F4gT_JZ7%o2B.J2p$Edl`oS/!p_K'UANWnZ`]2QBb)$6,]",&:Ik6V\8)eL9OR1;[HU_).@QQKP$>Y##$a[$$2.:%5g&e8@Y">-M=d9`8Y"^X@#CI3j@j$oRD<s=KF9Jr^p3"gPkYR#aU09b]::o/R*#i)AXR#Q7/-oI?Dq5,Cc$;YV%\h'&lY2B"Z2NM%+.Fcu/HKL*FO.+cN3L+,PCT8^d4nl,C=Fp"pms"=b\0rW-b.\riA!1sXB[bAa>.ct[3_h%PM1SK3VEaK,\RTgNWsm0+9O<?nro6C%:XIhsYht$0G%usY[ZQQA9OL(Gf.&o=-4nH@JY:R`a&k)cd<SG`RNmHp)=:?SEsm'GQ7tVgK.H/N.V"p),a[UlRHg`bJn*Hc8O$`j%F'4*C)]Q'`X.dfk5S)Y%m$s#f1.m'n`M'`pX<[4P=2>Y"8?r&W&#>a?9V2)bC_]m53++r2H(CP8<3qC'dUMA];K6_T8HHh`S"*/g%Y-@t-MV:$VnRF4^i%S/KPA[n;;DT]1>61'K;)gV^9m+c`JkHG=Ao'_Eo$];cjRHBKFPu>mPffVN;:i50bP0W*VVDD3K*VQ3XGA4<%Y0+qWgUU`,3&kr#iZ4ID]Df">Ieu.,A(mY;2XlO%3e8#>E.YbG#g0`H#n3R0)g.a(!p.FaBa>MV$jj<1^5SF?I\3.hpDO]q96j`#%G"DC[)QU./$*$L=,]j*/bCR7a<&X^P:=Wn,'0(tFb.!<ujiPsYWRU<!!P?]W.ilF<9\5tK1T&u0$OG114pfZjA#[^L($<StOg/=r%iC3qCr?%r\6Q9Y>&&4DV'O=\13`r4p9U!lX"C2]sWdH*14nid@doLE))s^Gh:MUCaKdYUX;s["U-[Gm>p#BRT";iO#Qs00f-?CPr%Qct%XR!7g?LR\.VW+Z7q.FMmHKtqEY;`[ZP_^A!X1Nm2@6Ju>dCiBcmR>dP;lSPnd[N]e[qG%L/&tG\q]b@o#EKcGl!\gKdL6k[I%I0050!9[fHDc29fTS\rl1co>h"u<JgdM8jg\LV;18542F1@qK'"J;@!!_E0&@].T'cl-jGhP-%"S6MX-4I7iPr'H.\4)\NgX]9ck%^el"=?X--t%qNhPDW4`X4?+A>BR61j6JM#YSHLG=0$Qf'f*fC3VjL"iT\IsP37"PcEpAi/"fh,B;-f`&<?!VC*%&;oRGgq->6%?W%Rc140@c<868dG`5:PT$8^<6ik7qUHl?2QpD(A*_FG1PMj>Jlh0(QO^#AVY9Y/rg&.3(7l;hG+iR&d$(a6UggI!5"UKM:>Zn[!bfb%9Rs`>cL.e;Q7cu#;CsoM;s2flA#JUW0u95EY_?P`bQKPnV]DTp:CA<H>m79oO-RW]DDnPSFB_TO5%f`XH*pP5!@OY$6t1!9MY@9X%R'YnR`?2`N;5AmHe^uU:G!lBZcbfmc;K@@))K;bBTcWTWEse77eX4A[Y(K]-b6107pCl"8N[8T@k2gI`5")NN+[Xu0=^-sBR@Ed<%Ys\YSr"T+*@b"ppC!'iSLgr2WQWM\l71CsASr6Ja@Di0f+[YfLcK\p6%7Kq/`%`\0K?m/jl`+r$'tGm_Q(eu`D)*%)%43e$7aJY"%8,sgjiGNjB*"pK#h@AOrRbaM,n6($q`G?/^5^13fS,I<IOsY//LY2P]C=Yd'Ym0s0!1e[0l7N-3"H!GOC(bs11''lT57%V$a%.#Y%Q:cRnFrhDW_="!H27]_"kdHj^DuH4*1;WBf/ZEaVdT:/##d@?E>,'k9mhZ2g<LA;@;H'_@/gE;=e"0P%ZN4R5qQ8BB0majP02fm:%SX()V#_C4]D?W:;YHAt)AmXGolU##:r?Js4!d&oWJ209=F=:+P+d>M9A\]dSmr^X0IOlacE*cV]F3]4L6,Tl+[kp>db#)LG*feH@%(i6cY@V6nb]$q_m+hRkMVb+A`-G\tS-4(!XnJ%#*(?(,:`e0n+Jp?i+oql2&`_LrOd?iVs(oKcqqd9"2:9[\\]qlWu44F:d.H!8n%a5L.gmS4ds?'C;ti[Me@:G]Qq@%X'!5Xnh-#o]R=:"3I<T[.CB+#gSrRGaa,UPqKhU(:);[cB[Aq4K1a)b3s(0#V?'%rOQYJe+AZ%7;-udnAu-eP9&ToJj`Q?>*S;O2rIZA4#mFlI0,Fa>G#N!&(+70.p@S@,@u1j6s0<hKl5LfD7G2Zr2<HL"R+,b,q2U9%XN(DS4+^n%_CM^b0hp'RX'b/'N.opmkIM[!0XY'r<W1s#:!h^):^8"_'AFm+9%%GqFV+-cW1)mIW0aR+jDco-<6[l7%7SmA#L(S5p9k"@7Wj;C%kl"B8rB`PgQ-@?hS/,/`n=)]9Km!t7nKP>,:8-I4o4md;n1-9GmbK$rkc[Ss7M9+TO^)IdbtiLMLO8bnXqCCgQndAl:)4l9iJ)+H%7Ci5L]+Xc^3'hPTC8=rdJ]:)4CZ#OH6_qnMJ@oF#_o6CaM.:7129HC07X'49Cn]D<"qEg4bopJ)a5UgM*t>])E!seN'q^XFcs1f5%i,]Z791qMu2e>[E4ZT0=AEsEWkWpEUX4\n:dA-5S.KXW\Hh2OI5DB?[H$a\;YURUJ`K@]>pd0(/O!LWT=c4O.OO[K=p*"D/pf,O+%8j7fPMnm&KA3CqB@XFsinIXGPKE$<SFm(3t>S@0$7Ho)R;r%'+m!7UoaTJr>!<=5NG_ErC@[,<QT.Kk"0r=Vs9ANAjs(!He/7db(%C+B#DA_q&*oUF3:Re"?!\qiN/%8)qFXc#De@!G3P"L$][GaN,j'949)@"i@G_dG`5:[N=W(jVL[@KY1R`u]Ue!pl<rTgkrcNcc>Z%W"NM0KFXr+3W[+PeP$+:+@oaV)54'P$SZ^D?*7Q:)$d26%*GZp>o:f+10M5&)/bqE+('NcZ"*HOnb]^K:BC8I1;V'[B(h;dkq_a9%[=QF$h(PrF1g7-:4=gOB*iDt%2^^T?2[OV+5F1+.%YMs!'2n`o#Ib9-GNlJ7]0q/^?L[@UAeUt3"VhqdWe`&0QndmoLH'hn>'/dH%#,IgANR)PFqD,XlbF=PET^GkIV@,)h+k)M;>8WK2G"T(=^7rU'^d$Q,!o75>4AmiJ/]37ti\e5'Xtmm=FO-XT&7"8_k*rWHM'Dj!%n7;?*/`brUosBthP6iMTDp.<Xl"0KMX,UQZ[Sn*&7^t.ke;cf>UK1a*qgI_.2gIoC_Yf1>YtOXFE?/Nj[t<,maU+8JKOB`N-M\(e%D'nX4:S?n5'/0s:6bDJAF/DD-dna9rcViLO9:A;DGq9.R3k2+ZB_&BX^pgJl1DA9?pp-NEP;d]Uc1@88HR60+;RZDBbdBpf$>5&A%5kNCK6TcBFF+Q2/,3A4VPjVQPkqPbY3EA!flP8@G5p]Ou?NB4sMqW-?^olL:nq/?lJSmKiES,`#lTgQe:9I$Y.#<YsY%bB;)Zp;?%8T`.K17k:J)&pZtK%sXDX`P?qF):Qn"E0]'^pmur%R,kiQXQRGIVQjIeKDc(io"AXS_l(J9r40(0t)pK#8\KW&p):m>X4=BJ5<&F%7@.nC0\nW8,]9N-DU]HPok_,Y*ZAmRYn!\j-+&<7PPs&dHVD9?Sf^Kl:8CV9)d)uVD_P.9:;A8b?/f^g":&Qn*@r6EQ@dWZ5e2J>%Ag@X`5G!;TnGhgq871_Z40\E<`Fc$G]j''fN,:(==4@Tqi\XPb,I&A(<5;/p,/ttFe>VHlT)j$[VpLtR@e-#Q/o;K<ZAsOi-um5i%.oYg8%W7b3SK24.h6R6k!\#_VO:H8:L.j0(5s>I\"(U;2%<9g:VUDQ;'Uq@j,HjIpVC53tg(s6*A6)F<!U!'j"iD@X%0jhB+Eu.I%0K6TD)0(fj\?o;0*[a%g65)7X9<&0GRAq$V<'A`F3O^.i:GtTPcfPsRNbW-"'[X+SNS*($(>pJ.aA&U!0S/J-ca-/ORl)4ag`92K%%S<b[i/(B`ZRWA8&$(ma-=GP,4'dRIVNrCs7U*^^2`iS2<.Ini-RfOYHY!@hl%QWA3e;(98+$@P)qWQ",,Au]Vl7;_\G01"q5>+Y%4r"/Qq';B@<j7`tL8OkT:udAi5'CBK\C=O/2/Im2Wg]jnB`PUm4L4>-Pg.-&@QI2497%:GfeTIk[NWHG-e=8'i)?ij])@geOQ;RT%3NGneW6l:t]9+<@*'*U6-GrXK64-i$2Jm(3m_^m;%LTn29Tu+0afpuif[:`QY^6a.7kOmZ%,?PSan'.F_<uo@13B^+Yd'CRkcqME%6Cm&-ri0QB^VA'e^`\W]A*.6)S%+kO"tI5^03>qK7<dKb-7J8A^126A<>/;WD./lDY-9iuF2G\rhTh'KiP<!cf-,]7-&_*ZC/\%<%,u:[Egq?Ou*i,tL0bOUL<*#-K5IHZR]mKa!F5<O\]FgSuqZ8I(hC#'p"AOrd-P7W+r.t*'Pd0_6G=u[-m=FedDS%_J1Ocp_\kh7p%.8!8e:fU\%2X''5WAlbWT/WW<AVk[`WpNf,KrJL)N*R>.>iiP#cf`d$B.e#%UiAq8!P6%*k=^<$ZMgVY1q,i4L>uIB>#i5Eq@j[H%k&,]eD!$ufL&aQLJ?OP7)SkEJO,o3^V6bhDJOggI0"%n?a24uam1j"iTET/D'<W)gmQedN!1+PmHt*2t63^JNibYlHR[/Xs[X?U?%s')o*Q/L`31%k6E+FFJ+BW8QMF>oL8np/e[[,3:gEN0iYQ[8TIPgc2cr\`nB_arSuA/[>JCqI<E?O1i7<G)69T*/2+'&MkVO6![^%3k1_:04"qX`8&a7Bb=bGm/LJ5k&k!H-WddhWp-GX_(=Qm__4ac>Kmd;UA)>Zbsb^lE*#8;q)U/m=BFFgRI-ak]Vu]5WEIU='IrK1%fo<$!jQZ6b&-]\!;Ff+B^aib%eS7Cm*b$:85fcSU7V&WkZ7MKSHTl($#<h6E9?9CbY5#;_XUs<rGtb`;J+aa!Al_:.EYJU.I1c!6%_:W!&WBR'O6bj9j,^8;t(`RC\dKD8d5NUoBr,J#D$ad"oDj8\Xa95):*&?GOFM'4VEr"_2ZXE*<%t'A&n-$1;6E#XF?dRge<<>1C%GWg#SLF3^Y9BGq8@]#`]/,QfJ:ETg+B*;=?1Q6A0Sa.8@+H<p9eq6[>_-VF!OUNu+M!#`$5PNk449B*.kI=:LiAnTBa^5)h(GA0*%Vb`:?h-RqqfP,s)XNZRjC-(q[/^`U?XGB8pkPT/@9GHF,\WWpTQ99(([6c-Ub#i5L+9K02-(cs-P[&$V1fYcd\Q5'u'<'TJL+`8\%-]lo#\*M9F1u$-l69^`M"r(fuP=>i-HjZelbYX[7oa='^1[SYsH?_<8s88+.I/"S:Mr*Jb0Sq/rnh2c]@*\[jA)IrMLXk6HCVr^=%q'pR'O,*$d\m^&9)(QG>K!GHUU(/06]18#Z\"JLPOK%>VfoCK^ABO?A,<Lt8r]MQ(^gVe&S)pu]_Y?G=V@+6fe_)L.7H0#T[ZUHd%KQ0Um'*p,A&o*q2d+n$B/S45Oi&([Y3E.CMS%gc@7Y%1XWHG*PBS';WK#V++R'PUpb>m&SSk5VqBV1sEOc+&KORjo^s0/l1OHY#?%Rq5+B"R0G_9FbU3M._Ui^qSeWCIj'q2SgZ78eK3R>n3IMZn-,!dSS9t0:O'k]5h7MjpG4:[O`7u/&DSTr1?!8-#Lod8,-2Z;tRGK%<S=?C)VdYR,``[Oan%91K$!m;O:nBmp6u*#i-%sBD;`Nkh8o#+#u#(ReP0+D;QD=Ih(>\,cE;78cO(<SnrTR57OACYh._a,J=2kX%MXAO+QC:f*E0A.b5<RgDNf%macq5p8V!.JMjakEe%+m\o#O0D5>Z<ZT/FH1ueS]$;&Z+^^Wa`IUdr9`J=m3jPOO1<qc/JYd=e4*l%<M;\CT3bYP'<M$Xp&2Pu]Zd6do\p:'=022G"Qil*IhH?`;Fk-%9;<q/OOhl-8E@VRE'(Bs;f%$r#Icr5?,.tcmDp/D,eoM`!nV]Z%=5XDYH@;R#[h0pJbL=,fNN3d;7]InR?(eZF<R"NbFlq`k9&<E2J1IEhiK0mYJnKX=ZF)A?XeWJ`5k`r/Xk:W?aJ[cLV1/KSA>9C"%/qARgfnXh9a?h8dVT1d["N,b$?4rqcW`:/rcoT-e7a=Xk4-=SI-']YrChmo*3.$?EA\P[+"/eCc#mGX8/h5Ut"b*/'7gQD*H5<C)%n!2H!_['^d":drso'>Fa9'/W=T)eb.0JUW]^MMKDUdS6TLk&_JFL:8<UodI;:bSV9@n+F+jRhMrHPp)<Q)BjB_25n:kb#V6*K/->%`juh>\R9]QZ=9fFM*g1EdNb[`F@pS^HtEEAiLqT;3mjR)GDO:BrQ<e(*W#*\R;:&qRPJ[JA+V;R;<kf=N_#[4e^V>PAUL0MGgmJp%,#^")h_sMg$M5%JmV6#i]RH(S;H/-g58H;mVuiK[fAbX\i,JF<92#:*24SU6$hW^(4o]G.@oDCG(%)<#VUb,<'e$F@<p(?[e\BIA%nTbMj%FjO6e;R53MMc2l+h,lmo0V<R)C[D[VB%uZ_Wpt#\:UecCe(gkc5NrUd_OKH8YN-C(e"7,jaL0#8j@GqToCPATVjkp'#LIA%6N3mo.kT*,3a`ifKIW-ejmGJJk6>`I\X/(>;\)ZuoM-cK3`iN8Y\[8>f#S7D:\#7idXGliM4$NtS_YV^[V*OW_/BtiBir9X86:tZ%,u[6g`m^q5;3jHNY-/.XV`gcRHru[bdLB'`)G`eT__"AmpZ$!\FJ2nbeC2P+C7u#F)Jj;g#/KZ>88p5IG4#ebQgY[Ik%W*=E-cDn%X=RMoe5(dCZ`En`;+3;p:UP`uqtdk2Nk:^i%^Pj9-E503GbJ]iq/bVtfa6i99RNq(QUcY-B?3ThVVH%`C\Y5\q@F[NoR>?@8]V<^%nWYngHU%JsiPTi]m]#"o$SOKK=hQ@"n]0r&kV;G%%'JUHA6D@aPuH!$6L]l3H(rf2&o:e[*^(H2j+07<:SN(8XKIO!J=1W4g"dkE%C]P1gCX!\!=An8r@<[X/FVsFEYS*Z1[9AFW720L\OfYl+;a=DZ0MOG!>rKe!IWuLVYjG4oCTcdkPO?k"ar&WPh-!sqH+GG,!\=tl%M`*6b!sNQ4i%@IE.\,G95I>h""^k%/e1$XA"F*ZaA0S)Jb:(0Y8cY0S)j*mU]]P2[r7PBSQp;u-FP#KI+37i!bn@]aC/_VHbq%he%EJ8/$<(M(t^o24Z?59.;O4eZN@[hRn"6Zf-A<M[#Q$a8TS-6>AJAjm:g7F$bMT3OBSj3RW$h3X*So0jj9lRUJf<,&Ra"j<=iaS>K%=DN&W9HC"jfE>7?00iQ_%JNOgA"oPC1c!UE;no&=l.ZDIWOGimjBfDqi\eC>Z$!U&\u1QGP3gUQp/V#W*UQCX".G_8\Fg6FbY%<k%*1O`D5(IN5G.Mhcr\E/'c66)PAU%R%9<Qtl]]E'uD7=I7PgHDrcu%Z@NHSrCX:hjPFJt2bFR/J-`;X((g&hs]!7ll^FASiPWHJrR%WP!si:\9_q*hKl<3j>+/3(=B6Y$U+hl@S_fl@mQ54KEj/@[af%b;Ijf=e).,$6+<K[5ggsc!d_>bAIL,">MnE>%hGon.Dj,%No[1%V"<_DDrbTZH!'dP1H!GR7%h^F7$]1heFI!$=s<9G4Cu.@C4A(V@MHk%E\=8E(@&Lc:;6;KQn[@m.;(@<joGe?5:E:?(,Z4\D$&.E%Hsir;baObc#%#GRi;f#n"Q#WHG>-@h4[j2A-Klhl+g\MEAAB1/;Pu1[%Wl*A:GOd3DknNG"^lLpl])-_Wo4h(!uu-7qNI8pCQ\gj%4DH51a'JbK0Ii1VA&)g/!'%!XC*Jg<_;:1@.B,<X)?HkD;(8jh>JFnq:jdT^$RGgHVB/9nC1U/Rk2s?r1d#KCNFrAb3q)LLm+'Pm%`sO3e<IZg#6FTcI=[O>AV0:G/cDZ]IpNdI8XFV#B_&K5!XL9(cN^jdp*iRG]j&^b4'`eXY'j.t$lT-GuF<%FgO_Kka.=Kj&H/5:j%6Kq<?B]o+)5of%[\#jf!;'0VG-U?79G;^9DIJJ$_.9tS.D<Nqs)I:QeOqVTj"Zu(c3';sjqT0/C4tMJ1YO5rfjqP4+(De%3g$.n"%fCVb&.H&YO7F,i=HgGq1$*MtM0H2/a-5%sIPE1%aG"'=?o-Vme,ZB=U[Yf&KL_E@@;d"-mSLQMUIP87n$*9]/mciXu'4R?@+KJH+%a*W!sB$U8!(s<'QcG$jkS<D$io]D$nOb$s?,s7ud*r5J]9cR^11^t@AI,o%/IPi!Vn-Rb3Xh,ZCH5^=/`FIQ&RR"8$YV/HVUf2k\%p*eOYr^bs"KA@Cm)jX_]^c_N<]d:I%LHC;][N<,TEq@7C]*ZfY=k0'(/Qn1tk[@LfX+3]ZjASle--)!]bms)Ed%dC+*X:G.]:_e-%BE"FomSd&#-DmWgKM*Q0Yc`@c0d-2O):m&h%#@[E@57u$fX\6(mf+LA'HK!Q5b#Q8fQdpM7?*Q84&/qcf7f([qG2%LdpN%7e%bhT%q+o_'ql`23Fjl6FB6EF`2]]KIe$$LA\*9JWfJ`"ig0/TgnG[_9QF<o1qOcM\Dh1*gbC3d+lIH\B^[?A1jkYjg,b69RrqDmAQQ"r%%Uo-Go9l;kX[*LhdDqi.f_T*.o(_c:?9ApL+$UmKM;5ram]Mm+?-&Jok=g(#J<Jbf9H.o>JU!:oH^f/@`1)743[:N<h,,N"X"]<3P%9=obI:R:ed`d9a7$tr:#'I?B#3E8,Jr>agLF1Ia2DEu>*H3^LhE[#'Z>0?VoATDIN!s);0.tVJa?dgO^0d<>3>l/1X'I[C$jW+Du%@r%\$k]S3aPF61S3uk\`P7/GumRtc"r=A`ZPd;WYZ?6:6^UXLMfbWmFIaj3;80fsU[/lZ]bbJhf>'W'1R*aLHV"6W@'MJkGTq7:Y%Pco"]/j4lZIF;#@D"QYh\<-)NWasB]'EuqOgf>^NTloa$2\7;a^4&rk5BK7nrG9'$6=XQVRmhgc1-j?1c@k\;?k#B>%,Sg0-Fis*%,)I#B<H%^ZJJ0"g8)c9Q@piAR"d4RI<7F?e(r<?gj;..nQJ9)7fFtjJ_00oIgn#;mp6L!Zn%nmYTD.*q2h$As*nL^V#TE2a/r]\T%Y-[@f)lHV6b.'H8ku5!MG*(Q-j5D.TScQhVH4ge$(.I.Cf\=sclY`f3H.;7FE:.Jm:Jhr;3#T[s\9V6i'i2Ur#a09ip#p&k/VZS)%\H[WRE0Gh(e(@).dK^$FX$m00_*)W8?Ubum]S9M$S-X,.qg.1rNN([mFeuI=%7Sl3D61@R]etjgf^:Y8n*U&_^VBIM!F+"+'&b'e%h%BDT)XK0Q#i"*T\XqdQBG]3;3QIH+m.etoT:^oQ[)H,V#s!?$k:OfBRQkjV*aPW0V;#>'h.>GLqg/Neb;GCFJ#?pm:GYr?>O`4m%)[i4P1_!;GAL&qBGrrAL*aCT9=)o!iYl>*S>/X#6]VCG7=A]ee[Q5cq?2AT!5$iNN*G(c9`ehU76bFJM?i"KofMcOa?AJ\7lCKsN%kM#LET>`lX86_83XnL/fIO=N2pN,isH1(W%JB$%uSs\T5O6VsWU852L'@eD@b4"3B;J>Wg`eg#IKh2dHIQh*BBchGA"l\_/_ZTFg%r>2h4'ffq#Q*umn-K,UhW]?9E_4/Uh2YIO'OY@2):aaUp>mhgXYtM?ibK?20XlgX`;i9,iBX(k.7QcCe,3<q8eeq`=l`pB">j)!Z%?.XAF,T\Y(/b@Z$WI'ACbN7"TfM]_TL*"^rQ8Z3O]YiYPCi@Y]HA;/aHfj3i7_**048-:QIqRbG#CAhZSFf5?I7]=foiR1Pjsh)s%p#a\^gOkb%Bb94rcGI7iV3a+f0(GA.6XuZF2&PWsenJY\ot$PVZEl5CfKU6(>em2=jlIkN:.:>"NpE)riTbMte%*9^I$JidGP98-%Wl=LMcQN-n0B`!GnTA8&f<Zd`fs7qSXDc-+[g_r$p"o<#Kn1giCl.?f_<m&"9?'%-5!o#;@'5904kh8s[OcjMr-*bPJZ,.38N2,Y%KngpRdD=>;DlB6838G.)1b>f$F4eD/^#K6n)g\bhXW?.uJW=jfkf&iI*u:.>6gfZW$'oL?J9PdRS%DjPWk6a7$%r15JT=+rIZ'7Y%i\L(:ZD:]IS2[(7.i&c,Hb\FAOcC0q*E8G&d*N)=,(ak+cePaWPHA"`UM3\!9dL9hU&0/oT9Ie61rf3=N>@\N==/>KKK]dqEK2TC%Xi#dc_*UFEBpa?pkj-G/g:4BZI$N7Q+n+99rculBU-T!jLk[-T;CXpcLO"*bdRc41K/D=uYf#BdCnFl,J]*211CT8&'MdT!)YW#/%XgWqhCHk[&lsiHBot:::XR7G#N1[;C0O1lm\MFpl2tq+P4#_AGB(au^L!kC\h_OWn@/lbsrr.6-'Eka(6a7[I?`8si`k&BKcHuZ?%#AglnST1_]5o0'I\A'0VB*hD=PC%s9f!Apc%iF#dq/+gG4[ZnOG[&LSC)F?IdMiWFm:\P"i$^U"`E>E?/Elb0R1(Y<hpU'cKoaS4%724:EnNdO#.6=HbjgK463M)g6@->$>m9RkPV-uC?>t(Pohd=?3IB?UlVNlrE:*jsfbqh1GNVGoe?2t/%lgqOVgTf3]?6))hDUKa1%[(je<TcAJQYVV:nW8%Xl7a?aPQFr9uX10?S[@]9T-S9\1Z_nbjP1Kt2)]jo)ZMeWb.[aaY\lj+t<L'$jQoi8g]I]W(`H,k?L"nZq%kA5?2@EoOV+u\+6pPi?&8TF*WFH-I*UrW`%AtA8?]EFk;NW?afP[)7[[p8)Y<XNmW20C@BfAh>(FfniV`\$f1d''s-E":VYgRRXo%%GVW:MQ^lKT%i2eK0\][kdh5Lm_X%SKMg"uES$l@2*cDG)_Qa"dajus2\c-SA\Yd[Wi<Yf.(=6-R3"?T(*H;Bm\G-T(_RU!'<1L3%:.igD/@QS@AEs+&'rR?5gKbN>YqD.LD1[o=XquX:/:+NbKMA]N!plhJV%\>^4U,gaR8_N;M%A.plY^&_GF#ksipZu_[qAXmW9AVd%c.t6mZ!XGBT.="_gS3UI=jM:/>c_b1cRLVk"-o;J*K>$&'/c-UA5D5*DU9MYR+cD&6+53Ta3#I.]e+ka`(YB6GKZ_am/5#f(NF:@%Gt[b@qlpso#CR&M`k_SWdLnoGODfAN5`8"SY!<*78!t4'=W<'W]2O.`.ST7c6't2_Rl,e@r--g?82WHiTqlqZjN"BZL6tp*c=FOs%5[K=`Oe-U'CZNgeV(6t.54?`JP-*.XpAdTK![ZO4<lF8+V'I^K<kD(V)(R]:o<Fku]uq=Vm5egsi>EtCjF!;PdQX#,,2F>kCqOC3%Waa?cIZ!K0a^/%pq2ER<ag"tT-MR<qgWZ57AGKKoE(dIJeNV^?"p9p+Fj10FAe+46N#oUIE+A'V/)PdZ0=($7qQqA;.[7,;O>j4R%KJ=Ff:>h,S]#_K72]-U`(=4;qiD_/h5WhJLpSaT;;-\"/dscO#:+8M\3@eIlU_AH)==`niSR!6UREhsqPou9WcCI^?2dpt3n&+_K%0%D7Q`<gE4j'j<!SM']nGs)r#QTa+O>-6oS0sep[(?=/U\Ne'fUHPM"D=b-C)-mcY^\4()]:?0451AoHSoUHH=]3k1Wr&PS'CD)H%p2m[8\Zan,R6%)S<roN?'bA7*<Wm8ne\,(s4ifE*Dm/r%)*D:H>:-[f8%YhknCm4]f_%#VbIY"ohhoUj@,2+Is/9boo)CN#G[du+%Ul\cnf6]SHJ=!'@#NFoNi9BG)`]W;(\*V@!NSOorl;@M>pb1,0:&mb-ECmQ+1K$cp:[]0+V/)P2&^IMbqk+po-H`A37ka@hfC2Iq%UOZ,ImBpl#$.8f.:^3Aeg^%1LP]mnh-0!I0>>[#55)k;aMNm=@4^t+Fe_CsMcSO@Rl^kn)GChm%#hE+s(YYIs)J#CUr%#o3B^4$4%^o"b9f<+BKF68Eb4`4c)(E807`P-H3Y[rAh/g4U\Y7o/S)g^.0\o*0eqsLa=2@Z;E[KfSR5tq_L?_AoRdC&,=ThY&>>\b7OYMM%b%,S>g#iRX/6Y!!n>fl2r--Ym[=H#kRnT$9u%i<alIEU.Gd$-muX.Wp]L>Z(JsICn1M8Mh-g1t&a!e1aV@=H?7+NgFJJ#mI_l(+o40%\'lCTcjUV8\Dms4',oB?*@N$h;Qu$$bAV.63,T4W2#XQEr&f-GpQS:XY]u@sGD#K%#!AH;UdiA#^D,`oOrUYBH`028$&$CU&CZ[+%XsElAArC_.me(u$-b7pJU]'U8F2?iN\LTOV:].h?ZFa"]Y-Q./S2;].,[HR&-$E)k9SIn'm6(`'_VSY'&FDc!U\/V'61PE!f&0/a%H!!19:mPc45)9n`-Vsg3:jX*2*$8\V,3D>'k<,dq3T$P(7/EfSEl,Zs@ui5"lfI^j_:OUV^!`85s86JeFCKH85hi'hCuWisIjS6A%pN+^VH+rp,\)u00hH^)"KQ$u3d%2=9TXChae,\n1AAGS+s0-_;EU)C*c;JM^T_UYUqj"YNPuUBK9FJ<TG+04g_Tb*/mmO!&C[OU:%VbLDSr0T?JY)1>ml]p11^<8rnI^;JrbF?hNGB4=b4ZqHe*]"T`hBVcb:Uk$<4(ba-/:5qb]FDbeIO[/.]6=pJee3p@':X+EOmkr8%2:)9sft4GZW90UGG=,%SRnO)`T0cFj4PZQI5&u'h)#]&il[=6+QnG37]&3)D06R<*rPC1V\F+4qPO1$RmeU5@qtr-j]6imNC1]V=%L_#Qj6Vhj(K'`7\2o:dDl;X&UN/WM_2-U(<@0bT?C$b,f+L`cUo87#A%JQ5][q_/m/imo?K?I0+%9dd2_>SPL+6HI,kk9.S0&gI6%V7!2[/RM9=cT<Rk#tApjdWHWuW9j&^\N-#,5!K<\"Re*jY1cl0bH4joc=pSOe5&Rd5.2U(VJ,P=prL\R.,Mi]moU:)"+T12ioP6\%3-Van8StpmZNoKSmqa_&']qfUer-?,gV%lri@El,bMDaif`Gtcc4<JG_)9nPW4NL'36R2g-LW]]1q-aR!iO\A(p!L0h)WWUbo-ok%RP&\CoAqgFUmbVch$X:YHj*7S.C7X3Fc2aZJKSZs0`oc7Zj-j7(YU!3>p*l26JFN;0OP>*ME+i8k<+K_8)OT,oGt#prJdF89o;#H%GS<FrCrLg_2>Z:gUj2BJD^1X'mtdOTar:]'mO9gbEb:q@LG)d!/FEnc[^a#B"-;WjlbqhoHDn9dXIU$ep3;n@B(+Ha\:Lg>+[*5[%n'L<PGI4TLRg3u;]*>&Sq?/BQU&`;1;UA:o63mr1>8J'XA19?iaK*(Y-13C&'WU(.]r@?4NH1e?A0Q3:4h\rmOEsg"OCf#Zh@l:>%/t@c<ATcc>Y)b`0\?kPnF\q#fNA.jhE9)J!ApV"&1G>)G"((I3n;6%)b?"^Z*Sg?2*bt.FN4m(]E<,+Vhm-=uA]I+-6&Gn[-;HX&%QZOc^Een3U=U'Mc)aUBpk(huT23)C1IUlsF/g[0-XoR-N:E$9I%opSAngaWt-Q.#Bo@f"N(8%&N_3!4*Xfe]Xg!.D+)6J,8)0jLg%JT)tZG)YYt'AKh)8$$^R7^ig#_ORelqc3s4'(hL^+'b#cQ.fQYh*kn9dXR/T^7N9<;qml4Q56WFA)q`obKL^4b4)O?J#!tK["t>K%:=e:gEWoh-4Ck^$B"[(=O*Jj6$XGb.YMe6]j;#>aipD/D`#H.4ABSsNh!%[PUOnfW=\,sY[9F(Z+Xod17bT:idmrn<P6@7^!)T5Z%jFc$L;kel4>]#?a6UPUF&:&t35SJ6B6Xs^=:?Em[V]['"Z,T''DM=lm;9>%"+/URDWs+;k/LtANSN8j8gJa(ITdgb*gLsVR5O3A'%Ma&1maY&9AY3ur$)6N9=HfO'ij)j%3hDP/m6,D;3o:Y%'I(,?EgVfirmnrZfNLKq-0%@B=90RB*7P\fiP"3*81KmRX5eSqpfNN$)%kT)6G].g1B#kob_3nS44#"J%["P,b%N-s<a#P@X%TK\b>%"):V9aUKpVKK#fo;p%[Kj?U\(mR?L>On?EMDs3;.g?mh`QV8f13jGl%'P:!N"*91WnoCMTe(@A/"i1!`9!AWcKW)WA[R*qD@d5rnQSX!TLV<'55!"&Emg_,aYdhaKp1uAEBZGH+g@BJI!T%ZAGTSj#L7%_O%kY2cap39ZWFW[*d`,Y7,(V%-hn"(q<7nYqTqt`2ZEg,[mOUt_gEg8]3DmoE/jiqH+lLn9I35ChaD#)56SfcAZrg$f,e@dtsR(KtD%B9B\;Si]5b:=T+0TuhZ>_'#PiR-N6"Oh5[XN2SQ3BGp\WGL'3R!_r:sp5ot3:_eg*R<;+b#.eOgcobWdOqc;-'b/@27hGN[GkS55%825Pkdp(\/-V^IW<O(J=-&M<#QZb#'3'8al7ub_6_%CXgY#a87`<%$!E7UiRLrpKT@B?B3k@u7Z=7B7^>RJ,(.V56CMUifj+/j:E%[&+A@alUZDlbsmeGW8k.e+::Mg<9`MbTJeV]3E9J=+Z$S&lYd.N<esYc:2ip%6QR=XgTNo4eDS*&SYe99lR?>]?+bS1ih&<adg5n%]JYbQ8QE$>Tt]:N_[qM[pbnSW*f-:qE51I=!n>f?Jsk$!qpI/jlnG!%_4^-,1%!B;=T]rB`kA,R$.B*s2F85EZMNLg4`7('F0-86%8B,bpGNe-5=uQ\+g$iL<aQ7f+Rk64.WTK5XR-SaI1(rFJ]akV4ZA454h.#Mu75!p:k="`mG.1Gb\IjnXl][R&h=>(0'$sJo1Zo!Z%G*D!lnmsItbSTf0-^)b:\5Edn._/I0Q56ZGqn-;)b<t[.U@;DI[Q^@!>>)uGFDJk_^Ug#;MCU='N69UR/cc1Gh0t9kDSFeBL<&!h%f*]a9Yh6Gi/nqh#<r4RcpZTgR1O+5jokW<)?1u(@S\#Qt]GkV<d`l@:O5b?#qt%_]_Q%%Y83'b=%Q]NG,id(c_c"A5$*AHjb79-r%'u'/eID2,q684cS$6UB%:#7tF1,,T[$@sAebBb7#po[Q.^3TLamD:KFi83ncOaF]:mZt^C\)DVIg5"9R@e4gg.+tXam%),9/]tVT%8b9`/UZ4,)@JG+Pnj_+u]SJeYZ&8R3\g;@TDB1']G:/a:^1-G0b'9=#F^=CX_r1<$#1)tPI]XJWDqEM^MXIq(ms!!XFarf-$$o8@%(UADEYP7/AKZ@@eQBT*WEB!3`V`0>?2ORZcb-CKJ2#'H,q0X[']70*&;=MaC>hJ1[jnq)u5NRk0QZ)A!r?:QtI5Pg3J#:1:c!Dg\%H,%o8fTq82\p>*%JXL9$Wa?PmegI(L++4&_@uepHLD5V].[<u<\pge"JZ<6o%*ilUKu$q_`bOsL!*0Rhg=IQHdeqUIWTkr(7N;1\%T[oZuol``B*FfepK'eHP=[\F@A`+NnM:_Q6B6Dg^cK@&A/=Q"QldY=:fRrEqTEW&43VjZOGhQX)Yp8kOM:XZs2uEq=[qI%1n#SZ1%YMEE;<u^^]^%kgcoEMoDMjFg`6i+uqLBmJ)UHC-pJS5V;ZXA?+5S.tuP64OO=O=!)?5J_8":uoC*KM*-6#Q@&*H=54@?8^7o;DGK%!sf.r)_?UX$C=/H?.kQAnl,F:::1L1b7b=NrQ1cu+nJD$BMK?YKXpj\"j[RuHOCng>g.Mo\H*DeZah6"`0p(-r#C-NL^PXR#.ceH%@LW]M#/Vm<mX4NCFpVLFeb\Sl4>aH@#a:UTqg,+d*&O>`8rOUuZ?/56L85n5)?'Nih2"B'_[<c.Q-\/n@8f`A6srthG&,Id++8fn%4)C%[gi5V(n]EPpSFn$AhJhf`mjfi8iajgsCcpDXZ_Sjh1TL!*'4b/EK0Lr0jbqpH*J#qV_'0q@Tp7/pblt6?picFB$FaZFZqKX\%)2SO*j=q3FA7%pjS\I.)[pr%E/U$9MjI[suoDq?!$[8:(^FXCN*bBRYGETa<`bp`4hVB,HT91dN3;;`g4eM+5DGL/rcX!n0L*)r)%6dE't@N0djJ2_BAka(6m^?Se.Y[nq]b1YuT&f0j#K[]"E8q4t4Q7?gg21Kqp'*BL@;)@)WKA`9S8te"h"sMa[-9!)pQpGN`n!&1@%SUod0l?)?qQQo9m[NJ`9:<4c3>PR8BQ#eKi\*\Xq_DqLr:UXAn&cB,"dS-;k:G90Rcmq3iip#S2K2,9)4ST>\?;^\]F8Y=@IbgV7%?/+,[D&2hi'3@-f6\kK^_B/P\HaJ!S/7Ke6D4?U6"32FVo*(_%3ld<SfHrr.C+5t.q.O1TojZh$Mgt_ZfSMor,kVV/&LdNn@$hQe%1,V`2F-1>s\!jIDhCqhVEZmm;%#o2sh/2q\_l4(u;%NB]i9T6jcV04U-iAPA4De'I/'9j?#/(,D#:5LM)3WVEo%Ck&I:lm3L,WqZ%aG&Y:mtp5hc"HO[3M?\Uq;C<m1if9;0'nT_OV)GTfp:r@395Qc\U9>pjmq.uq67&dkG,D>#'LMXb#bX.-h-4#%,j1Dr;3P'Hgk_V%X-V@(q'T;h4XeAkWDdT"b(B@8SnF]f@X2No:!V3>kponDa?Mu7g-aiuXcN@I5PcnmqUW3W`C_Y&e;qM90-okJA=nh&<G9L:i@!/D%?EKqcmUsNe(HUUX:#WG8Kt/$t8g7^+Z[;D]hn_66rrcUmo-m],="h\9rQK&Dp*dP;CmE-j.@BM"?p6.p>1Q4m7n`*"f[^me;1eeW%T:*;*\#=U\8IOn';Na4p(P6)eQC.<$;gqR#B^]!RdXg!8]H@0KDGE@o]f5,gRB::*<P$p?'aM/jVQ=,9qtV"Prjgf%msf>,Fem[U%O@`nAq#k`)=%.jo7=@,D,W@6bSj:C*2>](OF6BsQf\\U$3KinDV`<o<`Si"GG;@eWPZK.5?i890\d9'Nq)DAk8T.S!J6%L`K+lRi%IOcW"EfR50$6!38qGQ1$@'lXsGJH^``VUOBm\%.kE^^"FJg,-Yp10r!4Jh)@FEmmd_:/Bp\_gY`ln+*!1AY346Mn@$Ba1["7'2]C%gDJ3]MKENgK(0t%=sGX6/@MMs<Y8bs4jb>G<,cb^:Hf;eg;itDT*-%mh,.HY:/(B3FuZp=MQr%J^^66;DOKlGmP)HK)_loLc9'7R%_-iks3__<.U2:>sgD].Q#F=JPh4hrb:[Ys7"NkX13-kUp'Y6oOJ-e@)h<lpQhPHdlCqG8c%YXpV5;37:/\rZ<U&lbZZkhCcp1[re%(51^gJqu5KB$o9=>-`QJ+_>3[ll?Rd*9h=1oO=\B@asDbkdl`fr2#RVm[%UNGi2qHc]RQFW][?]%MNsS;&Z-g`5$1Om+els2,eOk%WY?5F]6VYmWM[eQ3^ISMaVJA7NQ(%7[M7ssei*6A9;P?\O(qn?Z*Q)gmWpCIUnhQ+Omd6SjIg#4r.A)p20e[W::1p`g*YYal*-T7%+u!CbP`*aCJ0o,>bnAA<1Da8In^[?akLdVkbi9O"bTh7*cqS7(QqCJu;ptNIKNkEoOXkKGaa,5HUI$LB*:"C8W3%>9@^W-.1+tU@%6[LTP0=3>'kfWb_RusSoA@,9R%7\:mik=(K_/l^MjIFj%-SPgc:>#t9WnrUnjVI>5=;-nVZ#&H)%<"#20j26Qp\k:0VkX+(+I1N6%;Hn%JWBnbOH#Np"O3u].VFE@Xb2j%XaO3gV9M(6J=R*k@A&,<AphU#p<73_j-R`NM%So]X6YE1'&<[*I=U@,I9*DB?l&,WdHY(2:%g.i$^2,r&!k%3dq_f7C*$oH7:kt1dU!MKBc-[MdWoIJ2[Z\k%gc'_sT8<un-Z.gfbYs%'<mW.OnBH^A:Dj#(M!u=f"ep)(aV;$6&%Y;LDuOc*K7RSu-l21aFEV6l]<[rm:TV/lpHQmO^[Za=2\_l/bD=&nQ5o*p0)k,h,BAV0$A3]8\$FHS$m^iKIE\e:c#%<?E>M3u1]%J9EWTJgm1@D3nSH.h9?e@\^gkU!Q5j1Zs[OC9tc"?muF]8EuHPL5&mc.!24ZBT[QFH<2TRfA[LlID?Dh]R-Gl+VCN*EP<jWD:Cre%\WR/[25=5q7&^U(C_"F?._N#1^8ZT^.oR9^jAV>K0XXJtNaYfGY6HdnY76rD'`l7s'`1I-!@_4gMIC+s-:*cUZ44$<7'!uL1Gu-E%PJ)pU93V_=_KcXa-,erS`hX`%_.*(:B-ES<2SX)&@(^=@/#Yajc2C8/gJgnpO2G7@1=Ao`Unt,7@Gi.@ftr:A$rqP8N\)"jgYr4S%$'TWL7=/c]nLJWHZZRaBC:%5LkQ[R$Z!5UMBGQ>i^gsmp4%sTm"4-X^4(D-;JVRYg9EC$cg@ck"'"Y>8@TqOi1[#XPaAq\e*7$l6%fc5juE7p_JDDhNCot#i%7]mjUH79M:NE[A63KgbHf.o]t2rr>33jO"39bPXt]!@&ISA,7l?nO6f->d)=oHrfe@o_\X64Xgci'SLT%d(6cL-;Z9SSNrcb0C%g7kuqqBqWre'Mg7Mt_jJ(BDnI[DbD2K!8H3K`\*"MV3.15dVn@,W.h6I8F("6hI+,cIo37B"/dFPScYG@?%aY]5uXEl"<!eZjY9#h:.kphmQkJ,R]:rg_"%gSHWd@Xt;jfmbYo4][X2Kg^c,gGZgab?(`KD>Hb;W9S*q^5Vo5._^r1+AP"Y$@[T%MY0#4En4DK[=2Fi9p!feQ'R*hfMkQ6X&GRcB1WLT9oBgCJZ'>2*2i;+jt!OTZD'aH.AoTP^?3^>@Ysb3gLMJ4_Q3GF\GnC""=t>'%GX5&W^eZ@:C^npKoAmYYe]A^6DU8&X3)_[&D"k&#^9ue+<rUZns*)('roqn0043Udob>9&Hc!Bhr_+uaA>18+VNiWJ5Mo4-Xg,-f%:=0=/W@[P^%9UMrdPTnDAs*DWdj1Qiar=F$1e3Fc6l%VUg/Te,E"M;5E,!1`'ptmVAO($OTtj$1aV6^T=/W,o+P]#Y5=n3#$7f'P%:lmQE<S5f")Lu9sgWuo`<2Et3d(Ni<Bh31H6\:a6<547kZSpmtm7Z9qMOQ01_K$>SQRjJ_?k'ge=Lk:0FV4^%6\<+,5:`gg@I&op%S-K6M,/Y-tVg("**eAClC_"_]b<CJb97Tk]q6;qAVOU+"@<\cm[O+Ai@*SU:Q0;u&3B$I2.!S?=?'iW3$(h89m3&G!7g1C>k!<[-%DZpXm=u1;N!h8P'!*G^6Ahp6`!^`Sdr'UllgI$LS58Z'e^[@nER8S:#rER^s0r_HD")<?gf2Ud-3N&7"[]*t[@/](H[]u#i%QabY%<p!^9anDVa#"^PcH9UC,U1`gA=@4qQ<fQYR@#`AJ\/gG\)(V%=Ja0<pi1uuS^aXpL-m@5);$tV1!9qPA<&\$8Z;hh_Ps?]nL`A,-%q_kRXlP[H5UL;g05[oMF9h_4K^PW9GId=eKp0h);>[!+F1s+9p!E^$4'KhGc@>_$s?u-l)kL11-'/Y1MI9(dPC4`e&%;`!>Zk\rn%Ze_FF_HP19Q+BIU1@UCp4?b'Gec`!mN?q:c8d<b)ao)+A6Pl:K3dk_s$jBi'!!VZ$T"o*mOV;hEX'2!k(X<umQ;;HDURLdL$"UhL%I'][72&Doq]3?`sTT4WTZ%=-j.*Ph2Xa!Hs^Q4*bd22b5p8h>@ra(tD_)1mR#KF[<O>IHp"(kOO"Ain:"mRUF`ZKq@-+Uk`J,S)t%WIb-*"t-A&[ORERS,jV'&sfi,5?)2+@`RCBSWG&H,XIS6V/%!s:M#o;_n\-AP/+HdZ)1th5R=S.!)k?GHYjaqcq4q6cZe_)0=mZ7%7H40)[=G5.A#pE=fbHQP-dq:mJQaKO.6M3JnFo;U@2'^/7T;mYcW-n,&4ke01ouM,=3,>Ac;cu(jMhcHZF8JQ-rUU.bNp1%9r506%!`KG.<n'`D&DN"t6VC.Ll4sYi<#>eY?A&8alQ,B$$ns5@?*P;%LK4DF=u@p/39l[5&7$1U.30MZaL$@h+&"IN%Ead%m;b,],nRPA%?$KLh[M=T")7Y:G%WJj7ToQu27kjG^X>@kZ%jr'N.PUGf7kDOoTIiIFEZlO!FlkWS/R#[c2.(<BCecZ%)9-:IcN[A;V#`YLi)XYk%<=lU!OY'Dg6bY%g9=E"e![M5U[5BYD5i`=d7R/rMUdJfR&qPsfi&kMb;WE1$[R15=@%.eeBNUHe(^qh#g(8NQJn%M/#VI%3@0$a9%C?Am4rsi/1juP<d-@;R5XMr?im\N1Xe>=AnlZN_*XAgr6]c5IR236(N`_g"RXp9J&(K"]>^ch%t2-7SF1X2&up-bjHKH,#0'7a*D%&h^XVa_2[*AT1amdb.`:Bk=n>^u-jo!6'cAfhsXYCn=cagrQ8&nUPLic5dq+JKn+gL+/HE;RqX_[n\c[OX6sXp+ira/LG&I*^9iV%eb1X'9SLWg,Vb<InA#0\P]4^e;[7kJ[>.+/Hg1P,*2q"IGEI)"7tlDpmQ(HIU#[eJ/"KkYJ7Aah-mmFdV'6:jH:8r243/Yt)pf6J%XoVH%K+n73c.?YD?;^uH'O6ADmg)'d<qThXNo1>Q.i_s)!2T9*#"tcF@ot\jS-.q(Q1JMt&W3rSCh+)IJ<W%uV1begAgYZ'5TrJZ%jDO_Q:kuRmPTQrFHNgoG-tOn7_q:>1eg^F!+r:FV*-`>3;neOm+4Y%?IXCJeA$,d<!eX9&`=1Fi4;r3)h(5k9QT#n$$phHUj>Ckk%C9;LPDJ(5JDW*<[[;rjS"KEhH+rrZ7-%I17Z<Nf(A#n&0oGKlc&dE/4K6[_G)5g/_,uBQV;#PfGPS!]mX^0sR$6qnN2d,35#3X-G%h/E[C-SfJBQE_iNlR1WHrYI.+;HRYUr#k<fW,7.C?F$Pn6?`Z'IaL-aOZi%PD>iE49/T'GBI!Cc$CQ3im_lO`8l5"QR$m(nPa3.]%'+BgG/a?meeBe`+W!?KnR"fb!(cY:U\4%j*AqHF7e^W_o^CA5VecTbMfK5+joqW?XJVHQ$0<J*nQP\%2_9#ai!qi>*.rp+D4I]lb%eu4'jgNl_`:d;IA[=nD\?u=pY_*R4A:K/<u/W#IWn@`LA"U0pKRO]7]cWo!PR/P,F0Bl:Bj9&M+B;4l:WOn=e?.0L(.1[)Z/T8RX%oOUR6TMhP4C:I;O/?;i:VWh"PXk^-]I2UghIgi^l-O-l[5?Y3WTiIUA2u8I5K+ZoSZ"+LlXe@'f$2_C;>)i`)$)W<4U^75!Zj"p9%[?kb6o,*K*)(WN\AP:(4+N%`VBGQtr\9_S<CBT=*n&'C%.+"4\9C(.C(kPm@_PiJgXh)R8N+.?P`2Kc^fKgJgV=tg/3XQj$1@`c6%-q*P@0QLQ&.kJfFXVIi;BgtZff,9;;^FG=!nMr;3j5sn5)C]XdN0-WRbu$id-&Fs[3OT/DG1sKXRYU_(1_N5YW%8>qBL4_M!nBl!%_elQ%gnK>/$$:d@SJQ4_/&7t`9)#.2H5%U#_]Jd[0_+n+;"]e)GHfYDTnTZU:l6BS#m\5A;Ml,]$U3oDS"^H7\VDaR@uJI,!tB3n%4+Q%6,V.YON]F3fC/BaB;I4B&;dG,M<*t3AoU&ltDT;.:nU#"4c28A2!,JCM^c](d76(Pi4>bX4\no3f29X*E0)J_#;t%uH8c9q>%'/#qF9f#XS)g(n>2[[&7Kj`:2?O.,HVsTmNA07fT(;",qm6iBQ_IY`$,eX8\%rL7goTTIqi4'0ELSOLW9Vu/#Mp(C;Habu4:&r9c%5e(*O($Z1.\Ml358=RA4mS]V5$E=LA:`BJ(iiI,L"i=KGnPX^G?,9GsWW5i2TO[00L>OJRfrP31(#%B8AII/M%e_WR?3(NL-`Yr1%:/Kl/'E:K]9b8P;?<,jVbA(!2[1Oa9SSlkiBEuQY4?$3^4aaLk=>_5X\H<]>OofA==nVM)A^P3bmeE)[>a^akZ63nu8q^rU3LMut%m?)"<6*N9&$8/S[$dm`SV#sEr1.<b'%No$P1-r3iJ.u65VmSdRdSZcO!pQZd.oeM##P%Q\MGA+>r)QT]f16h&&<bS!ctp0G)f(@A%R2X%l;D/O*SS1jS;K#*c&>#XG*u,oZ4PThm]UFCe(cUb9ZH`c":!t7._2@=)3Viji&fFC\FDPsa]r'![dc%c!CchI+-4(V?8sBG8%l7b!#;4><fB?7qQGl%;@@9StrFZ<j7J;EPt6WU*"/(&D<Ve?/kaHC)MBsl?G>qtZqD^SSFaTO16`dp")LYBjomWd5j?H%L_+]qbX%R?sAM##8`H@Yl>/B5qlV1h1MT!EO60,ENK)^;a^eCCXj39Prja!^>C(#%@jU(J(@li*iR9%b4tFRRm"ae:U%)im<NQ<u5%gg+Hd$%SNZ8VRX#H?%Z%3F=L-fAiDRQhSKKu%d]ODT[_WH_qZ[L=8PdOO*>mqGMUh91[gQ:tdr\2\ge-gkZ]HBp?WEa8J7EY+25In#ITo,b%JeulDi6^)Z@2U7OS;<5:H)&A>Ta1c/])XfUg6s1#YULn,eY,g1o-VBg%XY[Vm'nElX,!V?!k:#EK'(0;4Qk>3+]5/[R!C\3%j]RB%OQrHM.m;qe-EI_NpjI-imPg#lI`X]X6+P]og9,0BG8ulV759G)gqFaJ-0*:U"b_G2BFB47TAUp&=Q64[?'&DWa)soUSZ9/BKmEoi%`parJe44<(SPN:K!2n[D=228N%;jM;LLfpH"4g6)Pa:PQ0]hM1'd\L`k@O.0(`JNR:9doR8X]-(8CO^L+=!,H?F\WI+Bb_Y4(AX8%#<cZU_/o^1;FoL6$c"V&Ltr0M6!C:3GH+3bL&l)UoWDauDk(3`=b;g`4=*$H%SF4JB3hN1YY%rT%2J"DR#qG#&EBe:j_36l-H\`5%8F$ntJJ]?]!GAf\TQ3n\*@Al^;=3(u.3B2AUT2kH\l-R`]QUmeXt4gfE#u&j,.n!$Qs-jfV>u\=lTGSG<-U_s1e,Y-SiLY\MbW\q%Z0hU`ZDmnjiUYFX2ZGeNM*_oRON<qDiL4J/rbhPaQh9Em4Kk&Dq$M']oNB#`&uFV1N'l!V,@K#be>S(`PMBcKkWWBA/N0iMLJd@j%0G)o%#-ArHKL\@Z4Kusi-7+?e;/DY%7)4Wp,iXIo9+00QOTI(n_&UuZ3'j_Sn^e%1g/b;_M`jN4J.0$n+1VF>EF@^2C#q'J8AjDV%FE/E,K>="H\iYiX@iATOp0d^#=RQX5&OudSOiXeYJYs%c$rB=Xqj]R]P9=2ia;*nH%(7^.8dV_4Y'"9"gB?:`,tijZ"^<AjUG`N!%YF!BBpl;stB_(mL1@V-''4V[^e+01j`(DL3T#H8TQ</Z:+VH'j;1Luq"$e>WRN0HV+q7$kTP7pKRPOu;L]8o66t&S.@Rp-a1JEQ^%D-.H<7Y8P3T=4(K`h^3P_t,`g"b_KD<3,+g]l5Z]%R.1br>[J+EZT50[uN/M6R*3^FR7*$TdhBB].#`2iT>QtOSUKC;k_)S_&-B<%/:CQ-)A'aRbulSV/I)pB@IKW:fP&,iJFM<9-44Q)5_K=XEoQM[Tcl(B^k4Wuo7CHSF#.Qg!/?Y^gVeflV(o[E1r7#<W<RZs@8+Qf%'hMb0*X0j5pZU7t'Gj?uEl13ui@Q]g+;7FhCWIH0B.-PjU'aC#IL;[Hg>.t?l*!!!mB"T8E0S58_UWjg)@Oo9YCS,!IIlP2b>'g#%mZ*Hn3@X!!_ZK7rJ71R"AEg4X,"M-ViIXn_Mh/E%/50Ic<;-Je]E\?EJU2JLPs'PJ`44_jW(p`U]&,>q[urW"C/n<Uld`M60$=;j%U.pRZ!RtGN$B3rb5(TSF)q[KY!^qQ@J6J.ET?76jLEp&oY97oC$L3p[_grPEbL[:J(hPnCl%2XV9_T-W/FaF::+3rKK.&uu6'>K?%i+:R+#j/'en-*4>LnnpcEJg2EKa&P+#a^iNOP>V&ba0OL3u)8e4WL)%*4uLFWG,8Xn/IRNj<P_05odebr=u73DfD8i^epqX7A-Ii%g5lgnf,MS'<hL0X#5!FJ1.t?ui:2G>=1a"A:=A_ha(>^F-XpW9#u_8#rn:ToMlXUPe"u$/;BshogC+@u47KKJNkrQ(?+Xljh+7I/%N!%'b2o"7nIe8Oo_dJU3H7Hec`5-L)"4;B79aNNk_G/--6=']\Q=ZGb`S(]m:^9oShnOf'1^,EHnRXpB^F:(m;HF2p19Ug&8dSBM%(X+6R5aAQOIq93[J\d\G79Q$f?9#)C)$'t`"?#qkVI8i$m/eDq.b!K:;5mGCl(^#9!i_/GpH&/iV^[)g!NhE!R\PtT/q.jE1=r9+%1=q%!b:pipR3,[*Ng9mGZZaLI;,*UqY(/U8<nh<K5.IntoH+6+S5q>+D:;3-kl]L_E&.a./\rLJJ9"+n7+;\oSREeBV(rgeQL<,^%WiR7[erbS9.e/C3a=2+B?qQgk3OT=RY-[<,FUN9'!^')K$JA]gjce)cB(=&n'(.i-n2m'4rY=@=(roAmE08_sQI7=\QtB/pm1u[;%/PC4'3PH>t`LnYI?pm^"<u<JQI@S5\LLMft!GZ+WbZR#I%[J@dV7dIRktp)oGjsc7&'^7kU6NDO+s!*BZD1ser9Nd-o]%39P_HgQ%4A6cPOnkXOKNTlncSAB%BG!Pt_U*Q7%V80\"3B-<n3hiCoOS&toRe$rqKmMRgN+"/WJEZEDQaiqcn*$Qf_bma><2l#RT33F2OiZu%8Z:d1P.oG3mA<I^8?*<l1mKlXW'u8K<EA'%\[dtiD`HB[[<u4DEn*p?:cr><FYT1QUBiPb>0\gTkQlk#-"A_FYCfS.r>70O6/eRV%_f_LM<JKSNMgEa]Oji`c5k7qoN]"Ej81$%Z:@pAA"e%5?'T$4`k*:[mh6Ko0N0K]i&_q\_\K]#!#R)hT5;iIC4*V42#+b%g5as54%WOmXP%&9QP7r.8m@9NPnX;@Y[&2<`e(V.RWJ1XU`W+P5XUi,CBhLO**=t!auRe`D@d38,q$R"]:g/;-qEl;'`LoMZ]"J.m>V-FQ;%]LoMX9E,QtQa;)D3$/TRTsD=)7h=bQBT^BZIZg&:LWqb-<SfSa5+K62gU0`4XFj3[15W_,,(S%IOsD8.`[51I.%6k8S?t#.ZB(7*%BqQGq!9UFlH/enJ8grk'TJi=HYm(&,?eg\:'#R<CmHWrbZM;Z$_kSMnV.,G@6+3iBnle:Q(`SYNR><#-4/_:TH,UoVb.r&)M#Ocb%!2I+t3Y"O`Tqt6ik*bO@`<@%OQ0\1">>AZ7g4MuN!n=*ei8JE49(f7STQcbG":_1R(f^9tWMpOJN*fYI1Sr!pMk@6V,ib_2RA>Co%7Hk47N/>`9bndLK$NBHOm0,;=`c@0Z[(%<Dedq()U0q;oEq!OPnt;sr!\CEU&i;f4pT$PNWs)ii/Np09$s$bl>um7BDO.\P[tlOR%RBNGJTk18Tc`=2^RYs*^-ApR!!1)U>nu@3M4.j7T8[W.9`X1VN(6dYR>3YCK'f3G%HUPlja^!@RN7CZ1Cc&XrYnEpVN3r`S:1-.&%g!/_%_6d&4EPVXC<b-6;n=*i>=tBBP+J&l3K;&&*B[T8RQ5c]@*K5;8dl6>7k-lT@EOU"&K1i4T(Tc:F'9+%grT0c\A^bLRBR1+Q%e8Hb>65AO%E;D/Z;Ue(p:_Y1jW!m8J`H;9A%BiAVEN=9&L*a__6LC\`PK(H/T_9<u?4Bt^e6Q+Bol9PG:!G>"-q)h3Yr]HdR`sfo%XC7b)c$k]^Q-m86d#/m@kqR0S;/%`hK89Ru2.C2rYtfhL6*U^#JVN`1pS7TgaW7;4bej`t144<.U?r($8a+[#A13W8]#epo1=]N3%!ccYp8OphN=OH<J'^U)K:9,<&fP/*5S<^,!pA8ZEZG9m]e0u^-R/r1q1aVs\Q#m/55q]r>+mN5%cO]fne?`mDfP?p`]>!,?]dt%0%1\nRQEu>=7V=\?+C01Lo`8Cc.0I"T:b:'IPP.!X+^MfAC&UcD3pOR&!E2lK44nO2KCUgH%V1N!I'6(9Qm08<51UIXi)N^8O]S(@q%_J+QDDh.Oa[]tpI!^r'VA=k!\WAC@rU,b:_Yaf-E^R:NHL-%+7=-\eumS`1Q>NX"HZ9/sI)q)1;I=5ckE#cOX@O/(E*(`g41oO6V%TRG;)+d(6&\?$>+>P1[':IGgc>=NbRJRG!-<\pXa'u[?3S7f(!DL'GWXYq;lgL>b;(;Q2hJ[]4<Biu_*ILHRc)*uQ&g_'W3b$38a%9nB!b%74Q.8$7fL8E0j:])o@gQ?]D7HuebU"e'3D&BtW8\rQoCLHH02X]g6)6d?aH.\7WKPHtJP13O26<#@CcW\#N5K':a4N>cn6%<]"2OXk69sZ+rN$r>"__a`D(TkD;R"nMJR7b]khX4=o<<*>)s$T;+h7'^-:NehTL@/".>YPceL0CP(#cHVM)F=B1"[!p!hOjE3"4%5W[nZ7bTjQj"A2g:!(mV)0d=Bc<=B8r3EDPNU2f:QK((W(>o^h%d:1[RtrbZFUCC85iis,-!'jCRD,&H[I^jb+OP01]B;Xs(ABU3%J4?TU)k('C1)Y>9qUsmP<d=*-^^Id)2uS[sUL"9hZ?1%:g374=ZO+OmSYIBpRD0u;_FB2;=l*OQI7ptO,lfMN/LbUt$4p[&dcmi2%8o&LuJttDD<FN\gN'".$0pjEq$9UGN<shmmj\n_?PM]RI9\.pW'!<0uG286a.)s]7)f"fNJRRW)`1lke,s_kH*@"A&@A7`p>u9M.%/VueWlH?]e36c!_VD;2kX3^sqAGn'$b!]W,g?s+^B^Do%q;6MrdW;8%C=bk`=+]DNP[:6"S<q&F5$u*Q%3/@.KfES`R'Tp=,$U5$%7;f8'$a:770eC#o;I*6/M%M;!AO*':Wle./V7-iBDE1k+6KA"m@9+eV*ikh<q9e/0I6K2j]Fu#He[cI-Co>#,8(8M.:Kgci$8Bs'%LGf&Rdn#1?B6]%$FV5NI3I57AeQ+f9J4@l?5cq3kHc/h@?^ID6gssg`MA\1Kb-!l7$nuK8CqP/ofiQ.gNFmW;>?3H6a1tTUr3@Dm%g)QQ;TK\gV6YW"Y20_f8oEr@YEZbBL*S"s2VLck%88:O.OTCk6"8+.ISd=.F,R)nhJX"5ij!i4Q&]a4sJK/CW#(\Gp%:H!N("%rb%:#`0;P;GhZgLKm\%,tNDNimZI9S9[C9Zf,36rAG#,X;PX[3V1i@_]+@f5dtC@jrK)*@:G@80dE<<;CM4I4WIMNh1hKm>eg1E_+Ae%b^cX-@VZB\=Q<e@G-r)\3Yi:&DG&YR_@$2Enr]0MClIYF%V8'^FV>XNlBLXe:)4B)-^=lE=t?!%J%Q#kP#2Pt9MBtjV/q@dhC;e<%1H54-(q?6i72Y'NUFP,M,LTSoi.9Z\k/>=I,,M<D)HNg=3DIKh#]]uGkfX=k",u&Fm5gO_BC)3hP-(F99d$T+esm^.`j%_P9N-YK%6elS+DR3s2^VfNP0-J,G)EmL.&@)9ISOlYi`s'9SOPE8N?!"is<YXP6YFaSMLErCgn+F6gO4&B"'!hRH3t6Bj#S7:SiYmg4rI8Z0%J=3aCNuKp%9HgeN;W/A#<._os+'h.j!hc%)>3YLdhZ,R#3^XZdq*TY!FQ!\1F]S52Z6)dnlWuu!>Y/.8(Js6b&9)(.LZkc#TMRQ`%P65jqHA0QiG,E%j]#<M^]RK;%f5\;&:;cP(%eak=B?93*Q;Q,ba)GE?(ScLX_]V5D^*,N0qQ7.2IHa/qOd;iX6H/CF6ES`/PI1\f%RP,bgI.'%f>\_]R!NBCr1M:c;f:.TG63E7T$:9^;kNYXheU0(>?jsu4hkO@]@A`e>@\(XMM!R1Y(j0FN2\Un>R.eTA^oA/uP;;QX%)9O`aoT-'_'W^qmbS-hrqLHJH#KS%=<2d+<[rX+[K_uB%\IYTpjK#Gk/1kQW68Yp$csF/%?uGLFW"fku.7EMZ3I_nT>$F_XBsN$I%75*N4cEYsFCXVQd!P_TGXD1m6WL$83d4Ym:hFp`$0"/bd?ZCmf6h@T*c"W&:h+!<&E16(gJU45$!+o,.Zn?&GqaibopA+n[Y[.@u%Oc%.@;U[&"FVm$0[E?o(&p98sXq5QOi:;i"7sZb0;G0$^/mseg%JFT=2j3<S?;ha?$I6d\QBpBe5YKeWifU[fH@Vg5*_V?TGthIW%eN)sO!nPMm3>W(+F(J&)>W%`!e=,AXo\s%B3W5HU6OZ=t<!RQ8`pumlhm`R^ZVq4]:josaXg@ZjaPc<0f?oN73'LPGe`eut7Rr_;%dd>QIM5@d1n(#Tfj;Ii]rRAK#a]WFa9d%[EAYs\CHnfKXRrI?ADjW*M9S)L#E<h[B)f]0dW]"Y.39\Ms>J[V#:p;B`RchbjJWVX-%)")a'P>6YVTFJ\'nUV;o"!@/Z$sF\84".>_h4&Zdq.E28$IbbN/2)sM/fM?75H:Dm3?I!tNl@cjebT&gcf8$'?j%1cWquSuN/q:m%>;tGHl[iA9k8HNM\g^P*ZTPg#YZP>DG-L.$NnBKiVkh4Q24kZGQhl'@U=p+2rJ,S)==]"q+>XQ&6VI0^$>:EL!u\uPIS$?E'd_ce%S-kI_dk7@agTVq0<=9C0S"7H^$bDD9,$I$p'a^3eQ?bX;\Kbkrl#ci(iN*PZeE4(WjqQDn*m8fCRtS*Ql=0>7UEoR7kaRl?\k.Sq%fM<ruXD-pSDWZ.(<js"ORog7Vh6fNN&-db*G5;-DMgZN+P5F4TcoXpZIb_!IG<0a0ZG6uh=Bb&K&Heac=?G(gY<dL2=<F&`Q\B6,%_Rd#U)WmB//Y7pLDTs(M97!@>;0ss+P2Zdr#sDTh7uDsObAJaLM,"G@nV=$!8"]D@qcm6RWhaB+UE<SOk2<:DV=9dj=*ENV3F;-F%9&'<n^TTTl^\cEpD>Wu_bU7A]<o(S^mT'a?m^Bh5hE@KCc,bBqf4rg&])2+7r:4b/IuSYc[&9QTrmqt$?30K=hV`5DhMt=)S]hL%%XG).XQZiJfn]<u^^je/K95D(e2_2JlXqa)!48*mOL,ra31E/U>K8gX>p!oroogX!d/Q5_i0D=an-FFiHJ-56oTCregmD#-Op3(8m%>EC`nhGM1;86>m7/AIq@jip.,DNXne?oEeM4mi]te>k4q70?:<aEtm9D(Y&ERd>:k_U1m8oAb)`>s9G]Z3li/j1D,i8=\frm`,f1%'Z@*HHB"_Eb.E"&JT\KYTpdss*6\$U*ut!?0X`6K_3j1\lM#kY$hB,&Jlc<U%962+\i(/PB.\mUoS&J3HW5;nn_+e(E_9\SOf,:d%4lYNaEZe5]H"/dC"fk3:)a2FqH)S]R6C&@Rj43!r'43NG41[$1H8%!j*Za8>\0$gPQAi6TGJUJR5\Y:P^Ye)D'lOq(2[Xnc]m&i,%#0_j7WhcoSZc!$.()S`EUqXV?N6e>tO"-"`5QnPJ>r0SLE4qTe3\(3f!I<3:RQ6@mXC6Gq88#>SMr]H@=?BRqn7$a&k%q?Ras2ZA%Apq<opLR.Vg]/&o2Sk(Or3.jHZDFWm<4JdW/T"k?bYGR&d_!H]%J%U?2i-<3ab/Ue+,2tS1U=cH,UF>1-rA>?9#RfdoYm4`]GJia%mp0:q)TceP>?8iHO"kDXO4u5daRdH)9;f%X$!qHM4K)l-hXrV(Rh`<oo-0=8JD.[Yqt_<.lpttdPWJr4;sG"q\N_D,Kr;:D`tiY*%OfU][oi9q5.k)puNX(+>hG(&i&Vp)aT:JaD7L/Rg0G\SF)JR)LHO&oE"TZYACGpj9`X[>uiHEf2q`:oG.M8Imn7K(+OB=lbh:JE3%hN>aBG]nc6opb7Z@3a8=2n7LLm3.5=0VB/nl(#c/"fU*RB+<4=`33bqhN!jHT,-m-h;`^/(>DdBSFG.5Y"MhRIABPG2N869M1@(%%-9'Yn9I2R;CG`jNlWOYl1.06h(]=K(13M$.7m@$r3V@ONgT`.V]Ue`$hWKm\I/=4/&['=10)W"Hf5QYRhNI4S<:7FkcSu*K22/V!%$lJJ+mTLHXmr/?n)8@1rTOD6Z85TF>aU5,.@##B[Y8d+N&\U2h43dT,G<X]\/bem;G^Wna$>L(IC0W2g,mCB=i_fL-_p+MK,YI\T%mG"n60@T6gr_>5?C"!f!qXk=s7*,Y6>Pp]FX6mH8.H#f_MroCQ*cW[3AdtiE9I_E7'<r\RlC-pI!!8Hu&'b\U<L'?Kad/D:!D$1F%Utk&o2Hc^JG#i=1UQ>*4$=\'RV2n($XnR,qeFY\T\396bUp25@/\t`^H`oG:EV^%@65tO?1P#fnhh.Ej:BE5Kk#A0;R6;E;^dFrB%796E]`2rDSemMKC[WFX4=V&H#c[.&/*K[0.cu6ro4tiqBiq;b*/PfE/C#oV&+!7l?R[V0PVji+j!#5ag*q*cM*VP1n[ZpH8$F^_]%U[@B8>r:^Pnm:396M0tB*Z^k:i1T[Ro=I>W`5d`uCM^>;C7nnRdYC.EYd@?ooWW!]Ljghp8o?Qf+AZ?O8@olm\bZ)4m<R8r]j1#,%:]oO$]%/o]d)"5=R]YH;1ZYkg[4P6n#l%/9^2/t1F@F7dFcVWSZbE'4hOmJ%dZjS7Ca`61%hWg+PkF3$.ZlR+81gOS!IX1eWOEfH%OSffRe=O]mX4Y(U2>aOo<ZmYJqE"1m[F&;q`kG(BgbE_=@S8g&6<ed-AUj@4DK)l"g-Z;7ZRlNmLEDMV)["^T`N-$cVLoNFb(5D2%o2t79TU,S&ed!&KT#UKZ2J;BFZXc]=?1Z,QI\Mn:_2FC,%]:j59Drp.j"4Gh*PnQ^Qm(1$g44=E80&W#li;4(MimAG]u)=5k%c&-%HU(m6o*b`d3u6TDhJ:CLK>\+^4m7?jXMD?M/6po#)R,6Q`G#+#!/mZefMYPd[JTC8S'S0UZ^V1]It4@I54<IjN9tB?G;H>%(u2n5%p/^Z1ZniU@R,PW,2u'u9R]deU7Nk<u_rU$#5=s-r[)[lU^\0532i$8E#oqc7<>2,?/Absd8OZ']=Ek_W(q12I'\^*d$>@4P"&A.&%R4!,;^m?tj%spqb(PI/?F^$-KiTjf_^@(plbsO%!nThsamsHOelB9X:8IF"rp[l.3m?hJCAeFA97Q5MnC9odg_Wn?QYZomcf9"eh%T2g0r2M.o5jfg:K77f"A>En%eM.d@aCq[nqYQI!sp4_=n/&</CfM]nIZ>OgIl],</4P]lN:D]Nb"!o\%&_0s3R"<4$UgWRC#b[E0%)R,\I.8/61_V<]o@+4d`LIZbi>$kIN"NI2uRYi$_[5&UVOR["3$'t-rZo*dg8Tda)&Mer\580]7r=#LJcg(64g>8<g7UPIZ?uXoq%C^2.q5:pBjJ\HOo$;eZWWF\_(3uYc^R'/T$IId_;O79]tI1[i-WWq$4_R:Omb@$0s!fWG<A&-"_fGpq$%jj8=I"oFf8(cj1/'u>\%m:Gp).:[OGM9`R_I;ip+p9e1Z+s^dlZB]%dKF64agMI*l3>6p*D7X4Bbt1_gGA3lEnFX23ZDFK/p"aB,f.F_NH&.J4iZ94F4,XXY%5HC+DCPY@s<sOqa;M-l,Od9LC3Wbcn1[NMQFW8='`BGW.@Y)%*rV(H:g3_s&mKgHT^&"5j"`IHmd-8JSEuh9MX[(UdW:D:kf]1@>%Fso!WQ6]`o5BG%QP1UDnL<s1<^@(I_c"D"#_:eu"b9L[=adD"#QusNB?Q.H$W3MY'I<t6YNSaT]ln'ns(p1HF:H`k'C)a_0@!I#:%gN2,>Z0TX)RR^HA0*1'5TJHrl1i5KWp0=#$,-N[srU04>%aIR)CZPcM=%a7+05_X]b$3L*Pbu._n9_iVAd=7`[$>>[MCtS3F,XFl%H`o3JA[UHHfFfcF6dg<dd[KhB"+L%%gpRr(OTp=LLG36Nhq`bWjisQ#DYNaAlWYoWnTfoeBC&]Hql35a9b^q7f"O*NAis:i!%K\B%mCgsh_X=holR*+;eMOmP5Y0e(8rQ_"]U>N"qQhVIS&D7^W--nt/68=?o<p=qh`G!efd\k/Glf:P6t#A)2<74E:Xlb-%Wh2eJhM%+%F4qSEfV%:]kh@<X%V,6Zo+cPhW=jc6[6Nj_:i\reHg14YGoaNOf\/@0]SD*'U.eHsL1?oMY&];S5!8BhD[jVhNrThpj:-`/'u,Vg%@0$R*lVX<=r;2EZ[*(0d*n866#=J"C&@]^YJ2F]FoRPlfn9aV>^7s]]bsV,?&UcYR6]"psW\mD,EDKj(W/*;"0\)'l9.5l.-3=Tj%h$GdUjR[,=R0h1$))7fXIa^1LC'.a7m4\^^OEX5->QOCPHWl=&Uj4s_10U.l5j=*Pi8!Tu%_\\>hq=9$[Zn1n_HY"R](FT5&%D?7%+^="2MWRt,@6Hu6jp=iAj;8,Lc,2:M'W>@$B-8jr6X@:Y(Q/dt_`HIF@)As$3WW,;)AGKVIY5[GWO/)]e$LD4S8=`F1>2LFkeQ4l%FESII?.,6ZoTg;/SnuW+_%&%,M`AC.Qr%oc<"#Ge#[g:T40lFtLp($4IId_=>D,1*^,FrXlW;mu-2TF+V4o[WUJUF@c%)7?mp2PG%d>t,93K(#g2Nn@dWnH-$4'-s\<ffs<d2EieJYuh7UtHN8PucQ-"^jo*$O:-JI/14&_c=>KO1fblYpJ.b_nMfDTjJ4!LA0*.?gK/G%#QqO#8[JZjacNu#8`hWtOND#%n"!rV`5l2!ASkaK[:,7%6*biZem.f1a#1a-D8nZD_8l&/otT<5GFRl0s+NZ73kUM\IPMWsPP3*$%HT<0LdqRSs5MLCE0hX&#!KD@+WDSlAl?CNLSc4]fiJ(6d)J[UG>;(j.I"H8Qj*'*nQ8nNq1\9>k2cFKfH.igrrLBea[tns,rjTtA%2SX#F4P<J-ocZOT9IPPi:Jb+$r;`7/k2Gbj*7;$NS2i@[Yu^)M@Qc@+NnnD8Gl1L:Yg':u(ibJc*rhd$G6n68IVd>EeXqi8Tl^8n%cr>,#2=3t^5o(iE!C7H1b";"tB-I!OpYbp*M[3e,iumF9ZG!T1K[aFHTCjWTougT/f\gXRDcbk\e[eo:gHG$]A'\l>YEL?#TJqh%%-uGL"8B-NFaWoUjLb)WBlt_s7CO(;"d[o`M#<\0-l*dr-(`YZhVa8D2-`8)%EX9BQ[(QCIMfQ.OT.KX_gZ!AY4jDT:S,6d^53.&B%\s1OD>6Y%E>bT^B5!=S@F],iR]o(6$FbfP1c9"u2g1@^dkrWHT>rQ]mehmn[=`c7kL7HHnLN)TH`A4'JT8r2)Dd[Kp$bS*N`4(["%ZIkdcMq]h*]@gM&pK:XKSIdeL?RP;cRU;CLSheX'i+&6iW:UQl+,E"l1EGqA$a\VMp?ZUeqn2S?=c*eH.#4bHg]r)Jro/qrY7`nY%raqf"*18+4ln\Q`Ao7/L+sL*LS8&ZG*/!nHbTJ0r<83u6]Kcl@72J#M-\QcE!NPhA+=)/l#'0H#KR'j1h<cbMDg10bI_FFh0Ac/q%.?S!1B)6BmqNF?&asS%,6lh#DnL%+4B]5r7\rrS&8mX`Z7@BO>0BPo$M;rTIB*b@%2>#fg4iV&CllFk"&0<lP`i?W#M["RpqFZUW%f=uH7A/G!o9C/^q<HT,<kM,!>$f,^/]8cXIs*bhr3*0H7jEBfPRH=fl#]Ch;,j=t+(a^%KQ/?VGP/eqED_3I;Z8LI%@[RFdLt:Kf%@Eg`ac>DVepF++,?44(57g..S=2BH#bhiS"LLmc2%TZEqppY.$\JVD+n0P!P`<4]VcPH@h;qu8_S#pl1^L,"Tn]RhOEB@s.bj`IY%kRBM&&D#+rV.%e4_OV'qbCsP3l,qa;[ss1E50ldL!3D(d#6Vo:cg]1oI'RWCCE33MXt5M%0N"4=(2dKI6,Gs*Cf_M*gB#Y[KoDU,%k\9=Y<N5,(l:AXq])kk>nT\N$\@>:W@80G7[X&Wp$r83?\EC9+hk.:?f3e<7hgR"3IJ',JDsshH(KYoO/2!529OVblItu9Z^?MSb%nsTT4)7P`-X+=D#KoNA;SQ3(-@@j^i?Y<.jE]_aZC[s5,5FK6tH%)3dB4^p^m`p?7\iA+D\%<<!@e'rC!5aRHh]_WnL2S+mTT@cY%^kIdQqj38[M1pm!#as(UCoMPJ\?N(eQ;<b#]8;":jX5t,]6p5%p!'qTh*<V,p>Z"!Sicb^*?t[^%r&1c)NS&N5'i^9-/PsT<JdGc%!-5m\jLE>DdMZs5I#FD@B."Z$^uqoj\i]o=1G:jk[V(8MW!BL179'pC<XRO+P3V:L>pR-i_qW_Uh&3]6k]X^(:[a5-qdiC]VfP6O%*3a_Y>Uq`WO_i3H\P@"^q!=05S;oe2k0>1Q3mPm!!+b3#*Oo,\!HIGXnCM:697Ggb![s^_]3%#8qT0M_h(H/UlXe)-PFQ"#rpe10%o5m'h0=1[JT;qL#6TendS#VJ[i?n.+KGdC7D%Se8VZj#dgi,Bk45+iD3Yt<M_&2U/P(o@,@P7>6#kgOK9Z2sm:(i-F\hu6uZLYMM%fsmfJneh02.<tFq2aB'0-"9.bTEI30IG75EZl3sKEY'hZm2"Ld2`p>K&)Q[)7htc@llWui2G^e<qUt42e4CjJJXW)hmX+*@i<^qI%_J!'SO;DXs)%705:@t2&)"$3).G;6(emqZE:%C4pLFM;PEj0b:]*F\+b@>=j%>^D.cbUshkN.L^/;m_F$<-crg>D7\:Nk72mQ97X%04XnSjjSLbSZtt&GJqc^OS,W`MH@*.pK!:&jh<0;UH+aVF*SaheG#V6?(A;VBm+9[5F^K\Fng'tSlb[4J,+$_qO!s@Gq;R[Eq*@m%H-*>Y>e[UP`$VQn`:VoAgH:/_RmVM<7;TeCL(9s..9;(:%jXR:GXYNQj0qVVgSNGYnCiLnI-L%Ol=F5(Er\kk:H1Y#cK6qI+Q(%1%E10pG"`uB?k?s30iJ;HI,\R9L;l$m@A0k5[k__9\<TbKjB46kT"!"*]KORp_SDC"5CGXJ-IViMO<Z0+$IAjHCAH;F5(]Z<0-ut\Y%U(Yr:SCG)i9X=:sa6u+SIm#a>6S85l>hui8hh+^OHS_t>3OkW^qg#k\JPTA5An>n(_!PBH,FL'f^i?ZB';<NNF7Kpl4H(;kQ^*s+%BH99O'3[%gAta\'clbi<lg[e$-EHU8@`?MGO`W$t9hD1,*A_-&I$7KX.CS#GduM_^%VT7&J.uIpDc0D]$3os:%\>W.6fHGAO6PTY%FR4/VT+:U-C2PEhP6o!.SD.Vf)t%?;F$#5&'7Se36ZkI+V]GH3bYge9JKtMd'X>q%rM=<K-e_ie/k]Rl/!3ZJKpmo>EFugBC$K6A%inrED9kH:GH\&'Tg*u[ETTDrr1<gq"oZHN9/7ss20KQHa.%I1Qi-*NaH5YY]s8N?!#;>V>s5@p0O(`0UrV&T?CXqZ8#<=P&n&(jT%ZGQk/Mtm6JS23!ipW#`e&YG%"m[<JZLHkD1q-=5\6:kQ>!,(4n6n1$,E)9rl$E2fK=NtEk`CEX)]XG`rkgYdr^j?UscK,ZcB4ZW@%KtodR"eaI\+GePXnKn:d+V^DV-$&QG.M"_4@PtKrf'*#X=KipSCR*d`=Q%sm,X&T'DgEcF^>V]dqUnf2Ks"ND;e;f=!/5QK7cC@O%RQ!c>lr2h^p+Ah?HEq]2YoOD.X8.FeY?QW?r/g=]FEL"\T-U4Q+o$kQ9[b-J^U!qoRIR7+icQDJY,s))"?cp7EBOO7(S,qqV'=bl%HdKNiK6ia?e"^J$S=k>Hph(7_r4LrjY)*1(Os6h49a_!7Yk`p&2R!)E%2]H#BI#t[j/^Y4<=.t*e(FkqG$WIHeA/>SK2E6Q![_`Q%PdS][$sVPAjKrEr!Db2kU`%G4s"i61/ED\:F&GOA3Z6;EiMHDs>4EqI7ieQd"_W#sCqrF!&;iBqmU.c'(ssfM4Ua))D%T>8I1*R<%J[P0?Y7]9sB,q&#;9]US]\3cX,Y)^m"P5dfeOcIHRir3s:a`d/`6e24MJqG$%@HN*j"8>i6=5Ahf.3PN9.TjV'9Y]:.Wb\@lbZ&`%?Q@tR^hcEN/]<]mZm<[J0-2lkR8kSu-!;HSip>[u=Y0Mmk'G@-E8^pujpJh!P6H!.=dDXo1s^)/"(^:]2R9d,,V[TM[>[HuO`qN_%2m"FQe)ENpMdn)8_`F?Z7('r#2J\s(HYM:M:QUH6Vh:r]K&P@84mT]O>?hVnH.h-1*4+.KTN/>#]s_*]EFYl`$BGD42<7h9O5K68%Sd*hbnFqdD\c-VspV1A5^`O8^R$sm##E:!E\Yo_-Vu\22;`quY2S_0?8$F4U!%m4>XJ!TJqmN>@DSQlH2.'+S_l>5<82#ndc%,Vp%XfMc,2:B1AT%(Oi$%N31.OI4^OeH&:Ng4ERfLaEA+N+DSj9-LT^cTMVMVni])jWRfVC#c[puWKm6Ybf,Aj#]TBaRsLCNU(`O>!hN%HOmR;cDP6?CM&G@eAQoUNk[DAE4H9qDRh,4XI#7%T,-n)+pd<ulif`LE`i<en=L.&[3i.uJC\AQ$h$"s`2AJX4C%(5j<MDN6ucca%%:0O(==V)e:8God(6D#*X'*9ZC+1*H%UHRpT=Jt#fEQ2fNN2?/RXT#VF?L?5YAh*a`/%\=<9$us7Mh<H3J%g=!o>!m@m_Aqi4lp3%/Km<9B(P(e(L9S3;\+OA9,BmO4k1X8$(1gO(L+G/:aF[/2U`MX@5T=u=OF]ArBoR)EYt3_+:BN1770DYGNt!UB'WqI6ohD9F$"NX%g4ceed$M_!RSWdS:5V]bHj1IYJ%6hh#&J4#e_bQ^k2NQ[hFIH$2mR<]gD>=\Bn-&Q4NQ[pP^;<VjZNehR`;o'*NVNVM^s']3!L%>%?jh:gF]-g+0Y62im%e)c#\3\3qNj0/=cBd9G&K+V[WCqun:@uqffQsM6!@td^:F(1n(,hfVrq?Hc`Uh6XN\.I3@-X']Q[)F)1m)L%OEqPi_(c*'5_FuBPF:4U>B<:'H4LW=1-=,afi8G:_i'8K%Z.0_YklP^M&]PcaZ(fCrAMJBQn9t/Ojh@On%As$e6%WTYk9Sd=*o1k%-+t3XDt51o2kU%Z(6cu_K\Np`6k[=qB1nUG\0$Wj.:$:S_+f9V&/N>2\NhC(%@#_SFIWR"IB?sR(V19=TE0[o/:9[Pq[88bH,pB`%!,dS]#%mpbd;a4)"=s`[]H,=iD'1F,K!Rn[A<_(E!jFr:'LcAlIc45Q#FXljW#jO3'AX7qj+g@5m[b$eSU\uaA#C3j]@E[a,*&MQ%e>VCfSIA/0>dh%/ZF<5dlkQMdl^T]m$0IFW$qYX-m\&?K=&SnNoa'3Z1CT8\bU00[LW@np8?E-T,M58\U<[$lJ+M\=HjA05q+Acp%gS&qAd"i=N=UoHu9AG.hR#Uk@N#QpJJ-"?5B%gr%P3lEa>0^+.`L%eC^l<1j0OUPs)S+(g0n/pYa9G^[4k(Ng>ESd]c0`>W8!%+l%M]pC4nH;1q6]0`iO\0Z0m$]qGPGCW2Xl&g'4d4j'(9iZtK)`?bOD`$"&PZM$mKe(_GCh&=?:S`9"j="NqtU7F".MF$'^#I5U%))A%qh\,?N7lCA#HXN72)asY;0+Vb*hm-^0XL,++Lt_bo?h(?'"YsLVSCHF)a8iEbP^_?nRQn@g$S2>SVA#1l<"[1M^:gOmW![s]Ir$n%Qq5pe/'*Y9*@fbC2?K;S`tFK"7V\PUMFl`/_I51-00?V-h&&tWWp!m_a]mm>#dHV+K(dHKWgTXj1su:S!Z@*V!GpZU`b_-]2F0<8%6BJ/#Pn@X$,(0]7,2P?%])>#]D&o!dlQR"OK>g=?E/U/iad6+u9jMQ=m:*t#XB2#^&6XQEGK#A*]7VL1q7-.VH6-ZBME6l<k"3#K%0P;$K`ZoI!<rC.6rm@&V[]a+:^$HhI=6=nLaf$On,Tj:Fh+dmBL,X=J%l)6C^:BNfam;hRK!]G"RrBCa*4d&,LH9*tqO`B`Ue\-%%Icm?LPRGEt/=gD"i5D%&8QJ-@AUhI;i%/nET3[("%tc(j;f/3PR\tQ.`iR1SV,a)7&PY='5K8=U)f./7_9>gs/mPCIShZ*4?rpHm%-r`3rlNU/ElN2$:p(2"r.C9;UJlb,q&tNs1%r)@GQO?mGM<Q^FNP!^r:G=RT=O7Le*(Oo?TNTruc,=_?I^Qoq_*$#_%'FF"A<m>R%6o9fqO!gV7;T]Fo;fc7an5-(littr)Y-RN'ZYC5;HD;G%LtI#e3S579b"tGB9!Y#_]h%'U-\)S+,N5g&3:pdWk2;@2c%&>N7qgs)%`$eS5>*b@pM"B5NFP%H@Rk?!u,T1pKcK;SaA>!o3,$Z_Ac7nd]WT5"eXhp-`qe:Ep5A[5pk-riaT(u&(psUk%'u6ZnM;dJjU`9A%%UhgT$?I7_Ve0Rf'Bt?edgCLSYSfYJWE&AIV&[b;Pg3VnE=Ol5bJj(S?F$b`WmMiq^R1TW!"P6K)oMlSb+qOVQ<MJ+HA&o0<;)JD0%*k9+n3Q@\9/s;u'\o27p]NP]C3W*8"_$0J(:Ut6FfR/][(S+L-M2Ug^>aa,Z,&F`j3N2)La<LE<YfuI[n3[q8]Y60U,_#5,>LeEJ%,/8mT!_DJ'-tG]GmYdJ)Mf>VkP-s"3IPmP7;?-1<Z@]0M'p!O[dNr`uN4bMiLe$>lc[^o/29_!Ll''i5#UeX'?[/UoWPY"JSVO^(%(4!$^d8X'tImb=fHZI:1[LsY:f,O?B>khlh8bFNcq"LOWb%!OI(J/oi)6c_1Q0S*cqc*Jap[ci(Pr1"Hf8i.gi%$uTXEaG&,d-q>%$7]*j>5^jX'TQ,E5rVaD/bKnHjpi:G7m2IN$[!R;'?"YshG?+X)-MSrnUoigL`A%=W4o6`$k!X?rj/c,d+lQYc?cO$'b8lihJR\5%Y"_C,SKao0>-H@n"NSYaoqD&RU)sOn/dRg"H7jkpl)n=ji'?7iGOMUM1\!d:CX<T=1WA!fn[0):]\bXlMQ9E-"QM5Z8lm+&^b7%J%A:Yo!hLo`FAK\PWlb](dM>mD)XF@=&h"Qo".3>9U<eH7bd/stR(tT<K8]LA'$AACP^9N6[.N=1+We)d+1dL>lf,en&c+V021#O/O%TQhb&#<N"gKq=+S&RVl$M-c.VkC.975A4:,$$8BPr.h;a:%g4mStsD@p80IfKn*^80%%dIXCZ8e2Sd9NJNdMm]LG*Q%H++rl[e2-%,3$4n0uaT_"NN$QP7:<I8-rCBB;@=7?M%.k:4A\X1=Oiuon,+]JV[4u&RoSI"A2r,H,1B6e5Z"'DQRGKP:+)LHh?gp:=6lD&eb,Y%KH"`M$+TqPpDr9hmN-9-j?"'oLW"I24B]")_R:b$`S>(-]F4TL!okW,#$,ZBC3Quod_n;T%ar";C-k$<Y8u(3ZRFL^OpoE0'EHG?%lAs+`9=]DP[^^:X.?+-)a9i=)XX-YiH\B61Z(c,WCliVJ;"`AB4h*+ol8mIHU/&3qMB`/kqJFs$^3gfC7<U9L2C+lF@d_#U&$:;0%Y:L\`<EsdLC$OGrf<%2GD"L8,@l<@fO%ad3'<@YLDpupK&M(n-C,*d#&Eo#%Fdu3;l:fDO(UD3Q[0M3I%HI^#Y"7*_0B0P;9FM^3%1[)mT9f$Z0buoQ9*29<q.)u8^ZhpYlm5?B[*u+H9@6opbM*)[3he=9feci\4KqbDuQqPrg(fj".C_]94X1nO\G0Go,Kj/$%o)#'s%T[>A%1_CB;9r*jb9pcRVbTE)(G56c+0iQU$_[9,Z$Ds]'):pPjjHH'8@::?9g[PaU.dZ]OB5A7].D.AkEq!Fcrs_!`hn5h[VTe)e%5`/DSKIV:p%TnZtC&P,E>[Ue77OY[I>:,:&_43SiGA_^TQ3.,_I;SJN+U3&)2T)fFW0AGTQ<e9IX8[r`)#!rf.'1UXpVO'j_7pFU%/F_D"!s4QQ:Nj!3\Z$BaFS<S:,F3=h)H_c2k^,aer,,/KS>43^<@D;8U^iV020`/eZ^-'>#PqjI0aU:,Y<-tR]g1trrIg3]R)aWF%oh@V15:7"gbgWa*n];[(0?G0^"\$kE[IN`G[iI[:FH"CfjLk2fo0W$](ArT4BACImMG<9f`jZVng8`-WA?1u0*r+=!kYA1'R$r^n%-;qs=3"ro-CVc?#J6B![^8KO]$itLDY,sM-H0;[H$SGdD!+9PW^t"8i:i1nNLNDS=W=[,\0d,Viq<KE[W?i\Wp<I%ajmP9?Vlr_s%,1O'L]?YOZ@=aDnb<ZCgh,#-#"3_2_5QsAQKq'V_<L0kPG2nVSDf]"!Eg[d08MFeEq_cd8)Bo^Hol;(>ZX+XEn0V*TPBENN^9!/[%Maju7GdPa2g4\F%^K#Ao;p3uKLc$[r:0lL6p0^>KSU0Bh%_1P51'HQT%q\0*o/(aCScgXK2n#meg%B45Kg/co(H#LUKq;DD(>D_f%Vf]D^UJ[[Z>a<(KYd4]B6'Jc@<tJ,'6:J5_nJQ;J6(WZ2[a,]AqO=/h(TPdAF=AaQZZ9?b7eOn':g%1<@[2Q4ML6lief=S3F&]hY%Y;]:ieabn0m&kO<4Z<hPZ>@a8kJs;%jF#g#Dt:PD"6m`JE4Sm_,LGdDcbY30A_u!'AcoZsF!CdRfR?T)lm@]T^.gJ2gTY/2>)WYp%^p-*2BQ7>1pm*#=BfWTb(3;oLXAcTI>=+-t6X/B3TNc91BY&.^@AMOm_FK&D"gAfiA%ngOeZ")u\F7u"-A6Us]*@fl4F14$>]GHl%$o"RJlC=F"c3Y&-+nM"k#Th"Q:BP69.(m26Hr?Kf265rEM9<D2O[J>@U/Rt8j0RksI8jTH4^YhXGuEI:!F]FNp7+nZk.YLo''lJ+%1?Y$2Ac2"1?qifQW;T5e;;o-+m:!eVYl2?6QN7,f^C9Hif)T=hk!dh_35SD$[-S+&#aa*19G;*Tb]*C*`;6frk)6j0X?W#kZ*P/!%J4-b<&3dmB0q=NkZaUre%#*1f#uI?#1A-M7TL7p>3_:(_,h9+C>3[+>iMLO5<B@9NWF;bXC#"QfOo==1'#I=K4^M?NU59-)IkJAe%RRUW](iG2AHcPTk-=gL#HKUSUdMWalUTS[I:#^R[KRC#X3NI]8Qm/\#;jDUdl0&DZ;oi1c>aSZ8>Ce]l@aAh`OSA2P/8cs@gtH*k%*hfG,;VuZ64_\894bR/.$R%Jlr#!esBgOul2I%s[Y8XM$rlfi_''aOI49YgR:Y!C95;!M\i%+KZb%O@GB"bC]WLETe)UIjC"tYk\%%GFQN"fpr)4h4NH")p+2GD-E/%EKJr:2G/?XX^K2$f1./+Db1.XIj=E,*_a`P<jP55Lr<TUYjS$%/Fn:"Z79rVFSB:;9*oY\/^Qb%2H\X#YOYq).crm^*1O,()XT0BP<GH8PEBHN,Mhb\;a]CT%tUL,(!hK&Z)3O5,Mo7UCD"\GnC`,0C_(Y>Z[m)sA"*BBo%O.OS`*lB%-a!>T?+K\Pa.c?T0&r[n;TU:rZ^<KD3%W$mD>M`aMc\-"raSmIe?E>eG,';>-;Q1W;IL@8E03)\Sf5tESHZ_#D:38KSm<#X=tq#r%^nhd[TD'JG^bcn,^81*nR4oU2.L8NH6^G]-nZl.Gc9'!1g@.B:W*`T?T!ZCU]9GP'-ffi+Zs1BddX]8l"rp;<:D$q=/,ACe;r]d6%)X(I"\LO9k16a"Wc%$sM`V<Yd^O#*-C`m$@1,$7*"a?K-5U87@O[3i[`p7LO<+uD/@tPhQJ\kc13]\9<IIKm"WBgVH4P*3-J-2(Z%N,?rcYA0ug4J@L`=*542%@5prLTGUd_oAETT%ce8IADd'Kl<<=B<?1e$\PP"*s*CL=ENXQ)@/4ia/Ub.%u7F)V)9\JdB7^)ER'1"%h";=3jQQi66$n%-"oXB#2N*%.e)R\L9@SSd.;9(WWWCK9qJIR5QA7#c<Vchla<PQ5>LsE5d&U6XhB=ur`I5Td\DnF<-G]S]E.:PE%ZLfF]Sp]s)f5T(:l_^pm'27bY2R[]`Y,-aCS>6]e/K,/RLE08M+QpM91m7O^mLKJ^@MLq/"?;HJ09hScUsAj)VLWlk98B*1j#Z#t%BiS10O3KtV_A?ds'8;?h,AI)[=1KFP-6LBt"Lu+!O)5U9H=0h)<&CR*#qq>/&alV.#$MFDQVM`njXY1Y,ugNUbT\mj@XGJ$D-.DB%:g?KaQdMYjWMb)6J[0#WkHfkCP8#fhnT=?lk)\&][:bZ4\)ijG(\?%"2.]RSph.M13V:CqB\/4dlnDb_#5:AoHK#i>]B+trXgf%I%RV9oJ77JGT9E\N4VQBm^$bPV:%`Ou8M$2nAD?`\96Lu5;hrgt/H7a9T*F@srk(Ha/.,jCXZNH'p$oeTh!Q@QM1uP?&3+N%>Ca%kF%UOfMl*m^=a3,.A9Ma3i<`cdZi>G>i.c8jGnR%AX#He<'[N[l90A2_IsEs<=c@d[kSIe(3sp%t:hKr\<1.rgTQjWGWoia#"dbCJ8=%>T>tpLi8/&)UDHq/6X1@-qnK(("XcUoliil>-3DL#+KLjBXPeX&8[kdX%8FJ,nj<nJL`k&Y;',_><T-J$\5^"?XZu0pd6/,edD+@%5VH=j;3dHli.FXJnEhcYIT:Ok<J"m,PZa6I\I_lmp_Fh#H;ML/X6Ju%Q`"d<Zjp.:hR3+0<qN+^i4&6L<<39,TgLEPZW5!5_Iqa$%]AM7+.kC$m4<*+]W&Q]kqGtLu__rJ4!c)#:7`ihkS7/=V-(e#:<I<[*(Dj/Z0GKZ]CdAR905I4)&)N6c\FaO/7c_8jDn?\E":m71%<=AkoK:TM3d6N`s(i/0@CK7>E<E*SDC"KHE"Z8#Ol)P39!,[ql<epPK7a,9Yq4"N2K9P\KGMLQpaFH&3<th;!*5sl$?>3[i;eeb9%pq#h4>%h_NQ\?Rnd%7F\r!\LWGD1\Vqq):e?<u2nP?LS\gf')(=@M8/n3#Z(9j"5[Gp"1<j=nX]Y_d9!R?+fW$A<C5k+s`Ciqk'o%1),HhaLkHAj17i5!63h=j%[ZZStIN1C[Dpkng)Htahki-O$,Z16Cd$ek`9PG3D<[JM\=7Ji][hI?aia;#Vp?\?F^pBauklIM*qQ'%m<"Fk4l9G&%AK:2DnqK'q"4'Rr(=r#[iBY<&`<+&Ufd1O\7Z#P2lm%oZLqJB*%F5XbcQ?/:qLLE=F?3S_[N%ZDH1igh/>hZ3%jr.%frgqeJ@r)G?T,ZbMp<f7j1;=6?WbSDP\oWa]ojGV.\)3)9rVE(6(LTbBS&=>#CP"`aV9@4WhHAU]q("d+;_7\W)cCFc<NJ%Cfq2>%3ITL<Z9)"q\'jftjs?F)S0OMipmn=56g2(kl^E(WBkm3g\<;dT:=kFP.mnEm%5G3W8.DJ7j-DL8A0/B!nE@mBY[q!E8ASBgD3Q@>%i=JN9#SBY1c'iA08B5Y>Hr9lSY9Hg2@DuDI/U8@?4IPj26+FgY3b'*upG"!687_okHI>ZV6.'`JY8^mId6N`FC+#qM<@B8@COf&[%iD<MVau6Qai[qY1\to58o*K(6YUg/"X)][/>K_hQ2rd!F!L%2IFdd%l9PN]j&4&V*O`sqP2ptk]Q*L!fEXUi<\G;(l>.^<C9["*-%CT%80UPDZ[7HNO[D@E.I'd@,A&eKu*3LR-r#doa'fjYMaM9Y4CA@7b0a"I/&'>c%TTNms#%oYnC\Gff\<XjAG]&WW<iE&6s1##&j%#@f-]R2NbGHmC$`d"hCR.p(F9SWktDW.KJi/N'h/LtH63=GnMAj)qP[hQ6,3<FOe<J;i-<ZO3C*'U&HEo;(IghK"[(Ta)7V57BMF%Qb(&^Wpp:>DHD&lQu6ZUXVL<`j"PIO7`XSTCp!9"[`-?\:mYHlOijO*<_?'ZhY!CC)TGe\bNuN_8INk,iFH_i@Z,..;/LqR+4Aru%2=_8i:g*:To8He^Y%GneD.[+2RuIu^WK,*&ARElTR_]001ZI0thD%5>30;QA9O2*oT-\S22W/;EBY[r1cAm/cR^fJ111uggMM3Et%n)hu+>79=*C#O?D183TjPnH<ZbZa$@?/e0@Z7-U0<R\h7b91WMe"D_t#UT7u1RQ2B.Frl7>-)Z;WZ/!=I)_QHAA;-0hBQi))Z_%^%EcIC,&Q.Y..I3r^aisJam4g+:V)O+MkB`]n<8(/Ae.4I9%5BF)8",_Xg!ljYMltcu*ZAi..J2_DVA>YDSsVM)ILA#`0Y_1Zc'C[F%Up6@U_([$.F963.PX;pW&kJP,d:U2c7W(s.km5A_-)"<Sm<drO)kTf(L99lT@hab.>CQq/J@q0cPh#48o?#'%6%G>h!?/51@>L?N%T.j#sQ%Y[eIQ)9o"rL6W/"<*;OL)IEmWY+,a(rMB#WoWlcu)dXD>2M]S<9HgqeZl*>q<t7$tc^VRZJGL0q+oSAbTD0k.T!,'\U)F%*/WolSKX"WUN49d3jcq.\=8l'/AHgTQ3;<#GCD^(cq^39q=4f(HA^a=MMkFmKq:^X^CDB2I2IW3G%&l0cl$N]p@RFD$QZ<oQDgpU%Pa5AA_%9+GebOW628qr)OJ7Lc+a'h":W.n4h7IF[4KPkh2/l;a\1Vh^VAMm*"*t?65+s_U4&3C=7G?BJCgp\\?7>G_rM65US"K4)%#ksi_*d*b6gOg<sau%!dh"WAr`hR-TT'<EREX$K3alagQK&Gbq#M/[tJ8>J^cZ^u%<!a/!<KI5#<kf5*"2]D'CsmMr?U26`agoPU%*[=Xp"?&IM$PSk,1,akheFs$hBnR_HH"sII,!bM"7t&TV*X!cShXeI7AGjZWJH0hHbML^0b>>+F+b.,N0>r[FJ0!7[)M%Vm<M6$b%98e>f`Dl'M0f=dMLBa]/=STln#lg3)-N6qtC#1p.\VSa[b40:_^rr4/aIK!T`HWp_WZQS<"23aLV2ZbXg1u\2)??)9+-L"`1?uu_%dO!9R>f*HhZLmR"="&5Z*(ej?6DV>*Ht595>@^h_N-([8lbTW7L)pd3<\k!;!8I,g).'i)1\p6T424gRR8$H[bd1s'H="3cQ*\!0%Hmp`-C2MCI-F"8^32FgSY\tSg7mtpheC4j\M*o:'YKlr$m"Lt-VIq?E?nbU*Gkd/pJJ"7B/J;*?OZ%7KmdMsBYd.7XUfPUO[.V(^%q7-NY&^DRJDEK>k62]lE':%=o11/X)^5JdLPT=kns!#>e#6cc\J!oRJ#sT%c[YfD(:)XhTLD03H9r5(iW\<0aM?X:)K8V$50fC-u%H;3##"I=9WII37$iuU0tVQAjK)-_DQD[Y._(,(`);Nci0pV^S2c1rlO7dnr:Pd$Q8(%jL9rUpdIKu@o"84'bgQ`;,ip^!Rn,_AC\%_!#?0M"4E&(L^sa)R[snKTb*><&2q&MTFBj%L-<JX'"5KK]>jM3^I6D"cN=W1WP&N1@dDg1UO9m)%4U)colZO6X($g'LH+IrD202%93d_Wjqig@W1eTuVr"H#CI[khL'B*T>Qp`T;NSh@fo(fsiu_Z.SV>$CdMU\sr1/eP@[SK^D<7_OD.i&],7j[[@rDlg""G^mMbfPO%p8%$$1Vkq?Q`ts-:L4uK!N.4h71QBq?pAmu?!:#Rj=rB[1`_:G]&0*bRbmMfIR!SV4Hgp$]Q,),(EL+qaI/@r=GM1A.<eT6)AMR$%jmn<T"HZtoV2OcL#AToD=_ERD9tM[Ve3-+/>68,rV;jbXBOIcl8A8tOOkGXb*'d9fHZ39b)HPj;2=?ZZ,8=^cJfD@BeXupcMPRDH%ZED#Ej,m")f[%^L,Xm+:N8bVT()_@0/DcT0U19-:RZKTU7?W;bO0'am/^e]&027Wjo^^g%hCis>()?Hl$k([*<'`1X9gZ+@[/Ek`%4Rt>Lp\RET3.SSNn@"Ns^eS^C5Jh3;^;1d-nq*^$AWX<=+C0#.&qF)/HZTkY^t]BG)*`6u"AT^(=tZj`2!@_77\rMDQQ^>1N(eri%65dld*u$4E2'^kC=p+AuCXAL'WEoq-aSfSj9TcBq6OKO^E.\ss-&Hb`#b2H5=1.DZ@-lO/(MQG5Go6`TB*&%BTBGPbX>P,;Z'3)p%b<+_K?%&<Gj`SGoJAIW4KXYk;Rk%@Gdn_rT*%%3S<#!)-TRW@.VuO%l/jt_JWN>F;+e3&cXFMoo')\D)!V[4p*ds1F%SgN&r[T2Y%'nq)$>3FE1.=ha^mXAQ2S`C1[NK\fP$-Z,k_FH9-jqXNt23,gpVr$j^Fa5=8TdnrU:QYjpZ_#r_&Dg#^;8bMNIb"h$m-T"'NdXFk%AA4H(T=)9`\!qQ<EskMUY+q?_C@tcCW,t(YVcVCK%$iECi,i0+qlV*`KhHZ%\^6r%I:E@8G#?A072A=0EfDNSl/IE?Eo,Y1X'I-?%%]SB/_N])/OVJe;/UIBdH#=Dn7r]!XQ@!@J5M3e^Nq6Z0^*ZUOo_H^+lB-:Ucbt>TOf=<38%A^f-&!AdJcYlCXNI%,dY#_!h9KIf%"u/:iQ:JV4@I9UpAX;"6Bt7RiiCd_&KiMPLpXVoIQ)g:k.oKMk"KT11q>J$ilN'YWZGk]P.E+G=b"m`3T>IS"opFf!VG/J?I9)l+%QpGDt!KnkSGMK@l.9mKP#k&Z@XKM&U>e=WX?&cMNc[-e\Cd!48.8hF,peUdT'43Bnq_#0A`%%41TM338_'PQf??bKDPdGV3:0U+O%FsJKEaRD+Y(C"Yk2s\/dDn"RT:YgZm<'ulbkP6)Ig7\BKnR2bnZo8V'g+Ea'.Eh'h+2fWS9oV[:ZjI/57LIuiFfU)mb%6M9R!/G4%Mun[Dl[`pRW?D^Wf:Y*qb/_ZIFmH<#>,[SOq6/CPBk2lKjhP+Vo?N/sF>O[%>qqg\SQCU]J/Sn3CGitqMPPaQK2/-g,VNui=,PCr%Cj<.)E4LTR=./$RFP]<Lb=<T"?oWiHd7;^_Z49@`&_LV(,:Tm\MV?0C5=-+K6,*<OMi.tZLu2j%`1k\TM]R=6(J?4IUFO6"8@j;c%D^<7a;OgE`f%\YpeCLhhf?]GH6u3=0,kg.-R"mEH7:DSQ(X1X+Q+dt.e+:dBXd91W=d9H[5(RWGelHgF@]l<+I[3?dZN8&1c[7H_%Fm6rLXI)T2XsZ_.&$g5Xh5QDVF0n_Z?Y+185gi#%pE^,olH"=lgcNJI4Y.t0:C@iD!H7XSB!2]A(#T3(Nc"SOAG9.f*9"%Q+V&Ii%f1,Ok>'4@\'Q#Fqa.0Vf$^H+9J;ENE.S%`0'/plqC#@Qna"4bo#re"kH`NiNrO)q4[UIhrepGJu>qP>ag;PGMc:!4)mtip\CicNW%=qZjhl8:LphUoVC[MpYsN=7m\9glLph7DB"COtFLs3WS/dH;OHf1a0t:s3HL`/]/YDrdXV=Ma]3EjIiU"o!)8*")I[4VUT_!:cIW%aj'6(I_0Nb4(OQ0$hmdu1`NR>5AJbr9e37A00g4QI$:HtcIPLMm(.71XXd*$!D>rA&:g(@H4H,_6k8s@]s3-3<bW5>cli[Z4X`\S%O^>D74Mb)..&PT^!5f"=^^;dAd#hY!]'RtsC7nO;.0m(O`XRRL_NZJsYE+(n[SF1LcNh=@ak+MG%2:R_iL4^UNcHR]%hMnF>Z2H?%Mu[NB:V-NWPGi,t'+^E[emm1srp/r,l4@l=BKYj\`.@-r%;MT7RIHAEM&;n<2Q2kD2^R!*F/02ClOlM9EFM"t$daZR]fhqd[UX&r%7_tE8>/id(e1jrqXW="ENXPtHTYkP,*UXUH8]n%kXXQ_?<0qT6'\Ttm`,:CfT(&)!3V,<93,/t)7#7V<4.h=&-^9-o(:(,@'^iN3%C7rp`3fjY"TFGH5g-a3RPTn5W'4C^8;j2<Ea.oq;OG7mKd=>WP#jE(^_t)!*O=,`ZZ`gIV]@Dm6g?tmZGJ178l->EDZpi]#?!LT7%RB!*-NeFEic%gQpJM'CKhE/\V\W;[JU'hN2"-iLr^Fj9:b&PEO8EFiQcFSiN#pW44Wq'nY6k>uUN!B%$)r$W&S)=G<&m)d(2'J>s%D"LH%Vgrl[_L@3AVA+u#Bk]=1'NVHpDP9;:/bD*0b?A$c/5*Zq;ClNH/^S6tTK,pnQo8'E'XFIE#,RK@<Ku;`V9PcK6B$er\X+A-%BUPk0^%r_NU3Xo<FXJPj7CZJ#f7s^R;RUTHTs-:b^6KF$OV$e`X_0]9MCSCY>TbmH%qUaFA[TiWYeMXgZ(Dq<,^95X%p5u3aS5>R%"2YZKA-b*K^^`H,\lBhVc4]$$8X(mBa$Wo\%u6i67-8Zuk<NDaSZiG)-kYqBN@;0C_`kV#0c]7@OTC_%Rt=6DKH.t;-4J,+&TLMY%O)UujLl<]fS5(hs:r.kjJhL=h!CW1P8:WQ'<F&mL`$ii%D"hC,24tX?6\=TS5a"TY.f_t$l+q9./IB?!'-kOZP?8lZ@\Z=%B%rbY%Q-W]I_$Z6f.J^Of=(U!@UGLppmOuAP2l#4mT3-g]YsT<3.aD0=QnJBEF]L;%ltd'O8AID<.^EB-T`$mUU!U)R`aK*(_S]sU_[q_o%cI>8jf*L0l1c\0\ihNLr.o6o_P*.$c,A^%hU'BskkF/KN7*3OBGZ+]i5L)"h5sJfc2K0VPN(hhiBT*V[Pqbt?.igL<+=T+2_*jHU%]D;:u%<;AB;+rVUdL)V6Mugk,Q)1$C4anLr]L6d9Lnb:M;WdYk$MP-(WYK4UcbKJqL9VtRSFFHPN"P"@b`s)NgWb0mSj\Op`.eMF%-:5E'\,6^?2qa9+)6MBrq`,sCl&Eb#?"\KM5X(89?h(q7(`/IIG!9tM(8%hT?@H._h28e=#Oq>+B+DF".83V^4^mp9q?`sPS-gJl%!RJ_`e`Nlj-GT32`$/:"lGP:i(:c]WB#IbER!QJo$fN[>a,E.3$%7cLW::;3J/M.Po8/]Fi2L5TJR3^YXK5Sukf#-r5NRa%$iUh>%[^"2X>+T@@Bj)R/$>OIn4`N=7m<..c!@r)m1-p-N1A@nEKs%Tp8.Sas;WM(^6;$&MInlV&>c^#=4tRnJXFU@8\l?U1p#(2@g5;VO%8'k8fjA^#:DgQVk<)kSXphA>PPljkQ*35),UTpc1lD4_XT.1YTX@Ib(.$eeWTdBq0`@)XZs(D9'KR?UDcAUuKL%(='$3Nh.L=t-M%'H21+]MTMR>Y13;0>6HU>8cF$f/snJJ=T&4;iKn;eL4:5O_iK]'XK`sB5_UZ7pVXT.Fr7]jQMJMmD3"Kc+u+oCJ>+ML-3(^l6qe'%2%YqR/')LAQX[:M<h:?sPGJ<gleR#kW#(IknO_=T^-EtWB\.!kU.Q)p6$G[m&1<6NDIrc<Jc$Jm@?UN0Kds'o;&&<4Ul-SlGcR:,%O-j%QW``3hdL:O$ShJ/Q%[hXt1%i$\aHT^(=%2I+O@$G\)4J&0O+9IfcM3_mD*.=j9cVM"*j0n*s1.mf7udoiJ%4!hV]$U6UPcDm%=G#*l("YeUiEck6hX5kgrFhN&b6S#4YlL[K*"pCNd#Bp/'G;&dM'et>0C<KTXL*GrPGOIX_5A`8p<fbS4X7g>o.b^ee;/i8,6g/)%1`(uW>=_.gV5t)e',P0PI`@bH)NjR?,(mX;<Tc0"e3Kf1iTY?Ib@.h0P"l[Pc"n1i#'&)8G.FIa(O5>`>:?7l#4b8_k2e?NfPm:J%O,)BT!>9j/O:\Q!r;5'j%d;E?G2GJpSGEK\9_El`cP3n)^q*Mnp]-j\YUo=98c8Q12BSEpjLmc7nqm.iaBu6*%qJU6'K/$D&1;;l%%r];,*3/cXPLGj;e(?:0KTYu3'RJ&eo@K:eibNS'2/lJh&unsa29p#$4lm.1OZn0qp]c4ST_Q#6+_qX^J\eOo%L>DYM]fs@lhl/d%pm"EkbEJ(U0M'u_Eh00b62.=m:>diYj*0G&^<0-sk2.,W<9)lJMZ6tPCr>KaNN[]KDfP]OTmZBMTR<-aIX.=2@\Kj(DfZ",3q;F<%;I7"X$Jum@Y]Okp43q3'C:-%][L#AZchm^$)oFIq^t%jEa51Q<HU6kOQgDNkA[c0#T0mR6Eu+pt`kS(\JEI[nKHaTtnGD7sZq2aJ%Z*u#>(MbH&&jCsVk_c8L6SR:\-\4+_^5i/,/<r(edcGHU-?MspbH$'0T=\GC;D8GbK[+BM6Lr"uHP3,sP!cF)^:cRsUW='$6IGoR%Z/t=U!Cm2:?_c)%Rue2rAE-tnqZWF3B1X^5rr0E[8T8J3PPhlM6D4S*9\,<!Je+2s^>[TG/S0D1CG0aK<l7V@(6EZ>!:d[G,c<-q%LM,YV+pK#`.3L`Za*_T$%BLcQEfWjWIbX(<IV?-@kZnX^$#7=(C/8J(A@F%ZNJI"6(hVV6)DH+++CQYA0Dno`VE.6[^3'B&#SZMJ%ZX`^?C=5fl*^\%(Ch-rWntc`-TEC.T$n=PJ1;=!H]ZDr*Ur'0"k35['[B]PnL2`U8(?&^,Z/YnZVfs4Jo7t]V$PKEZh1PDjAkmRF%4ET,hn2h+V!h:H`as/EcWcHW*I/*EFN[fO;I*gGp#6A(380bYiQ.L@Z^dkJLdAi[K/p)^Y4n'-rEc@<bF&:(=pF?d@45Rc?IL;#(%<;`Y;#A'cTE1S'MQ#H1ra[%8tIFp=M'`L$-p9FCh_crgcn[kk].taD$\usrdBdPj=Ttu=Ag"rWHc<pYdn+H.oZ'G'A:_U(+!bqe^%DdADlX(2[R]VJ<%i!6u`);f]K?Y48@O2Emr\NEUM#]Te)d?[#d#lqBu_$"UlF]t3MDnUtIKr?`9r_u&RIi#T&-jF)$6`W3aAoiR[%kebn'Rt+F9%Db$Ua#U)Ye$U5U6++k9XG\3PhSC-r$B6,qa1cZ?B;D?8bWWqJ,:T`)=+&0?a::pFCp]*'e4XoR2[Ysu$3$Fom9fh>%J,QE4q+ooJl9G71^\i<Uol#<Xmgmg\0\,?jip+;Voj@[^?iAUVoU#U:f73>2J,Dgo^]3uI^\Q3*p$_7rJ,/D[GC90M*</[>01#!;%k][JMk>M0sba4RLCJpd`#MR,?R(7"nr@>Je%CL#up)[<K05qTpG/g:['Ds>@h^/=B5j/Ahk?e,d$g<Q8!l_<ZNrcE[V3duoY]lP_%;TA[FX&Uua*"4Vflt^BeDpGmp$`KcaAI*4h5eQTPS_MS=lZh)84IY!=hTislDm1Zcorr%mFam4=9(dcArVOdi%O:Zsp-uc0;a@2O%,`8K0SslO!0Z![9qYKR:CEm3=6%`tkrN[_kX?:mh@Wqh<r%&C/f7`_np\RFo["J:u_LUZ^#9@RE[=e:PheM4FQe4).c::Du/:31c%q#0=?7V%=e7_Z$X(TV'k@])TQRPujZKW*@`q!?pS,JV@F3IoW;^Z#8]gmf.+K>i(AHrc4i.jl/_>Ya=->_2]BV(f/Qm'sR54[o00%'8:tnE+(Y$.4?Z%Og3am_C`pq@`/bh[pEQm<GE#ga-]M6h7HT"%@lEND`dNiXua\L*;gR2B-DWNj%Ps;S7sVIo@Mch[uGdgY-g.]%6F_(X[1s[Wls/K3DimZ\_Sse<*(K'O&:sE=150<D5&QE!^5E^;Q?NeNs74qJoi(<\MqnY5p1@]>[(b0S*X"]SnKDmDq_FC[MVFZN%W<'DZ@II3f#%C^$l$Cq;IX)VlI!bkF<VY4O0-'TkO4_?F=nLl_:[Ic'WWbC9P)DQMs.7N>Kqt^2DuI._47Hg61IJt,V;0)]*/T_H%$fqq\4Cq=5![H%>6d#E$q9)2X'!tk5]83)58BA=,_:O[L(kCJs(L'n#]0(bE$%$[1d;euTH,rGNp<nHq@R"JPPXfr_9+SaUm1sXD%c6)tWfHZ6Nq#*Wdaq![h`k@U2I,U*\m92Q4'"-b1<;3=MIk]HuD3.8D4epsM5<%OY7^kVVV9^.sMe\(drZb,*qOhrJ2]TOQP<#oV%]N(kK$oeYsJFgCh%%k(8BTPqL^r"c:k4YgG/hCuE\N&b!IjmLGAspftAVmj]g#k'rcNS?5T/'2IlmKWg!;/SZ#2!uX=7KkBN\QTn%SKkTLCB4g@pAd=`#^.b#?,L/fZBX[o[u0'=+Ho0"dJlP-hlFB[&gT4[D-NIE%%rQ;a4:uL$QiVZOD\2RGZHC,YRYik)Rikh$BDMS%r!jgC\^cl?g2'bESQZnR-!J(j-`/?N>jHt=$C<a\o\KNB/R090,9l?dS4\7@lE+*%bAhZ,KEIj88*3t:*Ik\<of#_&X6%&p:#suM%94WQ&?u^9n!p>n_N5?`ggV02r2mp6mW>DR!IgR*YS"K^4<9=G;E4f2rD6$=*bIN#sHS9/X\n_b9TUlYReR$hY/<X&Z!T!_RDfAQ;%:@C3a$4>FllgM;)J"?Gn#3rM>8:]UM/bH6Z^bfFc]+Xu%E]msYdZ>?(=U``I['[!*bqUVO3:RDZ=NOtd?0Dhqk:MVs'%eE?bXpK;%hb)D#/)I;^k7<"#Fo/'(kJ_+6kCqO/!HF*%'LNO'0N6:/)IW-V))j:DjZX([*>oDT#NE\9/G)V?"9*\T1RMis/W94J#@A;*$PanA%:`,P5BpUhYom,EOn%\igALDrt]$3or9I"oD!M?9]fIJeEmOj!#*oa6(m=+<djg*BZPt)85(@4OUqg?'GHT[)5/8AH-ITq4mkk%(%%khbrQ9=lFCB,.E;c\$]3f[h!ddn6Sd,JFog2M]f/RM0fQ`ZshKl[]A#+rA4,.A:HXIFFuL5I4TS(6EVX^I+CL5.7+]_'Llqd//m]%ZZ694%%,]=K`,,Y8iEAOVJ^0,&];YBSsPGOGB>)-]`hKWJf#&ULX6[G]X);sVubjc5n>g;`J&'B;86Dli-b:+BNNBiTX0qk+*oE1%#2g/=L^1atI/nW)%V.TPUJp;h;(cW^JZZ<#^D";X[n)"[F*SQ"\e?O(0HtAc:,O:O^/I.V1ZA*M^`[]<>J<J<7'<PnSnmXYVeF,;%%^+_V=/Y*AL-MAl&MpuOa%%"&,_<N\_$fP)33C3XCD6ro2ifb.fLQ^J1K]7/ojMKprJ!Z"kr=:(rk*IYa=7`l%#*BkNT,o[bM[S7%]mfg^fb2`[[9%bA\*W%`(r%jV>$TO05Wm)qX>Zq,S52#8DiOF$Bt$-<ZjW4sj'9'4pA0QDnS8eNF6#=ur#rG):ih)t0[304!_=Y[%H8dZGE`O">V,&*d_IZEg0qgt`GR'C//%W]-G]f=Gmpb3R]?mg%&)kkM=1\;N-M0&oF<CUlephL\>dYDVQ"t0d.&q1`miD8TkLF>n%Tg:54EXllF"7$8W&*jBBD4ZMOm$@@A#0,b/"T=mZ!ESCFb7&tI1b`H^=n**uTTOJq_OXDf9Bf0JS<0o'5TfU/\+*sl4_Q+-n2],T%mWB7X%Ppckb;J5NOo_/0/'"k^nY(^prQau\ichL*6LgpODd:XIhqL#Xo--""2Y^6&JKjcS6-]*-GU,M-fmUDPH`69HVf.NR?bX3Y%qOP#UhEZf+qU3b3`2"5Nd\lA\nJrf>_3FuDX!,ZU?m^Sib@h\Jqo9=U-LY4bB(os?#AZ)u6[t[-j*$u_h4fU?Vmt[)Zg-fJGR`:j%<JtpHT.F9hlO:I(+5u7T`VN\!V05M)s3Xh^2s&9_:F8:dHC5]@>$Vq*?3M6\GZS/Zne^b\6h1#jn*juAb98tqh`1iMK^7WS9Ila;%H;u`q@4Fn,8pS-E_<JQ$as1JOA_ofEPj(R8rJQ]`Tp\.b.:)A+4XGGSI(i@R;Js1oJP(.sZ0?hRBeN5XDB)Je]Efmmge/9KM.u\<%[i7&fm^3W'nmf-lpd0s[C)D,c-=)':WKfp3RdhRp>S@bVgCUrkaG%ZSU]i`[,d`k-I;'19KgI_MN#&@u2)jB?#1pON1W?BC>1U1.%?KJqu]F)R<:8qQ;\aO@-:T.?QAJ-WfJdN;T#o1%?%[E$/Ij@)"%#9&6or+G,.5Tqq4C2Xh2t3j"O(>7?LIs;lLio_'\%-BDlZq4G%n_U_Yfota/Q;k6sYqP`2`==S[Y?BiRcn]s!8YopIj6&g3WS@EG<n2Hr*uF&:/PFNKmQQX)2f[l2s'6QN1&jdro?)h3%t*2Ui8sB%%G]h8S".W`Zp<g'4ksI#=OY;WU,J?M-<)Sra32t>:6Ku#_b^g=1=O4@_;k\2"=jAeSYjj;Rb$83IU1\&PVc+bLb!t5ee^K>%57<gc%X'2]-eNu8P.DlPV4E3/4+lU<@,LanRAUV,iVuJ0(ACRZjikECfqh&U(EUu4]g=.<#5?*>MC4HVRNYI)(p5@9*gjX\,0Dp0.;DOu6%S;?I^LO`+afA&h)J@F8(mgkY*4T<oC'.uZr6R@-&#Bjiqm0kSt5f2RA!_e+X5:,?]QgLOZ`pG(ifBI_TjmT_^3pO!l\&BIYkeek5%!:G)Yg6eFY-WcY>K+B99Wh%t-$PIe7g@^,ra!p5ndU9PGqY]+NL.DG+O5Y!;s*L.GO5,"?4*&&AkJ/\DG9,dK../"lH0eaGhV.Q[%>Y>W_NU?j[E,0Blh1FRKUD\7Jp\Zr6ME6Gk3<a4!H.c9VJL*Ao1g?#QVcmcIkKCEVLWqupG+GbWdL$ScT!f@4hCl-WZ2FQUC?M_(%c`HD19MYnH4\M2^*<?g+Z]00Q>Z/5Hieau.i?bL*`SotMs,A(;BbqF#`-Srd^/=h-,-E1PHYVUT0cTr*W'',,nq/BO_ha6#]pEMG%eu*fs09Y*8:?kci^Ib*c>]=#@lFlWcbGBSM+!VED0B;-@J#[j?]Ti)>h;361e789DQ%s9\$P8'lbm;&12'2JfoB_uQ:<65ErVB/g%9OYj1qW!Wd4Pb&_4?/q_VLI)5=N(K7ILd7lH2Tn]iVN8<n<XX_-5u'Hf<@=Y04Fob4UL;^fsECb^*4@@o_pTlkAG_#mS?"@dPNL\%WI4(i\j`5i^Xe'/C$EPWIep@3JF5]h\gSEI_]6O/X-[*'3AoDo5h[sb[eFFBX,D,m$d[XmP4A(<Xe/QO:TBFVd(V_%nqf=Eq+XWK%Qt)\Um`3f0AXB"]V"C\_FRWm,)a"Yg3m^g;\4U*in:doa<N3-26Uo:"*uT#S5PIi<No=!a\pURUk@)4KJ,_I=IrrIc*bEZfa2U4@%PdYap45DaaKk^<Od3/b*S(Skt(P^Ho3U`1j`d]&+:JH51>%C3ig(1?tlNkZnD^Yj`YTthLn-gAf<mI8cf(7Xp]/skeMk0@cK<K>#%Y/nblaJ%_jISfC?p/QYs#4Pk9SJ:#V3.t"/<9C_.SY#aZj8M7&H)mr?O59lX'T&c$2S+=IlD%Wp5BZM:@!58SlIZW2K>.2s>URrh%`Hkfo$(-K,1[mg^Cpn@bW&j-C+oOjA,\<Nd-;R-FT%t2^^P=MlH^:5;1N_&=:M1/09c"Rhb%7L9SCfk/[)<5dOou<TN/Q7(-YP8<%D@+Pen5icG7idH3,*gS_MErlL_jOugI'=m0^n`WpbD+//WY<]8?0]!21P!=?>JW'SZskU?7WKb]>YeNlPd<MtJ=bBN$^^TMR+T"m%:[`<mq98a'a'WSl8OKSoX8CD_FG;9npYTmRr_9bS*,]usm62qAo%S=Z.57H)";f*c2S,l1fhC,q&mlUdOcjlN:M6^B7KXeT-&kG"%EjDe?i+bE9AAjK])+)sPcF579l4g:)-bjNW1m-ENA$.b)FV_;\IPQk?f-Q3]?'n7qK1PF1Gs#"NFjo67*O0Wj!#\pMO,[=T@*:4`%4m+quFn^V0\p:Ct#.CZL-^?YqID1:S-L=%"CJ_Lm-URg"3`[,;\BNs?!Iu^b$o`gn=:M&;Y<AL)Tq(ctk7g&RVK9\\$Ak,leuK(o%k&M;`:V?Ys,1\'+5u<%0f'OXX6Ij^J'm3F#o4s^Cf]<nk^Z@qFH%"4;k+%euVonS;2lOS)IJEES?i%+d64*)<%ltLQHjs)t8FC)V%X#2EJah.@tho;#J^f#@OPG&(/UiLYIiT")/V!Rc@m=sr??##DS>l,&[a$XtU%@q.;W0ZZ;DPHq)QfkP4cd0@LH`dF!j12Y68^b3s%G0e>Af)a8fo+3U&rqHkfk'Te(9639#"UHH9WmnRckIX_H:aOGIIU2sLng]mtf\``EYHC%21)AZ!<W,)P%j/_qoD[AFdi';hTHpY+%?@Cd,=tCW\C.`2oU`!j'Da46<SRP1M[6<uCl]nVIEKt)U[Hfu(#n^C%^TO+eJOU-Be5;JV5."JqQ05\Z?^em(@Ytg2:YR0;r:/LO%If5,U)u34nqi-e_cca"Q;VgBRgZ'&(R=$#[SG2mrIM9E/+QN(CR6I4\0hIG;nrrjJOl'\ACSV)3e(9fs@.&>.5CW!.bZ?ODKeN'^%b(n-3%/2![MFKgpC?Qr6's]3J_TUnbC%ppG1Fk)H8q.n_SA%$X;e/<i-,Ei5Xtqd:%K=R-gS9V[G/#`#:MC,))C)6hcW,+@g1I]H%ZNGHh^0U603:<o3?/7tkTl[@egDA^]n1GkEXrG!7J%O:"%bLcYG[c#G^=aZ)?9I@\9SJnN7d%60S:*um3,%MAjB>`Q?s3B+[hX:U%%4jSH$&Q_cZoN*(3;('17r=_3e?a>AJAC^m:J+Y'p!XV(R1mR;DgSOs<jMj]?kTZh)8?qbE?,p?@(:&G<%[7]^`0]!qr])Jf9J(>%4&=WURG<EQ&Kf0m\3)q`R]Z/E][ST#er9m`HfV,WqKkWh^c&VBr1)&g`+$AjR2iPC?>Gui]$IP5A\ZuG*.0%Bq9@]CdB_QflMc>?%]DE\-Ye,952UE!R]UG4F;[nmYMVfMoaacM)-HSY4nqm.iaBu[@l`Qb["spcNP0!#R-bGMZ`Tn6^XCSh!T*Y57Z>n)AIEBE/(H],S%g3$a2)\B'.V[>]Qji\%Ul*Ek^Sh'8=!-3=&S_XbbCbPt(%cR"p2As?d*96L2NfUVAOO*"r&YY%QfTuZ(3Z"Gf:^BrQ'68Cse8`%O%9/k79iKr^]4S^'cnHNXUWl1Nn*qeLH;+4EJ87(sMJ1mF_#!`9l7M?/rAVWdJ`SG:>iC!5l@Zg@(rPVhe8X'D"3G4u'iG>Wn<[7fN%^hXIpFQqW'mqk,fZ'Ki_m9q[D60D.gg4F*U5:djd4$uQ[k)tUAh8Qkhr,;7<4&;EAW`dM^lY+PMIm0-X50[dHl&N6A30fMBEBDtU%2l:U*Sc"Uo*13g5lnJ7j`MD_>aQ(iNNgPZkP"%C"Lq*L.q\tU!6@T'-a/hFaJX_R.mJuR1(TmtqG0*q762nKN@]_R10+5"G(d^/h%#=g^VX^H7qrBf\[CFoHE^7>>D-bkD$U2qg=H*\#XhQGf06N]-qU'6C[eJkDXNYoG)L[aA]m<25P(Wc/torT(2EY!ncNqa\lEbXTj%-tSnbh+hF'p.@A.%@V1<%`B<*XJuPjCCD<dPS]Q+?Fk:Wj,TV)+la"uLMqI4nZ_<7$T[k1K2Yu%3=(L/>e$f4d8)[qUT\FA!kT/A%.^<;dBQ^qH^2Al*QuieY_SLDbMjNu[Xdg'p<&2-I;2>n5GXh)IX\R^uk:I]MB?d_iK'@,pnKoFX=r_r.FK(i;]>tZlVi2!f)rsUR%.D>,h8hanAaMBl3>?7dr%=$tu`jJ6!R2iG9KR'Ut%eie>.;Y4(W^2nQ^b>4I*GeRR1<YoqX]K[2:!Ce6J)Oj;n@E$LX<L;`UM,ud%&?>M3'JZ=DTRT/:<]TPR*_IRtVIJ.SOg%LlcT/\!)Anc4$ZV2FH\u_2]"$t6jh_MmifhbDX1.N*KeV'Qlg5[>iI*mufOC+um`=fZ%dV9]E/?#0Li4Fk=dM%4,=G)@8+CaE,.h4PBrL:V2@QXh)BRVN>#XXT5EZTrRBQ<bce&"QV%;k(E>*H1N7b'k^r@XCjRTU-f675Z]%OPJ7&8=UXnYG5-m!Fsd-9AfHcDd1@g56bF?K+1J=f7iC(We$bKSWG!biER"9@SF;l)A8B>Z$/ST)MjCbQGTIIA95![9'k>4c65.l%Sr:;GM;ubTG#6Mj3T0?fau)U\KVF!g7#PVTfN[c.s)l_"QQT]oI'hhjb_nQ`K=(ct.Q66p_*'XuQDQDiB?[p1+e22</.X05`F'gr%[m^75X`Cs*_G>Jc#Wo;E,S]iimJ4*s5MZDn1h\Viq6JNJZ3r>?3/^<#k\]=.amcN#Gjas!)MVY=5I)Qsll(Hj3k+GP!22Jnf`7@N%i[mCP1@,+?k+Q:C]sWg[2RPEQ3K,%]LVk"md"?1Cs*>b:.'X1iZq-`&S[Unh[[s<@pDFEraY!g^SI(JoHfTsU<K[bf8WF!7Zbpf.%.@RPO"t@CuK/`%?;k9#.B?Vpj=,tOk!%na)3C42S]Z]k]CU*tnR#C30?gH7[i8,ph`Cjk1V]mrVd-RVe!1(bN[,%W%F!,M4UC;?n%AJl5P>^lDAl&?H#S0=FBQ,iKWR3EjC@r^niO2\S\G,g+:#M8Fd&SAQ:/Q"ZQ<-egGlO;^$S1cVl\g$hGQVYBpUt+3@h"LH*ES\o+%NO^V@;1W\neh>pLn>cEm8]&5b/gV=sNlTRO/`GmW:uHf.$?n"D]=(N4i$Wm6AUj[300e-J2nSe4*U_-N&>uD9*Fha%jt5VW3.nb$%d<_gYnlWsg%"]YO07g+^_HB/Dh$M?m_W+!Aco]DF?0kXi$+Jm:2t5.NNGk$hM6>m9H38npj+^/]X;2Gj:'5GQ"lGW170;r'5PINk%(90<$M6sZOX)05)_d["]iEI!FP30LQM^-[uEVJ@I='('3map%kd6?>CSr*T\<;_$]YukC9_[KWU,)^AgDc5@/A9T86>7)RqAa\#9%_bq39jpL;K;1lK+V-rs85\Ta,YZgPtQ"e9K26C)HCiE-QCQgnJJY0a1_&CsJUOa-ucY0SuB8gVjG_"B66u(P[PS'D+cp,=WgK#/?%7_jb\fdmmk^0>er@N2Lig<Qprl\NT%&q%TX]hIAE0dbEhNr;MC.&PF+Vfkk`p>ut]+Us6Yh=-tR9rF7:L_tdm\5q#cp>_f;kLniD%G"02)51bLk<<E\EH>P2"[\JCRidB2r*D!X;Y4lF,p/W0^p=bW5dgXF&kH^TRZf&l;j76H5!`N^2_5,XU.R_$P+Db2.Xc),DY)(;8%@$0$PE:2*UP!9oI%p`K'ob!as.8B/2_^.k4b%/k@`^B$>V:''6pVm!]d4mmn\hLT;!at2MKDi-cg`&^E-2T&eUMkD:9N].bgq\=J%U#*@j[bB4NS.Ag7%XPIsp(B<_'Ht%9puOISaRkR<(hP*gEQbf>VFbdN2K1OH!DDLt'MIb3A5^ZgfQB1g4Q^R_J`B2^K>$OH12,/[%+O6c42K6Y]&nG)$^]3kgDf8hXZj/P'rFB/WF'qh/N5;mM]l25Lgg#jPqTZ^'D+dutmXomj.i#91&l(LAF@8h?6RY#9UL^^M[j4T=%C7-\_lLIqi%P4SU2"29tkH6DWoc"?2eZU*`70<lN<7%pa%]"O)\Gid"JB:Y#Y$%6r*892Ld=[itKnXHs6.4g:W1699rlb5fl.S"O%]BR"u3GZLpP)EeF@qPbC-G3!fOihY5"'6^_cTdoge"9[Yo9K]"_l9>#*kE9"%/=nDD<@=CH2d)?q)h+>n*@fp)f/;q'dKYkQKu]a%1X*(.-c:uk6>:&BmOmJ__&;e*>g,A^jU59h([FI#k#<DPJ:&s2%&8eBO9`U5cSBp@L@BI&r9lL+?PrZ`l)tdc`52I;;/dq.TcJPX%mqd8S`U=>sFQf!=m,"p,igoSe^kH4j\3JW`^UX<SO8C7fqlrpXFuP@Es!@^A+.iIA"*_lIO&Ga4(t5NhI;/WnEA[4K:S$;)jN#/g%p>(rOY#=X?U\mM":&OgNmd>r@IZ=PQ0NA`:W,5,=nn+OMDHWFM)'eljN:59;a3`B$mY5XTYH1#+PXn/9?Ye"jo9]_]qA8Z``HajZ%fCBKe\QRr`p+X<DcK=-ZmKSal2;cpaD4M[lZQF8c_.E^:(2aj-o._B[W7'ER[pjGq+NXfl>D8qiP\kS.;b.kIG$/Iu4<XTn7M+?1%a]VAH/F5]mdnDh,?[%,sl:.-C1nk$B)j^RUc:qRMQ$HiO!?DV_alu%hrlb?*7Sr6ZiZhZ8W]A!4Ge>"!qCq;42[A:eh;@"FEfpKa%%*46[GQDF[,HH(]V_d?BNf7k_Q,-aVOUX>AQ9B<4f;uer^cFGaj<6YC9<5!J?rIlQ#-ZkHN:4dc"Zf'<>ZYKBk_;)VIU*Tr3$OIH%f)N_.rap5g2cd!]-j;rUK<;=kBaE;[0d)`qidW8\)^+0Cn^[E2mh:\R)/,iG<nUF7a_;@bgX`:rE`un22_Dm$[Ec5=CU4f97`Q^_%(%);3)0^jT!eq:7Dp$6W47MCaeL<]J`A7[jgI%@dY4Vu'?:BZ]`giWdYlU-6UC2Kf=QO-93kEb>XT;3UntV\r&YIuV_U2?o??Yo6%kM(,@cT&,?C%kb6QsE[0*^XpFFDe>!jJZ2^hMD]-jpM->.j3VTYVL(QG>*9OMVU485WFEK2qVlM4NLO>#"&fJ0mpkJ#/bA)W,cR(%eK,0EFsM8KY:r<'F,*J\4C*mS@;C:2O^j/4YFW_Bh)LM)_`0:>Z>t`bb.$I]M..PE-JUa#/p,/+j!lV4/9V-o<]\R1q%)&&9M]P^%0\ZAf//-%BmgnDg1smk`4KmI#iMD+?UrK`i7JHf@q"K:0Mri@R?]ECnfE@!)G?2oeYCA9qa29,!^TApqGZ]bZ("QliP7odl`iqs.%"rA?S[[eMhE,bmV*&Kl0Y"gcni3,SkhJPg6$&$CA83(!$)n;ro5"8Tl&1)3Zqt=qao;=("4T2bE(B3G30`3HC#^,i%]`>:c%]]iq%CbWro'l@PkLJd=Nj+jktjd#KDj"7Zb3^([jlb0==$T4tI+`KQ?C4L8=L+B)H?W$Ei;;JKK15Q[SbF@%[5EF?f46_X.4;<8Kg;"YG%66[t^A8'4*`gh/]ce,JZb;<[E.*3PN"0c>X`pkW"R$fe\meLoUj:KmmFZdAiN;'40*`E,:ZRE-4UM5lIjI?%H(QS*Sn._Vuj+slQ%2^=34ck1n93#f$-6\ksLIEh=u2uLVa@go^'rbQrO,mGFZnRVo<'s=pW3Jln`9[[4rJ<>Le$-f0a(;O>UNVm,5DoHEEm5`%0%J)H^%bMCT12SiRGXWCQ;B.\M+<GkqKam[9k+nC3cDnlIAauAl-oFMP-[CX_+s*V>?R0N^\nlD6raSWK1Z_)?@JmM^fRkUIH)Q0=ljXRuM%8%SKZbRnRa98D/3Xt)Gg\$CG*]E?KY)ntE9#,)(5FdEN1><+U4;%rhM'kjiFJpYQu)4Yts8mO7BVle8F+N2/]YeRZ%?q'I@68)Mm%YWto=i:CG-I:DPpRb?<9-rJ>CJ'N:"2dpfV6T@'oEKdIs*gaoI>QM7/VlS@C.\5J"&`\2K2o#C`^Rl>3TjSsdE980V?<qVsqlS=D%+cDTKi=BPhToqFpZVR:r7iTs4D.H9mRi-RrM`brDbW"SLDSE'r^5rb98rfOOl[t<QGrT-$YhEU2U2=KkUp\)*B#HR:,1[%bBo`D(%ZFK!4,<V)e@[khjj>XT"&.9CWL*EbPZ07LWf/g7D3Z,a3g,qj5\-@s$E_JEu'^WfJ[Yhi>k+^'ToUA;0EB]:82Gd!2Kq;%$F`:o7%,G.7$^%B93FtXTF+$0=TQtmm'@L<;P.X_=E:$"hTUC7%A0&dmeYnE)VZK)MqZ3-c<J#^eQ]8V,+mUU:1/jlG!-8Rod9Ni$fc,CjM%E&h?o]D0?^YprD15m);;0I[e(.U$]MXkTE,fts+?G])n7BOfBhYU)VSB8qkok!jj\<7@uK3re++QfSI:C.g)1`OCD0.]YtS1ljNm%%4o:@`VFK1U*&oQ7cWh(:"t]aDp+qHPi)0KBt2[ul5*>%r'+N=6[.W<;b't&Re75a?ZVWZ:J3_W_pWLcNnb6I0Q?oXDdEm_2]0ls%KMH=lKmiRhp(/O]jXd0UmM-)6^3VKQL!9=kL.\mr^q@>$gH5lI':Qd3TKW>+PO\S*`hY12aQp"KbnR_?`fO9A63HO5M]>"GJ]<MO%Z0bf[f9&q!e?a_nkME.5VORu?Xq4B6$kUjg0Lh-*_mOg;Y!A*e7T]JXF+CKf]iBJIMlKg*j>W\o93.>ONL:1RJ9F;,g:F,d/t$Up%AH:$VaIumb6f49hk-nK'\\=6CGjsE5LSs0d`/ZDqZD/JMnb;q:c#%CW>Fm!L.WVS1SJh,qnb^3KCf?ekBU,%Tie)$o!RIXK2olXY%'g2%Gh%ep99?tBiaaHA'_Tjj<9P6r"oX&X9]KBlc(I0Ll6\F76(k8UUjF:Z33lY4=Tnr$klNdC1*KAb8(?@96`L_sMTas6A4-d(0%ht\rI#MJ!8.pmt9*`/rHB2#K]\.'De=B<G0O'ptu3O=p;JelCYiG?uF][`?+pjTt7[UrlV9W"^kZMa#1rKg<=8di*K^O9`u)BI<K%6]\_EbRg7e.otklU\@4p%D:T-$ff\4BGP28*RuVDgOr.4ad&Rb(f/X\`gK??i?'cf@ac@aFN"/gVUM\A?,`)sGBsla'^GOqA,#6R%@okA"jE2LVQ`eh?a&%5_f22io"j-T/pDl(Lp0X:=d;1Z%@0f;2AXt+<H.tg\d2_Uia$k(5?!cRd_gcZ!Vq`/ohETYK`"W-W+*%H>%^La,b!+JU^5U%?6s$o$kpNdD^>3'"6@*akep'Oc4`0LJqj*iu#M3^04'!lTuI,fj]2]/6#5?SHE%sh/uG`(;9O.ME//>BI(PKW"3%gC_>Qq+:9kDVQj`,FMb:F09*l6iOp(6C3?e;]Ar5XFg%54HBC#nT:.^bdPZXf]L.n*e&(Was33Kj7VHHK=Dl]E\bqNBh+ul[4]k)%o1,lm..b5Liqg4<M/'E%h@UQNL@c"&J]jEs`"R_h%,5icZrl>J#-CulJ%FY*?M>aJ/[5q5BF^[_)a:tTEDq1Nq[_&0jYLRj4B"GX%L73@'LMf/2p1]-aI2OI-A-]"SLkXf4o_Ed#-?:?'`LL&uUrucXe8%JnlU":Y_oDR>mpj[B8M[0XBI>gdQQ+0j3KeVg,Vi/kWb]d;%?D^Ma=#u,hh8;F36U*R:l$Ff79Ek#%jW@:90q-U[?c3q\%KB6*gapT[k3Fp0TO%,*IMQrB2!0<Yg(Jb!%VTNSRmiYV04$6t1.%&G%ktY>m?0LeL`n;5YqB,Gpd7%RL?AWksX%eAF,MsS\72'GKoQ@e<r,Tq!T"F0B8scY?ceE92>Qs+%\(SK#TlY4DT&g`SS2'Cb/+DMD%4t_Xe`1o"6bprgDg^bGVH2;V)7o<\-Hp!8WjgCRa&L_"m4gj`>@*IQ3R(.@s7F6Re?bV=/4"JLb:%dq#..'Jd+pZD`DU3V4qu-M5%COV7\onRnZ2k2M(q$A[&NeH/^gZt&`FX+OUn9<)P3.(2L`+M=.8]U7Rn`Nti*9_&)-s?W#Ee-Fr`.#0,]c0PU4j?dAdE)35g]$e?%K/_n0\X$cgas\;@0i\+Vpf!#5Q;>HHaSUD?QNRbEBfkaKH-oa=TelCBN-bqtZ6"s>E#=;U*JG)"^PHt+[\?c$+MjS.*ea#E+%I(B%?bWX>gj!Q+'L).SieQBjeVA.XbQ5VPQiCGFLLPL'%`OKmP9[F%,,FJn3'$tq<$]Um>4!TZI-:TbO-B2)m5a)tX/GH\#H.@FgU#GR%\6e<JP;="[lHbZX,*[Fg,Vuk'iTEtp6e>*'AJf'\kC>3K\5&'pJ9P?rh[UOSQW>cVCC`&WZaZ9%cZ-YD_=Qa+meqCog3$?7cWrL&%7<mY<Q`cmKqU2cm;d[*OS,.+K0*gF*o#jnPOUhA0XA8<I#ccF1EP9T4pSTt=CL=jInG<+%YAj@AY&TZ"pTrp?f0_nBIsro\V!$-l%n8AB%k$K39rL]/Ns*o@L-2tcPh]GY=\FBH`5Q.<*X8a$6XPZb*riN'!rBk]Y1Bs.c!]ruBOSZV4coX4QY%!IlRn!5Qd)[To9-\rN%/,CVhBLn35B^/Fu)%Cu8D,L$F7Y^,8-k#5aKL87?&:'WK^46#93;NH'CVkMg(0bNk`EFCr-Uitjo6oDZOTfQ/C)J1O'U5X>h/N_;%Pq5V("q9%#('l^3PIoqnHgm]!bhh2ocCU;3nW/ZKIqSG[qn?'ne'2q<J+c/+^LB[S97&6HJdEM71TD,G>$2P;+IX0oP=#9uKR>7A%J_]uO>QJn2,K/698mt\FoGtFAXd5hf^][HI%sJXZWcfNS,>tWpKL/VX_D5GTXWF9Jefe'WA?-g_FQ$3,<$MU!J%68oDiOF</nQ/]%:Rrl#=h&*#]4+qXMG]?nW[9HoeBT9]!#5*o<Oekq[Zr)nq/dPj14eIkbT*Wk3TO,HJ>bHs\;GH=UsbV@@4Q]Pp'`]MAgWkU#;f9q%huTGVKVQ8X!6oU_-q5If=N$#X\.SP#7Pi<U1f6@3&A0nd%;<U/@Oi"MM&!@Q!`,2W.MT&;XIOl>Jbe_3AUsV1+<>'hm/-K5^]!`D%a+=7(989aS@TYA6rh"seD/G:[rdmAoV[O0=+qu`WL1h"4GpE]/hK*O]p,l^.ZUg,:kIf9bV9tD_n&=4H49<:5[2bctOQ"T)Q%R&Q%(!"M'>1V&"FmbrT/@aU/>GguE>a1ssER&Uch3bP.pDteK<#s-cS!JKdJ]$dPmUHlWoX-+aZo,Y(punchd3mtVUI@1^>mQ]9:R>'f%qM;/jZ]W:Lf_>c.e\\[To2n$:OCej60:tLAK3B"">mpbbH7Yh'$BQRbY2dk'9GrsSnuJj'g\26u=g,k9NKW*Q=Y[)q4[^>_M,\6%%+ji<blAj?^o4mH%`!s[B&52e5Ki'Q`W;YIc>W?"uenEX3`1bb4#@qUh?e=hgQ\(5^rK%!H^\msnrpfIWo)C\@g].%5r<Xr7rl)YO%oTT=:DuRqp^S8dfCtAI5gssM*GBZi)Z7+[=E/@DbBH;/-M[qF(HoXd?>S-asmAm<R[mfa@0'&kA(Cms%.'d"L'2j$h8,Y@f4'o6/%cXiE(9k.,=S(4MK*p1H&cfWk['HZ_dk(Yol$\S#A'S:[X.[f!c&5d$*7Q!])D\895(o/TYE:&ONnQ*4U^aC;68)#hT0QTH^kXN%D%qJ,gH(>ZcC`WY(,6gI4VReA)2PAc<p;5+)h;F7%'%COof/d]k]:bmmqK,f#ULQM<`2DIn81L[H<GuXs<L$mqqA'U;PUkh"G/:`fJ%n9JHJk?iq"kl9X^Mr)b7(!?UMW("1IWi^X_`a.tj=`W@<cPU&->j6eWeha`KmZiWalI\oSHU;aCj97Bh%m.8%m_7iXjFe<-JIl_$%Z)LpV-BsueS=B-f:SYmC*o5^Wqj+'_G/R6G@G6BgAX(oqOH\0$p)^ZO-ia"Omd\f+o9D%IU,kE3?-/,UEK#>u]9s=mDE:aK3357n%f>WX[4t+^T'PSd'+?f>G'ad#.)YoeuY`N.lNZZ:+`aMlE[\[?l9k@2;;O/eq]l:h`E9(ldV/dAFQQ]I0o;!F>V`KbEQ)]Po@gQ,W%XYj+8BqPb]7bA;f^m9@>[9XeUUm;iN>S@otMWLOV(&eZWAO;V%Q537j6/')gW*B/N'B5,jBk`JdY)2=)j5u-$(4YV1+\Yp0>-#^h%ZF?`lo=Q16:]?XDD`uSO,g,e.4[FoPa>CDUVS[)b(J$#(jM@9^%q2mN'JR^hN7.FV1c#(Y,RrE_LH;)WJthq66@s*==F"=W?6DT-%Q:8[m'Ji%:ibM#7;Sju0TbkSP'#4GZ4/$-8HBJ(`:M_RU5[c5kNZ51]ee"a(j$R$q1g=KIHSX)YP.#!ml<l69_7#TDAu>Z2<\"47%=$+e<4SbIlI=C\VjM>Vl&n0t2cXP5bFp1d8lgD7&iZhIPR;GL&^X'uf3T_Y3Zc7qr\quk+qoi8boM/*4TrTgWNqO7=.WrdC>2kf'%K5))Ah(/]W1Nfb#W!KY,NoVoN@92/(';i47butrbo/1f/Fenn$G\TMhA2>i?2aGlDiK,X7-%XJ!8*/A5]TSGLFP?T9!#i2Hp_C86%MMbki/SYVUY/p*P-uGTnb:?Xk4HD%'ff0]XP;m$q$F_HZPm>pC4<5BeZhIZjoe0oo,Nlk6e:u3Bf3RnEIWPG^[(uEs^/>QUU-G.0%l@i/cZ!-PR#G2%Z=,qr:QOl1XOmmhGDn3fWp<F2KID.M"+DK]"&G*2JSHZm3\+pS^od@[d\!oh?LCfMK&R]O6g"4!:2ZPio$(*YB%3'OAe%,Ko&mJa6>B#E*G_TQ=@HL\*>IGnDR(8"Q<<;CG$@7\*h%EJ/V^3+[dp!iCr/=bT=(VKT0?]4:R(9ndt8&J;(HdiHc)'tjV%WcXOV>5]f6$O%ci^L'gWc[0-_\_j<NAbSJT:7[XT1u9<YoYRYm2@@A_4?<CB5C!21JAY'T1\nn.H;P7%$o=la&1;-DLT9:9_%5eo%aSW&#DA9jAI."*8`E35T+(fD"$eY.'Q%r-'67(^6n+j=M>FLII`+WbLK9KDLTd-3.T&-.,A]^5V.7Aq,/iC8rb[=DN^n40#7a_"0%nckN/4HB3FW1:\?i/NYl&a#/3b$aQB'r5(Ckagkl>(nh)%Sc`qqt3?L5W0;4St]pJG`<1AgUo6.$r+g7M%AiC%d.Mc)J):-(Xnar%nDP[\L-k'*.Jr(\Rs!.`<L,6K4.@W$*%_k4[mI+P.N<ZY)N!_t9%:Gd[ekD>VLRchRVa93FB\?g7r2umU7U&.138Qs&I%Q0TeP'r%@)jMeHVMGCHRrEo6SiZ&b[r_dG6V*'AQ_MuQqa&;Js\?mpKi=BEs6.-hQgcQ;4&k`mbC&S`m5Z@F=a6EPZ<U<a7bJ+h-9-qZHHUQ%7oS*0H[Vt(Y])'N'Kb)"A<__A$OW2a@shM>KJpT&kp*s@PD,9Lp9)LH4c!h8.^>Q*0UIp<m<RC3d;89Q<M=#N"+S3PYRJ^FQK?`Q%hYtbqG3T9Fl]X-^radKj?^PrtPb\tZeSoK-FVr',bN29>C%q4il:uoT(X4%S%m$BI$g;4`T_T<BpX.0Z@Yr?ZL,sL).qqP8Whls!%G4!f2@Jo%;$FS$53qAp@>`m0Hb<gHNiOB7Pnojf?9]o!(Q!:@8GM\=Ec0=c#rd,)7-Wqki8A%]YVD@V-8ie8RA`$qA-;L7Xl>d_h%n(QFJ-[b"10do3#$o+XZf?eP3-)^Wm\_t5hUCe;qq<-#son,VDEJ9gDD(4`PS1EJ/>u/1O'L\,/LLNG)3@4FbZu*-pZIEn6RH#6F%e@uLipIJ/qB'aV+2#+)CE:dEib.\`3lo_W1HD5F1Q)0nri%Oht2>"n$f4u)Yo'/j_Sh)]P,CDB%qi%]h`kgaU+=P(9J1ifI#.\;/%[RtgUg@Lt_"/VqE^i!j5qWGs!?Tfm0XK$(DlG+Pc]R_UQk??JLi/=PNY`sm!<m=HoMRR7#`=Ur7=XVFqeH4j7;Q5P%j:4dh<m.k>%U%Ke-W$ecu&+@G+iTZ^1/,m,=?IreE_4Pp2EW:=+rs:7P2(WTN+r"#So:l8[?1^@p,QM+1S'kG7o,9[^eSc[A=W?VihqYQ$P'_]g%GLX.oA2Ak"_6W2Nh+4Y9jXCdrU`^31:Sr[<2&@nIP#cFK[)-a`Z3:$(r,/AbQ-Bs6ds#3F77K?ghS.a,KbeWOnbj,jKhq/hImWbr%J,LCJ`ule;HhOQcm=PTJSJ%f9OV,W$]o+L0e^>At+k?FH@-=$Woq<GLp"BR`B#7;0))Jn;<l:K0B=2t-nh'u-KQ#.n6aSYTD[i?j%ge)gDo>i+i`eNE=".A,<l("-lWg.fYYB-I,c:iV18%aDgNN!cg2c"]f.?"!i!p4b72Sq)g,2]TS<B6GA3Ft$L90WFcJb_B@r/O@-%@e2#F/W>W!eptU0[=K]AcVf=`p&su4?,WA65l\LTs*,@XP=tA:Qi%rgP5eh;T,39GI"#$X%FV"(_4o9'":UDOT:7io?YC*>FjAo/%@&09Q]?%*l3ElJKZq(7("eu/GaSXm<CiXAl7-E?N!ZK.o_pc"*nWI+-A^5^YUA?pZT-uu)"R"amgYe^R9`/84?+E5r]AjIXVK3[n%dSAg_rB8)2<-\O=,f%=hGV=M>Q[`jV`3t4acn4K7):!k]JZYZu;J7D<N40q8%0rb-3hq=(SRVBQ1<$3/<ZKS]?BFpX+L\]j0!r37%$h4,)s%*E1[cdG<s7%q<IHb0Ke[]12-l!7MUF>ZXmA]UpnO"O^`TRMBOR/l.EFHt9BXfn,Yi<Y-p)u$E`>GfVTCsV5p*-s1m4Itr%F*8Nl0(!;V-/cTM/$Q#q1nhm_G5_9FK0Po"D]FRr",LRs:jEs/>A7`lF=TXgG)BWFH(E-nA_14,[a%$K33blr^[=)a6%ZH)@<8ON%OF7[I+Eu-Pp\](sSKg@6%VG@;hq!hZHJM\i!n0Zu@hV(UbCZVf#Mr9e"cIt4-u6aEp8_jqn`Yglnfj"shXB4tqqb(K;GD2[CX4Wm%NnC%e)3/?e7f/a$0*IHCJW=@rc0/G7SbpT+rcGUd5"FG4`D%p4L`1O2IQWI^n_6P4hC%SDf0$+69EnDeit42B%YQ-Fhk&I1>7d,3%ic??sWA4_!O8GRIq;&BQ7U+-fNnW_i.[R'Fo\=gIieL!Pe!&=R:=^M7[Y/AiGdb&"#d.h+=ni7EnCk%9XUD__H,`&&\MMTd';-@0%\-F?G78-s.V>8_(7%RQWj1Z,lJ\Pd*Xq[Zmf2K"hp,uoaS79oEl!YF`4ja2_HXF3Pm<<#)]GWhMWSGFq4o*hkEFgl!s5CMYP<]^d%/u4*qZ0HR:]1iF;(Hr(\g%P=A:]:QS&H,6..os>4m0qs]MY":5o8]p3s!*6%oBAU:K;h"7n4>f["c5D%Oou88\K5(1&$pD,3Wu29%:eR+1&NC]\+*!r+Fc#7G+_YIa/)&j%r->44aFR.4,]%P"Qm(T5UR@4ok_MpRS@s`C.:S!PE$6*N:)BOc_^@@uJH`;=93FT,MF!+3%/+p=ID_.kH_U?9@c'^>?4\tts-`duR`6?*aHPSh'65kp,H3\t_)S4YCMqE*M+Y:]20Ho]+%<)b6U_:C5c%SMVmJ`n]68BDKWaWBM%Ym3r4?B-0':*BXL%<a;=GP0<t+OIl^lR`=b+rgst>'@.TbQ;:&Y9,#QLVA5PDrgjg_tef7HdDB7Q)%j\g]7(VCh&)l:_n(0aa#o0%Li",t0jqkig#%kZg.t]RW?if5_O<W/T(BZPCJ<3!W34o]<AXb[G`@W<VDOiT0HccO^KE?iek!Y$_kK^=1!PqX&-Vm9(MfC7KjNSE%`<)<kDfSm7'f@t&WpHPj`^Q*f6^3"_E(cY9^c<jocLcgVONJrGW>%pT#525_QnH&4(FZ-*$M\.,7#d&bXE?Fh>o?LP&L_gWl6=\S%AQGWJOGSZe@e(o"A@:GSm]Y%*1@mQ?H0#-)Jo^NABr6(%Qfg%[:&8fW:[>hGHjb5nC7g^j[-4p-R:d$Y8S(4X]0,1p*]&<Y67Ob$%X/^?f8(KWF0#L7*5=WNVGSNS8kHnC@/C+[-0*@q?ocnZVPJ/V%EW_JUL,IFL>31>_bb:BO85BXJ"ta"R#8!AMk'(X+GUZ814nCdB%PN4DcbE*6""#F6;Fh@nUOY6?;B;!^W(e#e4GU[l<K9S8lSkO0:l#q(ak?se]Z?_,$DY4IS1O!OiaI[*RXFd*7X4S/Th80\"Z]f@g%h'bpbV:-:&%'cC4DUqAD>EAmTm=EP58TG)=po]P?"K$#*$8.40Mi&\V\]QZ7OClVqQ"A%;2UY-gk`JOk>dGVGZh_pm:Bt)p>o64Y%!t_fEfjmJn<TL`H`XC[dO=G!L=U)'La)et!&rYD;.G<gsm7T:(0Q!UW@7Bm!Z1@>,f!5[p@VU@U'lRQ.`GdhD-]2tmf0n[_,G3lS%=[cKl@#G^6Ak\E;V5;i;;&IL;ZfgomWtRiUXG\STNJmjV<68Nj@N6:5oj1>GatM'19P'KULgkI#MVM+q_k`PXmHq6j9KPTuQ>j+=%HV.jp(Mj3u-7h?sZk8*gVV+t/nP=f#9]GS%[U0>>+7W6XB[5'C41puAWR4TtWm/Qr;KAA*HfUG6"fNoZbe`Y/KI1Ed)U5GTS#;7O%^qh^I,cdVl0i4b,_I$1iKpQ3,G_/(!:!I--n;+'^?UQl%JS9<D<2#Gn1jTAAN+#D?i)oU`1$0A6'I<4I1tM_0I$f3%ns$E+7YT?\%-4)4@=ZL&VTi"]%V]mi1Z'[Dn0&6V#7Ve`k,D`0^aQIh&#U[nb\hA*a;Pjf!@7RrgT+hIe03Gj*Qls!^jLQ&gU?llK?76(if\3I&%G9Ln%Tl+,)UB>2<_QD;.@4I)31ad#,R6G&;6G"V3V-J."Cc"OSR0I0`9tNGrSsQ6#N_,_$U!6B5C18tPrekK:fli(h]NmfkU2cNA%!0a=(_7klkUHUt:X5M\$RRRL@0DDW".jXhuF9#op+AZQOpJ(PYLEer&5j&GM8A,[K@qbd3]Z"XJ\J/<p&<iHh2H:[38=D,o@Nm:5%&oZiD.l=82;l0Zd\k\]bhuKkeHIIn.aVZ41A;=p*FCaI327EQ&em`c@FBi@d!j?Y%)lr5cCr)cbf<t[X\UfcdAgTNMJRqX]cJ=9[%<E3Z8Hsrmn@PUYJ9Gk(8bM;a].-F$CEaR2Ufr7NTes3=ONrPCk+5tK2ZmD=0N\_nR01tj@lq-ao'`/*mBbZ6713F8@HfF14m8D.X%9q)Ibd`J`;)blP?1a9hJ>@>aS,4hJ5^:ZJ%OY84m!.un_Z<=nFe)$Fq!bTKc0\/gfZOu<8@%<;>AgJ?%k9W)f?>%EI6Sc`q%@(Y^%,eGUE[-U7ff+ciBLotTu^q[)AW.?JW=mc\[!?Vfe;?e*4e\;BB^(pG:obfVp"XLJ`[uYW7[/cIlNRtr]1,LKI\cA"XHsYb14Rjbt%(.kdS_BKW"Oe"(m(2OAI+"#^dgfrq*:&."4(j)6b>`B5M+TIe<Ec9E/hH%NoLI@Y%8Q_?SO$o,k!uUa1Z9rlJW,c@n,4g8(`6ULJ%m81>\,5l>P3-c=<2.>+-X&_KWq)K#LAQiff[lGScS]fE+kaRi@<'W/I_`'M>%%1[pG&gk5(U0*!P;h[[Nt/%X,n*]7Ae8adW".t(%1mP!X?h[cYP8N12W@!M"KZa8/P+<F37&%o3?)+#Wj.)]?l`2hn+/uA.I5#j5rip_QHq>00,_iV"/_QpL%D:]rU53-lN"%sbruaEl%R,sSUX3p<r.SSbCWGG3;>VnirT'"i8qo-$_/;(>UJ@9rD2Q>hL%9I7]&74=Ngr<2Ng0;E2>1T0C^#dM?0T)pAIr&Fl8E'B&/65l7%:+Fos"!l<>p2-4'a&)rd4selBdl\Y(^:TK[R<k<!\(''QAZ*(W-#AFD-Cb\tJF^t,MA=/H&__,Gj"B!`Wh#%)RC%H[H34jX^k2q<%K@aaZYh`c4VM)LcJMPGkb4B4>aC<H\/n=ZkSti8nO0*G=cd53HN@.MF#/Rr/m&3om9,`/k81dL3N)]gh7AH+uWJY5i6rE;]nfg)'%R7[f=@_;/qW&Bq'=m7fX5^(MWhO$?ZiM%T:!8XkXm#1cC"$5*:o)]XE*7*I=_D(=dO?%;XC#h)Ya.P0n'"=o9\G\qAM\2A#M#rM<%hL@?R2sl6:_OqXc7Xn2i.qX>`b+Tu8`j!lY7b:_tInH>\pHkiX-egd6BQb/-B6pr#%8Nsi%F;\.-n9YK`ubJ(*)d"&K=*%/[;,=i%W3Qk\c8?;^;8c7re"/m)SC(r./W_eNGTcOG?*kSOILhCRTp2nH76uV4cL+&%.LppcRbc`FGZ>Nd?r`6%%S&j6bMFOjmHAsY6u#0A%rF!m<[irPJ<5G@C,;1l8PbEu_cCm:l;+G(T@)\X]N-#M+m.=#od54YX`p<].047XQ;sNC3=;T9A75bb1l$^Vq2Q/;CM96Q#JR>>W%3BE['-M]9]kE;Wgi67S&FS7PdU86KlY5,C7Tc$":Q>$lhfd3I'T+XS)hQB;#`\UE8@&eBMCR%Z2Q%_?&Z%i8#4HE5qGR>1+Ai?1+%+[Fqe>D=h&s-11SMIaV)VY+!)fq^I4.oFUZ8Te&R4ASV:EqI@f*suq00EUS>0c$2oQDd>:N>JRdba1jmC[rt0%Rg\E<MB6%4O(&*%5I/BG$PurT?!s*g#+H'.>=d.dc6rp/.Gd-Wj[*q#93<\+0!5"<OFbt`at4bFhH!epOl2cMp54ClG[3aLND#;j[>lKP*80bJN\P.\%\jg-T$<sdA)oY-,G\>(,T..!WbT=sCC^Rbf.W\Q87=^W:,BSns1oiI+T+3(8RY#gI!U04jE)HnUXsYII/<jEAEu+'5(.>-7j6i,*%eTad^8\$AGi&r^Q:6r+O<OHg3ln+T.!R3[=f&D(B_A\maCrF8R)S^95R_<M1^-)k0;KZf'r7,U'[6GVdcc1;Y6^rr&.Xi!,eIp*[%UO!IM4ad67Hg/P5S$1*")Dc+=Wf?:jXZ^gZI]^"ViSRAW08nA,rU[^.D1-fGYb#LPAj&)L::7Z3-d>uX2<WFG23i_9`;Tu7YLKW/%.DPkbY-N_/aUj5W<U5;7/(brUHH%:!q"t,PK.h]#C<-ss.:(rVkP\1`a@Wq^/H?1ueZ&LNohFX>L?RrM;LSMF2S)hbh.f#fbjF82%[6_W3WRX>5YLNTlggpZQ<j-d1Os.d#4,pGCdh_a7Cf'J!C,]ADLC?I0DRR04%8;`Cl?ZEF]R8GRjkGQ.V"df(^GN"M?)K0cf:#JG%HDjTJ;YtB;AGB82eU$oGJ+Gj7#lfp_0C<AbNa%p_W4"pkch/3HBB-]&_1,--PRPt/)$">.dqr^TJ#5igc:@7:::T-XWk!V>^Ec0k%IstMulL3C2k[se^7]l8R;6)GH#K;"se+nB2+?j0JVq(6J[/m1j[CMKZX%\mB"jpX-8Qc(W2LYYF9X^g/Sbu!CaF=riNXK(VBJV_D%KhMs<]K$,s!<.Tari'U#ejQtu9kgh1M>m6F:@3"B#&E%d2@oh_r4/49mRh)Gr>KdYRYLj)rm8$48>=R.jUp59+,g%E_JU_m"Fg7S%f#;n\iW]Z=m\Ns*;uH[CT$L,*&aGahrR2uX.ps*Naa+_rLl9'[a=:g$rmPXK\_pVHoq-pBPpW([aRXh(&QIJi7Js1a9;p>6T3Y!l%aRiW*,2eF*-lWr#7UP(!BeDqc,2I7$krEA-oh[n03<K's7q(qZ&4sm=WF1uI:U,LqYLM_gkNTepQr(2)][I8ACQQgS[e2)?mNJN4%(AW\7(OhXCqG;5qfb1SNd&?ku7*Bj[FQ$'[!D'!tLT4:,Okd$H@1MI*rnNXg.UF@l&?Ls<OP#"1njlp-C9!_W7^AI$pj_FUA1LWI%%,HXNoS)FT+W)nV#buHM)J6,r8#NT@Ps0uB+Ru)b0`<=5!(*n'.9HXHOD[d4mE/CMc!g_j_kY;E9V#EHE@sl?_db/f&uq#\2,g2U%N-MqJ]5X1-U&34#7W_6rQnhPq8HfjGqc'j?7Uh+JQknE]r*TkQ/&U6^/.OLj[GK"1e49&DPW)?T9>oI0FuJ0;a<(g^PZX)#YW0G/%g*f[A;;;3`"0ou!-;"mIcQ!+c`MEj6Igr&ba:u"96,V:3"#'sISNL9`B7kOM3Yqp0;'amH5uf%@p<Q]m+9LD)alLsn2CK&/)Pom#%N-h*Dck*o`StsG;+D&>fkT:Z\/u:@gTGTh3An05,5T)ZNr`u^M@_'0Ao3Vst@;76W]Ih[jWkE`Q4pC]hCS+5>Ei5PeXa5tNEG'po%,Qe@!hZ@DPl[]F]q!'`&40$0_VNt^j3LCW^Q`Lb,jK*:X-BG2")Opt6`R/a#Ai`6Kp&r+sFPBehj:C!rGrma!C[C8='H9eRIXH<S%jJ.AMpK!.@8fE]sp*09:_gltRVA%qB[n"kTPd?T#qUOifhp9P.%eK_)Af/V<(bdpRCT7-XqlVffV/!Js'bL.Q;Z%[#.>Eqr3nXJ_%I'*3n\NH/TpNO:O?Y=mUg7Q^)DQQ9a+65?7mHT15L^B"noQp?.XM;2Z%GD'.H3YR&IuF>Km0XBG\OPcPYA1\U/<kbu]Dbg4pNU%]%mf`8M`kdO%9_"/-s*<fjIl:VAX)\@$!"_qAh-U9nK-;N6:B.YICc!(s9,@8'Dn^VL?DHkHpRKV#O1BTtFSCpCQ!!iZ&:`V0r\"l[%dU/,.*P;<g=H)!]l#jS^msgXerAcuFl;UWa6(%tZ,:YbREOp\.r"gsHrsMf[H2H3CYr)H8ae2T4I/..4`<mCC;&+4'G>bKmKD54>%qgAF"6="c\J!LB[pmt&YZpFTcfB6rD,KdGsa+&86J?]83R"Mm>h!BXFfrr)3&)3^aSOD.6s)7ni9kIp0q1I@0#FsW-;0M^.5JA.<%`n0aX5%m%XNl43_.hi!#q+dEmp.MN<pX]AS"or]/T3fBYX]p2WKkT7a=C\LDk*:37U7d^sRJcjRT_A68qjojJFdhtEF8t=H)kSeQ%90V(lN\!uZILa_HH7a0,hlSbNmAZk(X]+O\3VK8M9-!U`GH@cr>3BD\UtY(ag7SD#pl^<`kV#oWoo$^o\(0dSpl35-k-ql!C?*!/%IBQ?c2-[a0>EpK36CN5,fA@q(AH&UBFIVZskA%]aGk&(HcVIm4T<5)Z-E>#aSncm6@8WTb?aLA8mD!C7c+e#\(Aa:Wp,7;Jd-Po@%T8hQ(\+]9.[%8:YPNXg(+`skF\t;pOqIc)de+5KYO)"&W$\7aB=)G#:q>,mKUAXJ_N@Q/X:J_-)q^,l!.qLR=,JQ-\._U/!+4LIQ%!)S;d)&)Tk81pc_>,uRC]C=SRk"E+BR+<G<q_:@J0:[0e]i,PjMI3!LerI*500hDiAm<g;<tA-BX.:oiH$<Fdml:E9)3diJ0j\(V%=U%UOo$XVKmDWr19PsL79cN\>rJ)gtE=/<6C,B;3i:Nr(gJ*^i!F7p@G,jBPe2,ZYL%FNoCe_=;/\mFmkBF+9Ff8!=BuZV,[]>B_%WsXgOj_pOXo+cTC-%b95o%WS:D0MVAeb1Li8KFa%JXLip;$D'"37N;e`d-a_^2<9H13C_C'%g+u(-&P!Y^h:Qm01Q8-3E*g3?8g7%NPDKa;]Cb&lhlc&f/Njb0NET#lrK`Cl^qH%SH2/dRdJ_\CHi;)jaK)!Y-2,Y=]VC"gU>hdf2"erC?(R6l7gd_J$b9lB!Y3]6rrIK%OaAF#WdJnLoMkHa&a&'ao.m/k7^\j::9/lp%XRg9-a<#5G#fVBWp^&[nZV;:`VsmU&<I#M+[XT$OHInP'5o'B[cpXOHno"?j\1fY%R?JaR6b4<o.<$1N"^JadCoLl)fLrhQhNPREiiq>QLT[e8*a(B<9(Yq)K*aUMJ.iqX)PCd$JWOnro*6#t'+QOJ[l0\8gn4FZ&CmK-%_-8`L>hRmR^^_Q)pA:@i)WZ?+T<i'aC;!qr,J%q?I6YN_"ON]%lO"Oh]N=:^Zh4_<q/Ye:hJV^!Cpm8XP%]ZuT"n6$LbW0#=&Zg2%q6ktt/_c4!:L^g/][M+@:'G;3rI>A]g%/kN]8A)0=$rh>9^LV^s8L/m(p:P1hqkZg'PF-cYkrXPrRLF]pB/$Sn6W!s@]"YtD#tHT%X@&Y9OKK0\#[4pfI%>.<qas@(35JC0^u=4t=F\@NM=R.elSj2sDa[o2lS\7ke:DQ<_XFF-XZ#J\EWjaEc-@>.MXSAJ5Jb<L>(O@T%s-fGglLjr^[%"1Mc5s*#\&j;uDJA&mgWoGg*k4hr=%(C\i#4;rf;[rJVb1ffb3e[c^el#E+R#H]`<3O+:*S%OL&s-pe-:*nn9!tX%FOH)Ga5J$)[FY/$Dtp9_^)Zj7H!8'S,TW@mTClB@Ianp><092>lT"`b?#OA<*lE?;1`LE+?*oYZp4>GE&ID@qKh2`mo^1I`br4=T%9ih-3!oArUTGr88g],<2GBnNIGoY,@l)a@,:ul,7rXt_2rk1@#ak$5h"8i$3^;nMlX8_[60NXus?5f@g,_eKgYV$(E0OTBL:A&@;%0H=30OL5aQ<GS6V*l`E/<sRX_7)E3WSapKM0V\IL:qlh[[7L[3Rg"XZ@.C09\p7//4<Dl4V;5qsk^pD!-YP"4]![5N>D"7k'D8oi%mY%+*>GH/U98(Sr@7u7L$8Nr[)WWFo6>(W_&c)jXn=u_e7Q:3J%qg0p:TOHFCkV=?m+1DaF*^gacDUgarMrs03Q2JASuA]EG%oI_%X(W3&G!_)io[chtemL]R2i[=3l8"B#j]h=hD:#KX;$EN*('5fK<9p:QZ2naI&&rfMG;%F+ci:VBFh)]ra_t)@eb6$6`1c/AoA)q$%pZokqT]=;i__7o0p#Ur&"L/_'-+\E'0"X-:A$bh@_Gs-^:<89U%^3QB(I/8hKqF.$).:7&#0R;#l`Jc`$,I8.LH-G9V@4"Ej>YUY%K6qh@NG$[TOD44T/Z;=aoB^17lE^+G<G[7aq`8kd4M<j>\k>crV$o''^-S5%<'EMe')J8Hp"9Ve2DPd80>;i6*FbiQ*LklGRcpo_%:$GC/>qi-ET8N&Ad2[T6]2h.r[GP`3j)Vo2m6#<1^UM02krW/BbOFt03G]L9d!FS3/ahudohl5BM5)]+ktgI$qSdMNat4Yc/?XJE%<W#M;<fWMGqhnt]0Cm)f\pi3^PhrLDYO.aAeS=>C\mD_X<>JY3N/r3Uh-Q(REq:Z`7!s"ACF,SKF^rD>+.r&Qdp"`EfNUCrV[oq&%nVhR_8@d::,ahu"(K8@X8*M#/i_!S3qVfnl>0*aij2Ul.=iid+Rc^Fr]fP%CgQ/aO/CA@=XZg[#>JG>?p8lPCIXC03>A;r-(ZkAH%NE!Kg>b>"s2cjAIKh\niAl32rgDW>9DQ_gHiouAVSTlKRai>3)ZDY454LUO8l,QjgT)/Aba&Cg2-Z1L^DG<cr83-)0`1EB7I'&Z;%Bu-rq^LISYYNe]1rUmP0:,\WeFn?dNla53o"b=tA<uP^Dd^l$8?KYk)a[>5^g39+^Hrf(LpD2Ahic?f3%:pA7^SP6hcb.*7XZHCV%]#9rEheBQd4#cR(jeG1J2dNOFl'?^p?%)(;r?d5>\UQ8K44AL&23d"/GgN84m>'KVV>m@+$E9Hb<dgT6)G>=PmE@[0KqM#Hf8e+q%L&[rPl=t>7jm^'(dTE5"?$XeeBg%YPQ,;BI^neuoCnmP)%@Hea6)qTr3[KskNd:=Z]bOnBPBS+pHmdb(<mCc_X5'eI4cr;:m@VSI%Ue!/^S]g_4Df$So:%b,nnli`/b:/fXCO/kBIUD*m4dr#;9WIF9O"E,$/E*!4-[fggIl,FP-JbU=An>$:Sb-@hl,7Mg=G!(.XI<D.%o@n&m]b8*Kb^@o8r$OW[VUg3.^\@[R?!ONcXcZ2;>C-$Ybfp"WDG:(%[Hh%rZF=l846^kKgIc.o9#mMp)2F>(c-P2G!#m_8#D]^h%TLiqIf($tDs%\&L8r9b,`G$k(e!_jAdEHMlWbg,L9[Y_rrpp:UMbI<gql7.Q]igQmG:XIV?#V-E=m02$^OAkYYcddr.d_`#eH.,C%+-[k=K-l#.%dSn[(\b:Qd_5IG]kk.1p7:jJ!%W3t9Y/!8m:i.`E>CV&XX9V+S>H?7m<)5![r+pt8M?n-BAfRu[9pHT,*DitHFkD-%4Nt#):V(Jh?R4[HepSpZbZrA;-7-"&BeME/b;2GJIS)Q`eHc+GJ*ka7a'TUF^6@D<:W"`7Hi7-JcgM'3HFGLi4D\d3P9)>O[haK@%SOl,)3R^0k=386LVlq0XErM9*`8g6.jld("?0if)6Y-?B2P"3#JSCI"]NhE`2_NaY?e0gAd[s&$]1jVPk1>dNDFnoV\CBl2ERH\3%e<]ur<mPfC_p<rKQuo+`"`X9=94F*.f,$U0/KrA&;PI%V]1]bRp2CG->V;XME8%C+YO11F,!K@,Rb'6-V<;EDX1?G#STJ/obBPA)%52/5qlp4oAhqppQk"Mgt)f__,IDJLO4oergGJC=R.gn&qDVPWVG.YE.`S8daT6:fJXIZi9n)N]V:+#Jb`O46.4lk@m\[KcYqnJK?%/$E[dldJ&&]YC_"bJ1a[8el(?jQt:cXUC?e?_:YVIshm3^P@3;c"7'mL!r9QIJjZTp$%0AKm`bp/d-ZNG1&Kp+P-:8]:2j2:trSL%B926<&-)@K94lVkHa2c0eci>%fq[6Y?XF^qacLGM5>$La!lT!KgVr)XhgZp_K>2h*C0)S9^-C*eM"Q0,idGYqnCOshOf8P7]:+.0%%tU*QYV[s,f>#ndB(39b5>00C&6kT=2'2q8O3]BnFoLc<g\^C)_:f_*p=[Xbieg_3Fs,B1rSi^??OH`(il^g``VjX(e23Y)g,M%:%%N;%<g%O]6kt<WEEk@[7RG.(CBmoOD/>%dFp#*$UUQ&N&^0%qWX1X$@QnFMn_#Q:_%_!-gm?ubml>m;/@(Hcp@/\$_2qug(r9@.6%)*8Yd8&A$QB%2*885`r1WH`bAb5L*]^+g.!kuEe33rk;M'u*=+)D'!]P=cR(iP9A0U5af9A"KLa*?!h)o_L1Z;G`<VC@J$'1H4JL%9G[A;bfoN<BA`N\>BOr6Q$>ok<'-Wc_0_t._PFAVF#.?)VN#f^brH#'<S+&C7k2&u>PFah9AKhK3aJ^s?#nhoQ2qh=LO_sU)71EU%![bU0oUD)t@Q<c+XPpWi#%4YU![\)i!q_Uid%i%";B(f_!<0BM&NhN-,ApJL`Ga6!?Q#_U/Ze*IV]X8a/P6UEPb&YV2?Wiq&l)5s%W]BtYSN7\f9g@U^'BlN#gU"X$m]Tbt=%-\L?.qTKW#jh7;J!G0(B,ap(5fQ"cb*6(G2c=3!*)fH(7Le$F:I_@$-iK*RG#KF@/BI>%[)JX!clhX+n-Q$#m;[b!UYaJZ>u!=H58u:>Bie(US:B*nak&>GD8Rc>hZ\+WKl6h8:+eaM=`P\[;(Es^T,AS/$[ti9fYMDrY0P=2%'*.UP(RD^7:9]5r#>NO=qNk1GKJ$t.:7o^DTGRBq>L?ru<d#kkI6C`i$NrKm3VfS!<H;nrB7GjfP9$[0bBs+EM?N8Vru#p-o@'<&%'0V5ui?<VUMAD?#r_W-EH@DS7mWX7\m<@r,(h!.L'hbdI3a\5+#)e0$9t>Z/g%)qLf_`QreoEYMjZ%2a*".>q@s]tq"+,;DAoC0C%QA>-tn(&90XJ\`o&+a(G#1*!-jCqksgF`K[$g%GJ1$2Crb0Ek\X<2Us[)@/T<qFt5#L7d[[UJ@4H>ohRTrd&D$@@5\4+Jf[2pZ,P%R;(!ur2F_Pf%-1J%gE(2.5aV/Lb&]-r-_CZfeaJQX0'&qG5=DD?G7q$S.3#(J#EgM.4F2d9nk8_T>Q.RR!e-gnqXOC-;RtZ"W0J.%#^i]q0^1oeU!;jgNc1ILK_u'*gfV1>6P8]0CbQCU<N!;Ah/l`gML;$Za.gu;ZdK5Z]A2Sn;O[O$GTaP4i+O9C1+`';HLQKKIniBZ%FrtU$4?QG"(\7NZ<9p.=qH!<kVL/ua3dmY(DDLt6>[/T?(Y?\3*spI3>t;18Y(\m;#>[R7q=*gU>Ok,>GK!o4(p#I'UtAb_)_RMp%ce%CiMgsr9`"L\Bh"oK-m:jbeVu)%Qi.tZJmftJF2B=%n2sf'_=V>bB@$U0L`2;3qiSg;6TL'I$Fc&I4aNr1)%"E^akP#&D+u:ra%\B)ZZ=BX!Y\\OnJM4k0<-4)DPEgp#T#r-QbLbZ0Y&1u^V\@ulSYOg:bTN)V_X;rgFX&gt;#ZPJipfM`'*a->QVonaN[j=3J<Hcu,%LGY6Vk2uhcXDl]aN!LGN200geC_Z)([Hcdt6rW%iE%d9gPT5)pgq^8(Mm0#\/S"k?3XZ8D/R^(Lh/]<F:eE#mmu_ERcr[e_4sFa2%\?<_H-0DHA(HkN2@DqhLW=:,%>81+bhg+Z[^dUPEn[^S;FFN]R):p%/20nQH![)6^FAY8R1>^=u%UP;?"*!#l&K(R^$3OD@LB6%G%8:47p^71X^bl2&XFoC=d?lYh\OFI\'aBkqWd,fJmL#DItUG'6l4-\UaJ$+OqB*?lJJGWX3<chI[UB=-s7u#YM^`#W#J]N@(fgFci%DT>-(lE&P$%5uXd]h=B@jEoKQiZn42eCg\ZXP[c#Q=5c1?*F7qmg'J1Z@SPGHe5C9O1$nta_?7/K-P=Y?EkL2hM<J0*?9S74h"!C%dY=hFeYBs@i:knN(W52K(lJNa\#&01&>$p+IgtT=#b;NfN?9ZiGoGJ<FO$XR'<cOoc`KkOS01(^<nGY6B*Q`+@+_m\!q2r%`F-GN%EII(r4pjch2;s(f/WEOZXZa,r%*!@Gao7[AI\)YA`Uc5:pL8uq]QV)F]HT#Ef,*`2KO]m$f4ZBa!7WXH'1N,?%+]"aq?1(8-:cKq%nZp=9IcHg("]:h-nO937AAX8B@ta/j3p`jPa/"F\^8THiLK`t2TpH&a<ZGq`4#TmK3Z\3__LniS`EcH:(ZNmkUUY4LKj2s``YhI$%I\XF0p<[g!^8W6M\E'5p=%8I&iaD3O_4[JA\KBfHa(sP-8)M7nCcLN9N[i=+KD]%8Qo)7]@<Nq,[P15`HLLV16$_2RJ26=n6j5E3%UKo_R3?#983LUo-L>lm;Y=qoUL?IPLjbeJI.RrT7jIO_J"QLa77tWITiaZar=6CfK1_8uk\P7ULi@$==(5QH&`u0W,fp9/*39,':%*!J<jq]8nQH9$0:EVsq[pOS$$cl2s>iTecs9506Yns!>EpPiNcKO;M)oB'fR\i$3"m<V2$#<IAk7_N'BTnMa[Yl"C8>!3@m7US$W%E+QU/Qga?i%A.'bq1<;s@uo+%dW1<[9+3OMoHt3$IMaic+Hnk?CAJtmH#IrF<-%G8d2cB>$Pt9%msb,0+g_\g<?oG6U`o64gpe,,%&_P0)Dh,eC=W3%0V@[\tOu0785EA&n@\b]LlK-[p4Zt[3/0%NEiA^l7rD6B#`YhLcmi)F@iS_1a&]Shf[<uL.IA%QF)IA.k_f/aL%+m+oA)'<R;(#_/NTIf_K8rr?NBdg^5MQlt.FOY0>DA'pRM2I!SO?jqG,#%k"X&1pbc-@U:Fi.T/&I?gO[em]E0\D_q(O]u*IH;$M%+2imh/g&g[FC*pkR]k$DM'3ht\rQJ>cbAGW7>7\AK2kXL=F0Bp@`b&"\MG+I0:J,38#3*V3H*N$?`o5Uo%XOk!kO1\\D[lbQKnjk%[Y;PP^:ahZf=JW(58b!RF!m,8),AWR>m.f,`3[ZVH@/B4,!a+tF"(?W#&F&fN:=Tbn1;Zl,A^$p9O<s&)-Pl`m$n!?Ke$?PI(Oe_%@u8W.jl1A,f.H?UgCL?G,KA)eIW"kG&6BW?9I>L30f4KB6>ZQ:]'otdbhY"1(coE'SHq9R_i,U'(EPk4U'2nU6g$D-'1#.UQgnSL%_B\8hmZ)9skkr9?,No3'"c&,3$h"<[2N\ifn-HW)81snnE%uInn"KQ*jg[$eSd3@YH0on[^Tb9&)Jo,)H<kJ0cuisD-,kUAP\Wk0%n9CZFLV4)k@Jh=H3g4j(lJq+L%&X*[[cESE%[?<aT#bk3%=`"Kit?tQ8j6*17rqD6T^RA6"KR@pKQl-hhsl\Y:P7M4c-XNGmgc*^%c:-Q]i);,uH*3kBh/>lVa*g-1,E[O@^iL5_0+ij!6If[$])'1MKs>jU@s\(paq!(6XGlok`$`h^*mN.qfPM%$]8dFp'YH:iq[_ee%O$Q*bh1@<Z`KuYgKAAjV`_en4)!j/hX6Mb%$J"sI"(hZl,S6/4_%1E-fJN"D=:7fTFX[pQarm09&ppQ:7W4BDA>%WA/1EoA.=\<P%+NX1Xq$Bu_#!'skSmDCtaMWNVN\e0!:nulo2c'Fq[jRqG^ojgCN_M6Re2T.Cg,3I^T8V'D`+8L"5&3F]$_hMo_NN\-*Be?!UBMIf%9:?/lP&k`jq1ZlZ\NQ;\W>Qo"n[U;%Jke!$YQA<D"Pn*S_8<N$oFD]34rFS5c[mjh\hHcBpoF7"2Am2`1D7VmY!RkufRQp,iTkME%IM%dUCHp\>RDRKAAAp8kQgLsK#"8q\`#^VNTP->uJ=q7om^b?D8DatK=#0Sa!-^&#rQN8*KXaH)p9k'_4o=&hUHSLT@bZOg_ghc8%?4hj\FC85'J3^Zti'Ui:KZ&_Z<>p@]Gi+NJqh*fefRsq)aoP@[&]L7.SHRn*(pc/Wc5.\iOZmu[(h4:%([KTrK-Pf]oF*Z*%gYB<%&0C#s3hc]?c9@RG#Ku_toWe:2+q^o;%7TeKi=t`G.5nu;KLIK<NsI,bqdbX+)pZ,QFC^mYr=i[;1n8D2NsmX4OHo6&%HW]Y=ct_A%ar#(9jH8tWY$?m*HXtW/lRV/laQuChaMb`*cb+fRZV/bW\Lg?[P@.N%(S9(tp9cgqc$'aC4D/h/Sf`Ds*kUuiGAN<KL7rl5%jU.6%g)]#pitmi8@;+\IA4Ug6-cb&!JC1+rkO<lZ!KUN0"2f27$I5npH'XK%hDj$Xo>H121f9KKd,elZO%J,bn<1W5g,-T[C$gnD2p<k9%Q]@9iDp@IeT&W\,LnRJ^nOQFl>km!=',&VRb%'@\EHU99=`82V+l_dAGe5#),p?Y?Koc^jMh/)e,@PW2BBr-]HdpN\q>-iAPspLa%Mit8^r-13[/kLkT)u`Q;s16-n\.N^saEY51(TJ..LE$,EC8?*aJJ"jpM21-=K&]=PLW@=.E6Foj`e]E1;/&COC()*n(QsPaK(3g@%>l#Z(-63W;C(3kt>,U#>YB\QAZ-hDrqWX:_Ho@r_OlsZA*h2jVRM#2dfDn>Tg!JaJl9sMK&i.bbBeANs6#Y')ET2Vk)(ikbA\[._%JXOZ8bXG-UlSoLQA^_Rs`Ue5Q57e(RCa':871bFe,JIlJ,mM=DNVPEanL27^'-kC&Y;^52D&hLt]G]P'NM@1`O%k@>'Scra[U/2X%&Ha1DEd,lM`_CSA7N(QJM5K!j_>LHAI5jnG^\#078mi(tg(.5\mC[BMm[prUIO5\i.SgRGU(TU5<Lsum`c35$j_6;uc874![5qTO%&9JSg/mM.",5#tC&ZM*1MFbFN84;`S?UUnj"(H6I>5s/!dQkDc/@Zc>q+#LNaNu:D1ra!qLC:>bYAGX&$:gq[&.CMOMk0sCE22QI%*\J.eq^mF/pW8**EJR&ghFA*1$aqQ5)%%2D<L@GJ*3733Y8Rl\Ko;fFOsIo\Z.6a'KL_Rm3$UP+b@0GrL;0u"4;SiN6A6dpW)t6A%,/ZsF@V2FJU^3J-YPSRc"S,2!m#=KL%Ma<-#mX^uid#Z&dMl/@HEh(P007j3ihShOk<5DN*'_jQigEO6+eIApb#g[;Ljr^NdiZ?N%n=L/k2SL,+QVNG5%i465B'nWKo.8Pf.Chd\g)W0sQJHUP-u%/QP3!eP[PBu^(j1QF6VlBoLbZ&((KZjqj+'^\)(_e9)cSHX-7$I2%1L9es(1Ht2lSNQY/?8X]*+AR[(6)<R'diSV]4%[QHW"b^(m^W)%>qC=;V-J`!dIe!,OD4`-2mD(Ph4qWq,SPgim'k8loJ>>Ug*)]%$c)r6NNg<(Z6)C*pp+=lma(c)as-3+Sb'76!.^&spr7aEb]TpCMbd.J@L&#FhRn=7o`NM.l1r^'D@@N4R/)"U?QBXCVgf8j'Ctd)%d*^[H7ht,lRUgn?_b)Sl8s8AZXa_r\[g)/>7s%rRl?Q<A*NPt2MR^ZgMLM\T3`b:Z)i74.X2"hp>`DlXc;4?1AoAO$P+2V%8(IoF%b)6P'Lef9$]naG8BFBA<Qd<:Xn@EP%-mH,9<'nm4NCV!@jae.H>l+nVT+$Vr:hq3MP&c3@N!ohM>>j*Pb+\$1H!hX-T?"*'<bZ$K%d<#C$W=t;ho@(-X^6X;anfBBOcHkJ"?]0!\BKEn1\tI92UIWf/4TP##UGu:2S[0L&)ETe-bt-6(6[Gk)N2@!$jG?@Tod^@!MY@kX%psF24-U9]9,bsW%lt2jqmP1L$r*nmlmp8MEVA#<7A*H<i7Ri94o8BH'SEDAB1nEOgHL1S:7+:tNdeVKf)CM!!0:'nGaHMLYo/f0C%0kYOSFFK[O=&U#%Ra,h"qW;OUd<'rNj[>m.r8ME[LY+k_E#=B?*DI=SZ,oG`q8LdE4BE2UVXpQ5Te=ZEU?R896VTJ-DEuFeKVI`/%@_]S,lhJkLI^+!CG=c:7e+oPr>D&J71gLgL+$Z4>%iF<NqdcGcr*nmpk9(+.8o[FKe0VYC7bfXHQ2AjJenkET%%4[Ucq8np)t>'g%:13!YH$VI;@^p`,IL=Cdm:,:*FeSL'#1]c4$E&0a-+VpL7YB/t`PRN7!VIu34!0U`'EaYSX<93pI0a0U/85)=a+d^G+:TH<8M1JT%Mi(3RK9imJh*pBY,0P(47&sUs7>*s,KC17b\\U`fF!j:*YgD4Q._3%4?'IAp6/[f1jt<`=Q<i]lFCu"4F#W7YjG7C8#/*eZL$lqi%;q`P(N;Wrq:mjD[8eV6O'ZMPBa(/b+Tt@]\AaUc)L"l4q%7WU;V.8CrW_qb,eFdl=6L_%KEg$oe^.S-kh\4qA\!@AHX"Zpa?)3gB%iGYjWb\KSAi=FX=gj@(#8d+MWH"'#ACm:m*4hkWb6TlW7FFFWSN)j@;;ERhLES`F7m5e:ua4-c;[S[/JL'RENh=.VsO1m":)@?\<%e8)"Xmte0@_S\L9Nrtt27u_miN>:5Am<pb8_RRI?N8f1=,BCt`j.qH;NF/6p<0ZZY&RKY>:t\Cp11FX.WaG1"SP:dg+:L.fhBWk6%_o%a.@V2@HaAW+-"Qo$?&ueWd?q?"V112SDMTK<U_ntP6q"7t35_]Xi:[RA..3RIOm!6sY)u!a&9$9])@+b8^I`<;:C6:IDn]6iR%,6]iI?Zhr9ic:BE14^tWA=VjUI,O<#1/;1rXV'Hj'&@S2$FIR'^>YXWGumigpW1>C=HJ>L(fK=1M"o+I.bsj>^."cd@4L&lV2\!J%E&TcIE=s#S=D[Z_j+PGd%94iqA6[bd.5.%sa/X(pSE2;2"m\\omRGH9NmUWM&X$W4ia\==$*<6nD\EM[]aV9JLT:#ppG69-.W=BX%AcdOk0T*o?29MC=3mKFV[D-XMN\c,l/W:=2(N-bXFtAsrHkCdO/A+r=(uP>FmO(A8$h\;SU5(JJYMKI!=s"<oj<MX0OqAd^70m@K%CjXK>oMPZK=K'mo)ociHCl]FOj9m\P13Ot6j@*Yd]/"nV>t#33MFCh#=ASt`9&El2<!l^Y)/kJ7pM%XOMP4-$DfXq\Y<C5/4Z=V'%`jcee^;:u:c3S@I#0")u?Yp4@RS(eF"bUs8Mp+Z@@BMbs2o_n_(F_oj$l,5E!@uTX>OKnI/9"IMLiIPOG'p:$hsl+^_Gi`.;i36p%/^#D1&&\6=j6=V9ZhVDjVLa4;Z.Qe(7pX8CI@3duX>[i3`Gt>ZM4?nY@BibQi8S\NURWUHdp;*RI^[oB"e?2bV10b_B2?609ACPV%(0Y_G+ZT$gWYCCZc_NrJkCr=BlLJF]m,(1OUg%h%Gg`^rp9ihhnqQ,Jr#!,ZT[:'-Ge!\AL0-kU6dnS$806m&>X.rl_]o.ffXP1"%"U3ig8,`O6h^+U'o>^dcD[-Fc)Dd5Rgr4?]UfGa:<5-ubQBhS"D0Oi\B*'H?hp!#$6/Voa)7J.f3R=ZKBkGHYj=_R+fm=1s7m&'L%o5LQBA]3iNeTcarmG?liE"gAJ\PMVRU^Oq4-U"1[b^;H6nWA!dM?Y,=ok<dJo5M"]G</2.Zdt46L4Z1M=DG8%.V;PYHk!.oZhg1+%o(E3A2FW$t'r^BN3m>uVn,q.54@oON,OY`Ai0TP!E1.mDg,*hLg2Kig63=q<#=YHuJPXJR^nHL/gOgYe;9L&kQII!d"cLM5"n[m&%nJ<9r);BlJHE``\8:'g=drLr2kPfC0q_Eh0V]/rc2'F(5FkRf714g%F*7_S7U%Zr&H0flnS&8KDVBa`p"1Au0b@VUkfQFb_U0l)D%,IMo#MK66hYbGHrBA(H[UI>1nRtT?_<WZYQ`et:JC#Mn`8h7sn'=B*p*AcHB/$@koR1?s5Nl5A+doX3hfuTG`S\^>Y+%,IJ?d0&C%#cROnq1m3WjS#Q(p-0[Eh=>)^nFQ6ANGcoE=6Y^/,=6Y<lh+;='M(^^Ogi2k0+8R2jeoc%lW:[1Yp%MOh=]SHTb]p5G;%+Xmt3t.%#6t=U%Z]G-*6Qq?0"f/D6:MLI**DjUD^aKKm]ApiZLKoA`J;$<%]D$=b[B&=ot-!7fUu?<Tcc8Ok&Qi3@:la#%9<kt&KBa.$QUeN%QlWl7SjP0+6ifc:!K<UM,A;l]0n?OI3)P2Nple4(!d(2&E"&C8"nj+6!/'V<YNM:n-&iZDkf/eD(r07j.pDiSJU\AA<-V;D3GK8$%$UI*g!.A_FaAIIb@fZBNlp@HIfkUA-'jd,ci7RLh5?sH!#EoB\D2hGXYMZY\'1M_K]l9/daqm]=K%$)Uq7,#MB8c>7Hf6;OPV5".%A<KCW]NNMZ9Mn!gI,eY#!^h'B\se2\TuO(t2^gW7AEs"c/2pOA?,%P(6]G4"0>+=B..<DulM?3]Km`RS&aK5gD.jQmU"jeh_VJds%nWcJkoa>nRm'8_COl$YY(&"<#I_f0ULTB`"O[uW0?Rq"r>S@H4nu:n56N'O6\phQn/Oul-kJ^5@<PPd'%)^Tf)tAXIOELMR:+/=$%/_gn[r?>\@fQI/0"eAj>)niC]e>TbElM<M"k'g>/I/WsfeFadR(%cHfr;n$6Z)W8:W5ghV!&n@M^+i:6g@b6\V81HXIdS/UdHgZ%%/]fkL8/@YflM?3=C&r7TLT]qZ?I^]<-)6$6r>%c$qKZrk8$;0e(g>Inh[^AApCL<UDs4.,8]<gu<W0dWbNO*I`hr]*FoB2-!*5/!%r4%Mc=B3+Elg[]BN`Brg\pg5J4GL?"8fGCGT3pB+j)l/OJ#p51rYt#gaQrDU>M!e4<8+.h0Y",i0HV7:Y2?J;ph4gKqHd"1Wqq]X%O"Xs^c%5Q_`m*kdlL@TGY$\^=99_*gWdT+t^C`6dN)8+Zgn8h3R*k6rM0nZolIT[^7Wh:LlM?483O&n@oa?ht73%db?,,kWgnF$'%NU4p\eDhLYY+KKo^*qdqhd$!,oc"_V:X3MQFoB0akKqt:na$%*>XZKL6Sf_l)=nPIeW38+$.SVU2quH$b6c\k$THg3SAbWrqQ5HP%oc)bjoWRQsA6/udi>no#?gs6*qMpeW5+5pt;UmE_<]#,.^[Ua5=MI*=WNKTQ5cgSA2G.8iJ9,.!r<@T_UXf#F%u;5qLC($I(OipA%QQ9bX\piU<rBfCG%T1h2*$\q/_"%]Jp89#c6JHj+<&Z+.?8!`eM.oTQEUDV;\T[onh@'"qgjt@ucR[tKkeh^=e6QUG.\$BkQni7X%JeU:p\sG;QW9HRs@uFg_gNGaoTBhaq$^YjH4)M5TO0rH/]rDdtcL7s#nO1:Eiq#f@-,._g4cV$cV[&.'oq__]bA)B6nU0e8?7Pti%WD^\bDb-/1?<PuSpJ.N4ZZ%G^hql":#7I*(FLjT<9;dj:"mPsZo;csfhtW9cp>mC\U:!'5?*6DYV#/'54mB\M]ojF\1(EJ^i<2:h%:FcsTG5G?Q^>7JT2qjhbgePJje@k7nZjL_SF[+bnOe(scUGZOFIW/Ua-t]bG?TX^e\2dc_D7"AL3CS;m2?.d0Pb1.oIE=%3<K?4n%N`Tu8U0WgUs-V]Hh3BeYrnMEOP/Rc_]k-3jchgu,nFPRkW;Abh01M;*53l6sZ*#+Z8jHiC8M,XdIq9q4j9mL?%bU9@oQ60W%c?O1%nr!^eQ.FQ_b1U>pg6u^s[6+3-<t\)>8#0n!Zc1I"L/aq<VD3qho']hqF4X[:[Mb.C:8u/TT=*48i+f%0"S9(i>;#fl%h]9EPoeMr%]V=LDdg)4@nRSLXN?PaBps1^]e3&V$EcV`s[Pb.oH&%)1/R2OId/)ng2+4RYOXI'7q;'ipD!kS84tN#JM-_L=]s@h7kP&9D0m1)5%1juL$`\EAk"q9ptR1-Knf(?QaI`sM^XDcG>4B^Q:@L^(5H@rH'cLq=!qZVhI`fFj-Z'`eqa/hElDR"S/[>h5t;qE[+L#Q`&-VM!-%/SQm0?@#<mQXU:#e^B'@Q!Ac?>2`h)Un'/(]^;om0.L,`Mu2AK#6/.>EkW[FgTt]JV/WUe1,j.+=EIpucFd0!3+!5F)VXn+<%d7?%%OK='\#@SUhd-#%Xq8A0bQ@:!Y/Q,T.P>2.2#LiAi8[ReF-@XS?%TN`/EoLDfYGN@#s#F&s1I@3.tnD3Y+ISWjSV9P9[.0J`%7-n%f/r%E@@!Y#bU1"eb`Z,Y6=.nif,dh.`=J_a=K(CqncD/3_3f<mYP%1c4(6d*gt9O<j\^\>cR!4+j*Z!K\9U9Ir)ESJpKF&!RuL'-%=\@XriIPHYlK.;P@sL;q#"1OOD+&^`&aal$6(0:Nq6Su*HBL^)V(nVj7K9A_?Y%5b!<1FNqH)WFh+"]b#,GGU_7pm-/&jo&e$KV,%&MFma\+/q3ZdLoTlV2eQEQq$u@Yo].g4%j?4%nq&L5i$:CM)huG4pfC/EJf0gC$62Q*U3Wa8,\AJ%Ba+W8<]0On2lTotL?,I/gG=%[l2ft(EHu1\'bW/nl;.YfN;;.&uE`Ul4-j7e#=&=%P5?QX&PoH\'9o)qb#D+=h6XG^SFpdRqK@H70YY;knQGCRFb':\M1^BpomgP%A<rRK#^D]n^(WZ&Qi5LoS_s2(`UW>`Z!,gc.i=,/?J9[-4>))cXt<)Z%HJfnDD3&On3k&MH1/=NHp'Gq0-4YB(Fr;'a.))cHRE]L%Ej<"C\f*5NgqNDgaih$;G-`jDQMt#Hlopq#ho6;kcg6D!H.pHe't2Fd:B^65TT)YjIW,Gj4J+4me?s<C=Ym3R]8Q9[`O5#)i-`P(%`;9EnH7n$'?I)I?;X3'Q(qZOX^66Uu8i_Aplka.T<EVkp/XmQEl%@.-6,Mo>M;Gr8F<S5Uot*A:[<d2KX].4PQTe"L+#c]ZV_@X)%f[]p`V&ZK+";!(H?gkaHIeUQTjd3.mCTr9+WOM_f[l(g*0%V2ElJ.qgVcJ7\+F*$%@L88eV>+jU^L@SJFo5u5T)NFEiYUo/Vd;Z>%?#@UuIV.=4R3?Tl#j<NM#mUpZ2\0[3S<)>K7h>cdoOH[f/s.=,ouhB@TH)[e=XK)h\UZA+]7j*W.:mB5V4>8gY*>1R'StK]VSPT7%0oNX+'pEiGHR\+'cmq,+cagb7Te:]9>i=BJ:';C\R)t6V"!e]Er(.G@YIA&aEdE3I+9(\>a;X14qeE:@]@)p+@LF7YedM087RbVH%mX/u^p+&QAL[)][qpS]R5MQVP.m2\kA;Y"=/*YZHEqQCh@rtqa`uFDPA\M-r^GqS@en2?gdar+j>+M3Rkq-Q(<D)M^H$m9W2K"KJ%]@,I4Snp$o<0'X5^OJLW2p-3,L#b;Qf_.us@7pCfhE#T2r'=)j_`t<3$hZ(tc++-p;a*.0+,BJZ/8b4[XRINCSJ8f&e[V5@jiX8h%FXg^,fK._LrhMB!]T@IWTM_OY-OQU1YP@*OEW`_n$77@X`K)I`A5\R1oVZ'dZr/?m;[\;$4Hn*9Zn%!+33$*(RqEgEZ](_c/(90?%nn3%8#Go,i3c)H+>/eD974Im>ChBLa9)qIhqMegkXc9/tXie6D`/dKu#j^uS\6422eIN&a`Gl^/\3T2>.W6DWar<R7\]rRJpLgC%%WlkQ3(=':E`PU5Sj0"V(kCN4Xf<"Z^n?MbDq6PLT?`mGmZfR\.)7BC4qs8-ih,TD/r-lAeoN<_f2B+;r)DPlF+,OT5:sS1s6le`W%q^h-;WWkJfQ,W@V2H_nV(g,Y*YjP]oi!d551c'lLY!$Wn<j26)?O*Vfj9qd:^!3nFhoX<lXg&7Na_;;_Pq8J%9$QLLH^,M'_kW3<%^e4PSQLO:UAfRk@Vs3MMEjU'0l_V(G)6NDA<8GI?o=qM(!M1:Gfq(3,>ujQNL[0Lq,IWuL\NdAWTM">-EFEAQmc1R:4aCcYhc:]B%Q,iOjbi[m]b!*l_D79([gc8O6Hq</!]kF6<8NAuZ<f0U=V3mcdhA7Kr-Qehul;&)G6iG7Ks0>/aX\r7t^PUG@Lts_#h;93Z2U2-b%)<>XmcrTFJ>g.-Qd*=0'm$iWrTFdL&V;8&p*.5#;&#*kjiN*d?Krt%\k?A.uZO:MjAZcIe?N"[s\(fMED[g=3]BjsVh&d<f)P2k&%F$<ei0"oN;AsUqUko&.;bN&(o),'b`V7P??Q_KXJ"KV`^NC%Y%[>g*XeXaimpFKX"1(HOcNt1pDF*J)]S\tZW.[Gm@Lh!2gfO!-f%eF-"MGGSSOgs7$$Y.+b=hS\PeM93!ujh9?q?"n(ioaCJfrcf9./.n/tYFRm1PQQ2%psB,&9n\:T+!$mNLchL5k`1nE[CkODFC6C(%5.n.]/s_<4GbZ?$j,hc+h4e`LUq'>SeBP\qPsq\Ei*9jh\M9"rXJD(6$eN-Odk,9DoB#aKV6mt8mr#"lk>J9\rOCY<2P,A7]UcHr%!QWpgc\HiFq-b&Q3]c';[C`c!VdIS\`L>3+.b<t.C[ljtAp_)_^6UB^[J#;s1fq1>^9)7s(-f1H`rE5Jr#+m2BKdIcK#QIP@jO_1%I:]I.n-p:PHm*h].D:@-A`J4!N[t\Lo@6:Dm[nR?*_>iY`Z@%S$9jsaXlhf@9X=`ShaMVR.8Od@R8/%toB'QSm,G<6\jG.b)ct@B%SX%DtV7F+M]Jer%7GunT+5*+#PM,*VLU4>&=+9R6SH)BYpi,E:3T+01Ajir>Qn8J6>iE]f&#t(D0,'JYkXLrc1c"m<+)_6Tp>KnQ%hB-^(+U$8mqB*ooauLfDs2>TaA;YqB6eucl9JLL%Z,C2K]g#0^@e*Vp0p$=HAMGp:(s!?;D`KPL(q;H]r-s[_4"N+PQlo<9A/U'l%:XgHZ@u5Gs1bkjEa:eM=H[gF<fY]YpUZc<Ikc7/a?,7(Rc-;Hlo3NT(D]a7r=,8g(lgNuarR$0".]]fTs/Zo"3M#t75$I&q:PgC+%oU^F;$Ld6Y7]sA;\%/W]gRtj<:((WE)`ta/bO((]LZP$(`nFJlip%#bge&Nr:?r#<R+#8rXki^Yi2^9J-iZ\U/;cNg:Z?s?qm5KT%er$c][5gLPo%-@k-hdb]Sm7>:?C7&1af.%[iBF"'#Ma>:_gOr0NNWV^EURmlGG%0GOC/uACU$8eT:67UM^=+UZ/O)ljF[(J@Wt#:%D&;@7Bj]cE*pC]EZ!\s&J'^CaVn7G1,CYdp=+@6/X@/#U5L(k\lr=S?JsSV4W!u/Sda<jV),'m9[fo(==CT?EOoI:5BmB5ocKE!+%@@GV4=Gl;>8D]r[?QXOd(JD8]-jo8HMJDER*8edX5[ideaoD`-bX-%kb?J%D!dP&XDKfKEQZ'[s9QO.9pC>.."^s@Bq!OmF%U6dt%(ROauHgu?,))&0(j/Jrc4F9Eipo;b8mYFs!+SUZ%g`DU8`=e@u%=dc^C\Fq(k2MS*S3S$cLd`E"26`4\/c(<?%IKKR=S1SG4F0Od%@JiKk8>Ms0S!gOH5k=>P;AW8_$lmT)9LC>IeqdTl;&dqZ^I9.i9Z%&4W&<=R<pNE!6S\'pp)_5M"T!2,8LoAlK/\X<Sj5A-`#lZ6%nb=[Vc>fhJZItL9:ab\mNTK!"PJQGFcSt@W!66F,K0LgP,2>Kkhc_Sig"[\&)Y_%.q[P1t/(n7KIYS]AeN+cH5BJ>@=<d7qLmK=G%..!U4r7O^TYPf*ejSBt2)$r*V2nt-Z*l5PfdHbbg'%,R.(fLi"83g4%9bJgaE6(PWo,,5amq7`4rA'g5o&&rjeg#O^H#4N!*q'&X%G;4qu(DBXsW07$bl%b*JYl\:2NktdO3kAF&6j>X#dF!d"M7[pog(Sh,qM/A.BT)g<X2Wa6aSe>8[5`OIp+l@=a.M&RrG_[F03%rk%F!5<&%Q!'*0YaaCfc'mh6&'ST'-f]PQ_i^/DZ:a7i5>H\pVIMd09K]baY:*6pWH_Gf<$_Za]H*CDkl<67H<YgS#V<B9;hR:RLjG)%C:D[^FSlHA8fM<_o2:RdCp?YB*87[9+!q^(D%\3ki'!\`I`?;)UJ]-o1B7mI?hlN28N`AcWCj?R$]-))#O,etqdXe\-Ij_$rAcJq%+;TN#`nM6%(\-99de_LDJHpXg?,>b1@:NnXDJ+5M]+R6>6`Wl-G83aZ6XunZb)R>Wb6f;t.q61]k8Y_peYIU0rk"%-bL<r$@H`U<%Ys76Q&9m6V/Vi04@(Q21pgN<Kpu62^ZHKk\s(R>VTrW[ghOj/;OKSR%[.-_'(BS/^knC):S+djZ;!ll<2O7P@)a[^]G9/EA*05tP%"u024fj[<nFec1=%79Gg]WPX,>SPYLOX(Wh=_GEn6!Ut/EkbaX5[n:q[:qee9L[YJg98r0oU9HXTR2#_>UUJ!Ac5RF@-9/5FV!uX%,?&X:8J`EEkNnpAaGeN7&[H,qh'fm%ehNUWC?;[9%rg;g5`ZDjc6YZ`4h!!ik0Qld8cC'"QY:@jrC`9rGAESZ@XA^eb1^\m]1mml%:4K'E2q]Nl5U7eH^$3]L7<Z2&=G]8a$_,W,G40-F+dk=2(WkjnP<1`XD%"(>Z`ZYjI^9JtWI&_7`>Mlar]ZHbQ,bk04d`gXq6F])%XnqiH0c_3)!^t>1OP1rV,A1tfSc4%4dYP`8faLHl7TP^FY2@e67"S,cE/:LUi>9\oV=\:GES'4@bM`IK'Ue*aE?Kb8+FrCYXZge;%/BJA-;T5-W#El'O!!1Xq!^Z^gJaac`6$Y[A5eo$j6kI.K6kGINTH"(;PC7sX?2<R^6+sDDGm=U3F.Y-8942ob#QjQ`<<,A:_>^K[%1KUG=BG[giUZ'$YO!Ag$mXP;==06O*B*7*B":q`$"c)*.+"@F(?um/9i@rssY)3\f"!G9F)1lCg&#"euH6@?"mXE12`a_)X!(rNM%6]g*%,B&4!cF(4EW8%+:74Jg?dC7[m6e(-.L'Zg7(DN\o`($KhU[)Mkp;$H*rt'CVnMnb?UVNTP`.gF7UZ])c)T2Z028EPpL8]5!%T#SXKY_Mi1:X_2:8(WAk*+I=)n^SR".p_sYf8c<i_2np;H0o<0_"G1X/Z%ielPHhhopq((f>;:!b5Jb!Q1=NW"9c8Uj-XIVf?[rI%Sa0H@#fi[6l1N))";08DK4EM??5+9#)i^EoPW"OjhF;hpY2dO,le_8Y'Rqnp1KYhOSNCJ?q#&+OWAqifo;Gp7QH7C[T0\PUY_J2=%XoiGN,]X_IT"d>H?j'*_k=0YX`qB6cJEm>2j;,pO#>1_5Zs1&A4<?@]=ZXB^DAJ2<I"ensT\7pJ^DoDq1Xt5uiCeXuU!$-d/nfKJ%E/!a5ITlVn2fM=\^GY&ng,r]o3\A*GHQSN,eBSiQ3Hldo&4P)?&kIo*aGXEf4=HTK%m1$O6,UuGpIK=@P,qBE:Vc/Y=dHFUVN8E.%ZWs<^,jLk[?'a\Mcd)-sjJ;E/QVOh;W4GR+raGJ]SJFfN7m8DVX4oPUf>iACak?Lf,U':,HN)re06AinIURB"p(rYH(]0+Dp(nT+%IGq43ZY"]P'>J2qhsE(-iJXhT&"4<L(<!ZQjKkDk0290r2i?[sGO<r[.SG_+H$a^%,&%VMm7]sf04^M#E-qNd59>_m5JJiqA<1H9%?28'_>[eO@1*"_!JM3Ek1i87o`;#L&eoq[Aa)'Cpj)Zt,r%kZ76W1pUNSI:UPea8WL:5`;`gKdtX`#cFYDH'E*GkFt@Ir^ED',s9%:Ru#PjR>]DEM#iA"XUQ^=`MFf+,*^)oH37@J(5U<TQcH/CKpNlq=i._hX"nNk4K"dOe9`j5$0NcnF_FV&II?##hpo4Rl4_\dVOn8%l+!+uO#`6[QSA.)I1$";Gs]\IP"N';J#VcfA$]H4^?'\\/*]ucprCgRo&KW9:S?TkMJ">#W"nUTeh^oh]u?%n)pO^i\Ir7OH=.hA%^K+Jm75>TP*kQ!oPK/uu&mP)c``P+)+./o^AJ8m`noSlb]%M>25#k5ON=q<Vp*O-qQIb4Q?g;t-o='i4mHhW,j6>Ve"WL%MqK?_)%_<M!fIXde&p&-HP?q`AW/E\sQb6P6Lhd69rlA;jBNMXPR9DQOtX__`Dld5Suh2;[eM^Cq!j;2]EQkQK<fP&[)N`J52k>mLZnk%Rm%mpE\o2!L$RG-ehE#&pVqc'(WagA_(bA%BuHF<uH3J&-]5Ioa#CCY.\2k&tA.E3HTP3*>U>'b'\.P.0M3UnlLYIn7>^`51KC8GhIZ%>G5@Ra;A9'8"GLB<1g@YlI.DU-YIYpjlak-\JHTJ`Nso8(Qo!uG[i%`Gr<18LT5XqX,M&%X-K;oP33U"of,OafpFY!2sYfTJ%tO>%r^Fk\Uc8'ae+O0Rgu4L>Y$TSLalU.Z,Y9o=;>df?F$\uh58hc3[A:_*D=0M^r>i<'[71"\U)ou:q&f/>rjcoY.@6[aLu6[gY&D9q%RZsruH'Y^M``4rj:\ll\Zq0b@WjBn1?,$H(lMAK'4X#;/9e;i_4bm06cn<nnP`S\2$D',fjl&khA)&nh/nZWr?Sa@DMbd]LY=dd9%I,.@@c;LA0aT)E<mJW+R!kuD`9QdhdC8OPEEO*3]e2dOW07I0".'Lo2l5Oj\HZ"(aeG@lMhj/$Kh0m)NKpbiA=uJ=cMV;W-:DkaQ%=4PEO$M7CdSiki-OOf]h9X?3jWjPa.c>#q?P@n(W<0iq6WK^;a7uX6%s6j,B03`bR0T<!D//qa2R`_2nlF$=oqt'cm0pRbNa)[Y2%Z@(MRD-#Aug0*h#h,<j@pK_QVVj=3#S#=5rS\/:/]ej)3;sZEZ'HD2Dn&_*7@OVkT=.&RSd[RZ;Kobc(V)RXbXfo$\]"Nts.8FR%%ig"cRf8UM@Isc_'MpuQjZ+"h4H;Q,_OU`(Wl[Et=K]cMt`qKpf`'U%9Gg]E]5.@us]U<[9g>1Df3c"QYQ-4!?H)"Z0gNPSSl)&KL%<a"6`I3BHjcH]*V"@OXLJGS&g,m#8)#iOFY(aT5-'F8+%G+90G&IJYkDE;ZlJ-Z;[W!5@bM1>j8!po2oUR)7B:`t;51/u!]4uPO-%2?7cr;+HRO('$%6[))f1Pm)si7P"s%<*=`R@`6+`6^7ftq(bDg$ntX`!5)5PWA)+aAH?2)d0]sa<>GT+b)K@;?u_R>!3sIuK`QoX%$c"QU%UBoZW3QCG`C;?d0N;0T]1U>PK`QoX$P48b0YgLr!CS@p<+1<NaoYtZP`Z:T$rn'n=MLUF"pc[dJD/_kma7GUH;!k$2[ncq%F)gl[r6!n%]Zg&`&(nL9DFg&PfsBgd?nh1^oFA*S$m"=Vi>nZeI.S*O4s1nR^#jO3ILcjolQc0$!52P*%\`=G3^]Fc+h1"@;cKLf%6fi;o8UVCKUo's#p$aRWrM<V#ok,G6@'*ebMl9&-[[;Gb5oqHipWP86l-8nA_T(\(28]#LWON'(]AO.k]=Y5<rsH?O:I_k)N[;R1%Y-ZCCmKfGM-34/2r4T!;<<*)G;8IdUjW#E$C;,AeHW$,oJtUUR[6\aZJtR=783l*XM?P,u,61$c3)1e<#cd3G/eBRZ?0&o[X0'RW%S`-2\`.S2+BZ*JP4QDg,hF4&,&G.S)dLZI47XIYa%)=@ZUARTB3!:6%+1)1!K6V_Z49R+A4iSC2`>omD7iDG?>UGuBg$N)7&4=3I%nI0rB0fR\<T_YNg)+t,'-P8!:;R[0R-QT;,$A]o9+_'PH*%!,oV)Ulmdn#?u#m1HU(@Qmai>oeOb2C`N?i"O,!>Z=)G>:^A01S=.%U`WW8Ld`A:i8l(Xp/?^=_^$88PdX5_c[:Q7L3oqbK7$SYXC,u@qVKs[)NKO<.Q%q'F5@)3L'YT"W-FnSE/YoqNFU?b4uGIcoAWkE%`3GH5iS^)Uk9N)IqDNqECqpql*(r`YII[-]h(]j8krcK-YRnnOg_)UM&do1U%_i2tOV`c3I=>rCZ*GGr`&CnO:J<or)1cdQ"rLVi%'=5FH]9X[R<bZbt@Bm,"8hVgKQKGmhFn:8)MWEGL`\jkocYoC30!7h81S5%g[;@*i5;:g\"uA*kTEBI$Sj#iEM/g)3?$\U]A[=I4%Ed-GH$<#=d00+^/hmKT0,ccJD>`f;@d_f7@5#_`%,bmJ>^S],<'".J]^rP>ER=TiO9s9GarB2r4$C-8:Xek54W(q3&$,<jg/sTI5%Ic06UL46f(eEEA'F`q?XM;:'QCcJp"i\Jt\j2q:0_;uV3(DHM=ra&e+c+.Xtl0i3&0A]dfln?:)$Q^giB&Q,khL;Zt973qIooQSb%V13'p03V"ndJ_8^`W)+bL&\TdO0?0F;<pr*IRmFT93a\fUn+)]12?-q)&ifnQ2.iK2R[2M_Z?NgiuC_1,p9s=+-M\$fU&(3R<t5M%Mn+Jh0=6\`\=[,")+ukqc<LZAl_fS[g.FME/5$ecik5\ID16fJr%NPaj\Mh1!633%4uTYX-"/nr2q&r7*+B4am9KOBpVKMqp>G'i%cLCT)<jB=p:C_\"WSZs-rJi!P4ttVq`LDq3/:1T?ZQo)<Q_g$9G2Z?!T.B93hX(E=DP`l'5*EZsY=XB&>dnU;nabRj[[/W>(OmH9%'0uGOL@%/g>5Bcc]B",3ef$H:Gl5Z;:3(4Emdk2"P2+ftW#&4^I\&&S2l6?3GNJ\%Y^PC'@;c0/'d^3$0.Y#N4aCOK4dcjg<1olY%X&;(IrG8K@ZR>^3B_jRD[8;A?Fc.>2nn;O4og&JAkWmZk[En!AhmZ]RUsK'f=fQVq[8G;fq8\1)`,hdIMBBOSp-sDkTj)hY[^5UG%K=sk86,<$->oW)O(&aa4]M#lfdG2Sf?EtV.\0nUj=h*?1*2#Olh!L*X.DC9GHI/jB?@Gb8Re(E,HR>dq/0Dr%cbdsC?7-O^Mtp>K%;EhV3F'7aZa`1Z8E_ENar=o"/k12!ioC[Fo/b-Oc(a13Ps&Y>+[ha,1q`%q3rVhgqRVu5Z\l,O)\FQTQmfNN>J(O5Y@^Y,Yjkk3n%]<T;HoC"`sh,r[_q0*i'`Q\4/b.m7eG6*m4qfi)/>&5';m`=s/\a_/`(l0INcuN=Up94VSNrE.Z]mhs6X+/aT0mSZU^BFQi:FT5>%25TLtrf8n4A)mQ0/:$a<q!<+WJ#B1;@E4G>c$$Sgq9o4X2QH/ZVj=ROl<sX>V_ke<-$3Ib9#>VE8*CH?V=:%m,:r@>-;A?oJ$8hd%le2<Qd"@WO=O)7e@`s<DJ&@%Ipu=:irG,#kV@KJ@n"m!br:NW4UZAbEC`$(g"4TV:QD_Hjc-4>1A3l]RPr/l^</doAf+_oGZBhT5%d%Y/Q6dhXHa;P\-pEbQ28mYMf[XDi<ZAPNJjHla?_k;ko]jqj]'PL@K7EMQM4qB5C2NMX(Z/g;`PU%)==0n?0P-JOBCDeJke#]W^%C9T<ncfTBF5t3Zh%oX])VMTq?7TR[LHoRFXeI5_0D2O"IQdr12)lD8^AFk)O"b.n4/Qf[<97l'#H.!lU.^W;3[%urhq5gZl=;kIt%U>[H;QFqq-iHGX^1TXj0i")>RassEeP;ZPuaHdR.:oE,Kh9a50/V@jN:+d&J7TpM]Sh=SKK`;GU?!b^lqK+<Y2cQ&[:pT:N>L5cA%FBk>EAp)'jg!A0\JShVT?))Ad'Fbgc8m0Ee(^sq\+YAF\l?(']*[cLcdt#p(a!U#GC8B)u5D0eFZLEWi<]:an!$8M7MJb,@9<';%%2FG[:*?2:UIqQiYF)[e87)igjpcC`3*HBWo"d%!0i^!=@@E=1M\pW(,A[X!%OV_41b7k_P\>\PDmG[NXXJ$b/E%((:-((^X@&<2[%Pg]^'bc=cNCk2[G%CU;7`&a!Q!cXi#=\<"?[fOcWM#Pb5C1MQkKRnKi;c\"OGYOH2n[\b91C4sM15p-JEg@-!P,4Vt!>,X;_GCRc%BY[0EGfc1L6M-GB;/kVSR@kt:=eljAO`"(BT]rhIA`9AV7C=\kBq[c?9Z,?&0_1NF+<YCO4e%ki,f4'lI$+W].R6R/?75')'Kd%/%!bR-3#n0;SA-,UCFpC!%TO>pJKf`=d#tTk@!%U^[5uh;o1*2,Z"Jk%M.L^&?3e=MOO<m/UX<Q?%VL?kqjJ!==V!FI@I]!e%f&:`B%89W@S.iM*U"-k@!cA")28LA7K2([I>E^2T%POJgT"d%=i2>0,_#&Fgt(C)lI3pM58A1&#:Ul-L8(^Mr)D5q'e!bu5'@@@8J5R[3b%>XY;1a:+2qE6"E8(Op)7i^EX\hZ:i7MF`pL/6Qs)V$=uBR[S"U9nE9(21[0L7FpZ,/KM)!IV-]jm%R'b,;9dF;FO&%;/W5PGZI)d%Z:s4$kB3?&(jVnpJ@Pm4NN=,`8@+]!,JT!L=C%MS/]-gQ4BWA3\cmT)'^-lmV\;J>/'(8T`A!FD!0ZS-$:8Qk#a3#]<.k3G=*0EW%F]kHPkX`Ma2,uL>ki=iYS4Nt@0^RU^&\s+A5&%>S>VM$Rfq^;,Ou!8]U`k+BQcqcUjn#3WKDgA:Yls<(Y?[0OLn%!P68'@&Cl5OK%-9Z?4/PFD%G#"j#NN]d0=$cIL7'=?J8=r<mFep.+M_1HomZYJNdNtn_kXZ3@65pu/NcaWpj?YO6L-TF'dOG6UO?N(e9d9KOcrpNK%Z]Asl79CkCiJPV#W^3Fm<g@4E+>!r^HobZ+@9J6u=Wg:E>G)?P\-9Y[3\LbEaq&SnW\boV&`5IOH.J:Dagoh8NVj8H-R'V?ka#i/%hao6>S`sN)M(gC2SV`Q_%@dmTfiT1EgnKU8[lFM@NGXS46mG,Zo-32q/2_MUfp0I"&CEAkFN>81eu:dmS,qcn;[#i/c9T^1-L(Z:%-q[PNhZ431.Ai$lTTX%\@P9u/;cYGX,Tn;2cNs+CWQBEY(Oh,Z_2p4!nGn(R6T88/a$A4m<!LWm?k&c2(]q'\bd.?8?n;D,d0GRA%_Z:CID@rVK:iPS0\*Z(],aO9[!ejf$`!F4P-Xn"UMBt*l#Rdt#l*q=X%V/2A8\5/'1CTHk12k<fHoI,p!/J_[9p(0]OcjeJ/HiJ;%Ep7[d[K6k,7_[B]\JLa628V1]Of%Lm:=;l>UM)n!cs(USTYZ^uCtPUt:kiMlCI6>+7mbHcVt?3i@b-q7_eBL<,"#BO8d6oL)lTPo%KFGV\/B`"$:o,<ZNKZ(R:tZ?g#&5pg,MiYN]aP221r'f5"1]=,glM4T'KIiW!1^.qA-q\F7%#<i:;]`K_I'?C;p$&P6%\qBMBlJe%"li=.WPl.hf'j<9&`7/&kQ;Aq,g'UB4A!-cNm087-KR);/B2Se"G%#J@6$.hK*%0:%?\CRcrZK;[K\Q;"Nrff@Y5lq";o2-<>Vp8%;GUgNk6S"[k@Hq^JShE),==p`-nk')=_4V$4U@.Bc5QIG+MI?70FfuPEQFK)"qC]+?n!c`Ps5aKOgQaLYu$S!O/=H9^uGkD^gt-[%#tQ'OgO5t+W(/^Q#+-iXU/m.^J0;<5J:9s-0eK,RZ^*_i8X5gSMY%)uQ'[;_!K'8_:6:S]2>eAJZa%up_bu061>Sp[^^c+O9mi/u%\-r^iK#k6R+M^?d<&+RZ!UG<J*&tlV;3E>V;#?C2Q7-KuMOJb7(AIqW+9!M#IP\/X,)-(NZ4p0.L3$<gh&-?+]l()PfgHr`Ja!IH%U2X.Dj"iA-1]dg`!Hr%"&-V-]\QqJ!a(C8MH4DmAj\6hLFVH;o"05aOku2a=kIjUmj1Si&Wg](eH*7;3Q"A#\mo:':j"]C@IO)QB%7ZgYU&U5t9=L+kqJ\<JTR_X<5hAs=g4tK>==>;Y2RUJ7)(E;pK?IYRN8MU``&t!!:WZ`ifp1Hm>EgggG[@9/2m;_sDJ/W3*Rd/mJ%<gMJhS?2gXR^->n5_D?.cUJW@,3`uU!].f[7"bY-kaM8k0MNh1AZ3EoC5QO.I=UQ$bc7S9T]0OokX.WD9HYL4g$R(*iAX_mZEY0B%6-`[Yefk<4Wo,_=;9FWbNJBFCp7WgB/aQFq&X=@Wa_p)f'"T*>o85%_!"GeffG]pd,.e@6'IJsD9L#g%D"Yk`@G2<FeB0jf&'P.8%<>ALY=A,5nL#'f+!7Qo'FsJJ*&t,/$#j=JR]a1uV=YUq^!#gr9&EG^1'V,HD/=Fj31s&@]nnAK.'H61?rKI^U,`V$Q)X3@ho*0IN%r*7[K_Bl6:3LYh=IM2;VobF\</Q4Eq#5AdlSRDh!BE:^0rK3?M@WNHTBS%>r-<L`I5bL1CW>_Q:#i7!FjT2Yt0ZnN[D3;e7XV-%3%k[B/sWeA&(3nQ*_.Pq.s0dMs7JMnZXJf]S,!n9TgW=V."8jt*J&J2$p/5FWL/E2(CNa!hV2:DO=<gD(c-hosc7j.46-L8L00sQdU%+kJUPF%l-B(.hRT98:H8@h>7U?jmSUI(&Cf^kQf;:sg!)CBR?SnT<bIP4Q1!HaW'F"]RoLQ>3Bo"8iFqR_$iLR(CMWU*qu,D_TNu%5^^RHP<fp5(dp++`<5VTK<TD^`t&0!"I=X+'GEGOoW#]I-&paf&5SbnR;*+?5GS=B)^I:Y#6]_Jkb.XVNh2,$ZZMlOij'b*lW?G;%SX53:qQd%H92o)ZF?j5Z8lp0L2UFlI=XQ+0H(pSY9`Q4k>u=AO:%/DW/hKllFdiI7hbdoYBR#@G<b*)N50P<#+kg$s3[b:qdu4QA%_2eR<-&K1DOPB&.#"bcQ!`GBmkg_^DpI="RJ01c7F"-`9be30Y`K6Hu9;X$lfrf`@km,g5^&O$LOFn/FMaK_I*@6f.#-:p>?34Lk%H)C\ig7jTf]*W_8D!EEcSL2@9Y^q+/pc3%k;e$"UBn12&k'lGeqq+<L9S=L]h[(73hFhf_;je$>Ym<3(L2/)[VAe0-$FLI'Jo^'C%B.AV2'8O>W7U=ki'FtY.,E?KD&bp%<6nn`%!!<maJu0L?!AoA##*].kmJ>%';^FIR6Tj'*QFe\N%.S!E?X01?N&73A"/eOPBK$KM%@(pL/[#[r*L&dCWAa%nX6GjEmD/@RTTu=cOlmF2Od6t)IFUL^cj=OW]Zp->u'5og/h%I+hV")*oMHZlP(_Bb(Khk+WeG0Q*I@>D:%Z77s$+-J@h"lhY@c91TVSdB1uV*"pfL@.'SYtEGPJt*JnR!nE[0gg=qBO]mS(`D(47$WtGbb.6f?P\S&WYa(*\6AqdCir<j31^.1%ASR+D'b+C-iI0'iBc)l>_.g-E$Vh?@7N%4)7SsSGf+tFl)h8WE=`YM>7iM"SgjLHZ)J1D7HC<k#OObgFd6Gcc+rg\QJq<9>R%&n:%#1kAN!s&OIk1P/ZJr.&L5gQ7q[;AkJTGCjZR*J93B=-Zh#)-@l#tO0WqfWWS=E.`*3Vpf#%;IDl!"8)+I8Z*>%o!rsEOZ'eE*J4#%fQ_s;ZqNstLS5GD1t0q``ha\+2:$Z#NkUS;.W`?Skl\"hcO706i!+8hg,%^$=["JU'%e<_%g6#gr(,*hIh#EP&]\GV2(?tGC,dP&%Velo,RiC#6^6_&DS-/Vl]4_a/)EqJH>4TV'6ENj(f3gjFTY7'\U_=])IKg']m,jqJm)SVJ,iUAP/atcm-Up6Q&iArOb3?is_[O/D%(^Mjr[[BBe-7lr3;.7:,J0b;uK)\^>6i]!s(4HAV7+/%;1_JoE_)-:XFUA1Hr2]stV8$G5!)O!C_W7^2(XLGN/**-2%UL<9!.H6W%WUki=U@rTYR\<gbJ`-46l?IRSOEli]6]$mI9E5WSC@"@dlsl6QX/`sdTYV70$8bjY6F$u5=;NcnR2@^Kq1'VZ*S_V(A2n$(Oj4T/%&8%ddN+1eA!8TLG1o\EoA,jX$)S$qiUMg;1NX1.aq"VStnSE>k(Sm6:nZt\]+X\$ELaaS,K8r87rOthlQK"8e2F8N&7l?:-QTcl!%mRf*,pTZ/C<X_^bs'+.Qp?:oafjUL\^;G@D?l-o_RI"gSh8u_RYlb,R!XDK+Z!J<b6r4ZHeJd.I#QFGUq,?+gR5#+9d%)DE&(uH5%X%o5&'ZKj)_opEa+t'&$1_aA:f-=RAqWJ[,S9rm<`j[MiH`6feAU;GrdfZtI[a'Udd.^Dhd[U?l%3KKr$E*L"hg`)k[*%RI_Rs?R%E"/lV@F&tkT#+?CbCelil#N^QqKk2J)IoKd)Ki303eI,;o;7j6!66D9XG?T[\G^9mq0.,mbOE6ChhP_B@68AI^"hCn_gZZ7FbM.6%h67W$q!m+gep!a"^\dtIj'I'p(6SLm9.T_!hM3M%e@hF_p)U9#]<)Y/4`r5iUN#T\3S*VlYhsUQ(9C00PG]<He@rhR]RQ\8FQVC[%oLX1t822^<(^bdl='i:[9e<d0CZadpH(CmO)q=j<m.sf"C7R$]iU>@.O1ZS=V.7>i@Yp3&4?<m=iTQ.V1jk>%WT?=Qf*'kuaA-[K%KYkJX@N1hWN6Pmt'^N9dk<?)Aq4`+HS3c)2rVC+#lM\c<IDZ.+q(=BUI_C_T<#QZ=[,ZE@VoB$r$\KO;aBsB\j_VuB>RUF0I[e&l%3udn\!6o?@X.jl*Fu[VHBqPIE7iU1trP=\@qQJn\^OFo%l4'B"?`(E:'/VBt&-@2$>XB(_,Mkr%0*RC`2?P'\;Kq^sBQrk@FQ6'4%CI\B(NtcGV&X/DoKk*+=b#[#(Z[XQ\G'9Cn[R=cE4(r?!pOV2?fpUhj?mM&#"&oQ4`E)FT'lQM9pH[i_,T@ktg%"4:4XDPE7##*!%`2E,4Q+Otn[/h0BR2[uE'N1CP3e8YpG%*endFETu3eZP,aqZHVS\jRUa!mOof"?QQjIp.p]YQ;OMN#UMf]ma<d;/.Gaa<,ME-&bE%.FqTfmX;I%k8.UH5#5L,Sn@3Bqu'p#*a%n"'D/f753Dk'G)7liNG4Bd"tKdCW-A\(JC3#n+e.*!2+=/+]f0l=$(_\^l^A%J`%^%%%YtMSmDWJ[%`1q6TUb"nuf/D8fq'tc2E')homZ'gG2`FQ.GJ>H`k?Zt71BF,"!#/f3/=IWn+NA!n/TRJa0O`rRnh3ERWqX+<&;:j;%e*,`K,j)B5NtLMY=qJj4h6gbrm,I18&P)H*6Guq(6s@ucodVgn!dpKicHG;M/?BA.@K7g^2[:h$AC!d@pMUh``)iBI\peAdq=V2K%GPt@QK&6i3_2U:6VoZ\:Yg<XG5sFJAE;@([#:6Ga3B!Dpmd;J<s6(;&6^6VXLgI;4n9ZiFG9!+1_nH.mT'n\a_&okVg[<D,9:[8u%JVlK<>.2>1,W@e%Z3)>h[,fE:FR1ocG/R$ueS`h2AEi*f0gtH#YMQrD(Bei'2,p7eGW1PnF+JjQ<oCdWkpf(0kaC_?(!Xc41<qT1%(P[?6)fI>!/H!G(02gdTaA,9B>IF@>mf"E_DEhi.N+f>Ws4CLWi,#VPpnLil.VpGC5DA;@4ZW#APC,XO=mB#[$R/8PB<&PGg[g!J%f_$:.7@nk5lubHupU4ZN(]_Kf#[1HE)PGrq*ad&4qS)"R8U;.7QDF0>RuXk6+?Uh&M?">Ng@Mn&jD29mS*_'2%4\G/HiaU;,%c_H%M,+j,%:QB4('iOVC^D#H:+B_.)QR1+lYQl5B]kD0C5a6AVrY-tO>EO3ElX9T82"6#8PUU_qeW>/Uf.bH'-;%$67F'Dp>S4o#F<gT%YsD9"a,/,d:8H<iaS4MfJYj,dBXHggIggLKi?-TuI2`N`!Tc7g&0MAd"8K3?fJmb6],^AQi#:fJ"3.;HFSGIna<#57XlM.+#i_8#%pc`-5l9p`oQ*F9Ckk,;CS<HVO(EauShTtKV'k49`LUR/R-`hHX?__=d?f\X\a<H;@\>?5acFKgme,,9$0klaX`&_k*(n&cu[DWI.%:`FiS=I#_2D\)-QD9+F6VT8YM=IapW8,:9g054I])ou%>]FlB`nc2F\fG:hO\gAL]dIl/<FQ<>eboF?G8BL2WS$))F?6)-VXN)>@%89%:)5C.sI7S12a?kB96&%EeY`91crG$)^!SF&V&ktlsDRgngh&E+Tl[;CZR$2TAV&L+<&R^%Dt`$"/^4#oOoIbkrP42&]=5h;iX%$hKg6TJ_mW0KL$\_9tlO*tFl_DU2H@0(E].YeChL9?7ZI3DYGnU(S:b4XV4RLA]Hr[1m=L,O,Kl&T3XQKeM0Dib+VIS:'3e2sBP9%%L7(rci1nGT+6Z7%^93&]feh"r7U*jW3?sWm4gB#o[/5O*d5=Ln7b_hK_-+A5^Lb?!mnKupk_9?_jlb(4K.B\4Qk^-Vc*[Na;sgM%bo33Zbm<1A<kUS9;j;#_hISH-At/pMFfdGAD[.goX;"di*2gAb+e"RH3l^L36S>`uqpeG,PWXn(Arhqh?7X%&G-,b?<"6dQ5\7ZR%]<4u\THg`oBTR5;*HC;?PHTtDCna<PCs+9c?a>`E1L]Y9:IO?"k^oqgkE<@u\,Ld?*8S6?U3U]fR#t(1`\pSEV.LqV=aFoE3IG^4%)$kMu7,ge>AfQa'm7R)?pVB7qm@;0RqQ9C;'r/rBSg&.QdE#+uVc-SepU059q<%GD3(n[Yk^2F([db3\VC&CAR\O[WB0t`_r\@e7%P_[l0hW4k8[?,sQkp2tn_W880DmGpR:)r$!J<0LqJK.EK]:VqcO.(QBH<]o>#*Ae.gMurgq9[dqVnYluoD(>"d&(.UBYGe&6h#PQ%qMsWJ]MB'mR>9\'N4HcTa@qU`Km2]"cgb(K!as`bGDBb]G&>Ahg9*C%AU4(,;lcI7pu.l7o5tMs9+6qFr/`Nj*_S)N]XHul'jP/n%FJdq'@`Q'`3g"8RS;?O0nTR3'M5k7iiZ7a_R&jDFY.R=RAF@hYMoG=R+PFs0d:#H28.3:6>1PIA3&HDVZ$a=^kZ;&uEX$2,kF69:%mt^H9VkK'Ee<,`%S4+<`S@13$.0hL<ZA7$hCusJ-[U^o7Yna/,*.IK(-X]=;rL76-FrmH2dB/6M?N\@-=2sZ@^u5a@p830C8#?&!%jCH;2j[f^.2GGV@'JZs\!Q83EhYdH1YktfSj[')*@QC2:E`*-f8DG&->ji6E3[?Ae(t#'KK,MbJ0QV^_l!=T)r&%p(E?p#CpQ7l?%5^]kb@,&Z=fnEkq@mWBkncY'5kQCXo!fGKL@rbUDlilC;S?hI-Fr2m(fd&'&LKe>':ZPhSDX1lPJQGnVk8?G(oS%rt7Gg<F;&Uc5%@M\]X>)%>CAg[7jSTsRhCaUS0]EY\D#Mme7FPjl&LVXF=WPeJZ+Y@([#AsNC.0B`i,2I;5a7N]"VY>IQN;OUAlSZ@kKL+5^7O*sV%]edIgST")kSqOnHhOobS,`:iG,YL13kObnhG;M)<:eYdQ[5&*"VKWK1?;0fJ($A(^?r$0o;u"\!&?U]SioL)2&=?,r]?afi90&0.%`H(mZj2g%#ndEEfR0:k\/!=o(H_=CLe,[Qq(BZ[jJm:j[$lLei2ZmQ\DQ3lrdh[e;"hq&l[l\h]UqOeDQjEMW$J2J^*-qiT*mP4J%s6C"MiZ(8"(u%_?'m-S<$(*I<V,dQnLeY9(9o3E(0?CSL#&"]HIc.Nn>BNEfZK3$Gad4Torj497Wnj2oQA=LM5L*hKK/,uYDqOX%%mNl:\g%(dEmX,GUp%L5n*"!hhg=ZOr663_\cm]=WlN-7V083$\=!I[3M59/Gfn%YiCTKgCCsElTjlY3dca8u`:f1qTb\P)j\=Z)K%GQrmnB++8a7f\(M8iUl*L_E)TABN'*OfmC12P*(Q"^q<EikH\.*Ld`&&SGZ20PuXg9gW>/inR7YXh`7if-'k=oL$6[:9;_8ATiW/%',P"Wl6`%Rman!0*#jZ(B*k&?We>YaDO90`F'!-LO*VYNZaZ)pHd'B)fS7IABDV-Zp2%LG@o"(b\eC^f;+O[;Fm(hB4L7c:R_ih(%.]<pF2*\!@?7,\UKUgVA`BO3BUah\'8N(Fda\?]C[dhQWf$_7tbiuj1F!:-Ook!*,OBA\14),EBq\KO78oU<QN@;m[#gA&,^d"qE%]Waan!YSA241j<QP,No--A6b>nHINELD,$u6AJ>H'Hj8I@C83VjpIWFrhQNO:bVVS5\SoDOhHE*GSBBbnf-&q`#-<..7;S$RFK/c%#D(KIDAbO+2S^[\pP]98:jNQAV+Ek8B7IYh!T0KMZ_f)qUs^!Xqh0q]cGpNPXB:;H\"p-p(+ZVmp6sdZZV=n+>X0)_$B5nL&G?!\%%(%abC'9(:QiTD$Z!)V*=mZXG`>gIRLN\EU-M%/\3"&Yo;NW[n#722Z&YCA2ag]69_qbCAPat]74]6ksQmpXlN.<pi7MgDj!EZ'W%/Eg%io_t]AJ?%<L&@F_s@@Y-h3VRV`=&'$ldqn5%fc0ttCOBKjg#T:g#]I$LIq6npj6u`G/b:e(^oer`@[R<+Z8n!I-,"2):/,d0%qCH9+QieItmb9Q'et4i*5dd6uG+&LYS+bo^"(/FeAI[FEMr(qE!E(#M`>Q6p(/oJ#Sim)*fs3K>Y43!lJ]$Qi$$]*LOIbK7cq)$N%+G[5)^HXtZZO58,gB&'I-HF+'l9VOTF0Hnf5$ua.e,_o?Gm"Klg>>KF'9orIKR$i.129TTi/Z<<m2;qgNq;FNZC?`][[Z\i[cBf?%D_#[/h,te7Es#Y9HMA2$=G:IYlr3"[??L28CBJ*>nq\ObqRmhHZLb^>a;04U^@qeL?TfLc,e/T`Ys5\=q]-@fNGT<DR2nL"R!tY2%D.:c)-5<B1m^t'oMYedQJ2j*WEK?N?/B>9[E!R/t(8i6@Ti]LIeJdIR-I*O20N_!Eqjsb33=dMIR=tA\kEDYY/lWmnqd[QLB!p\3%F(=CNY.B31Zo[AlhHK?a_l7p^UHrI;oP*he3fOuX;12um$FsP%!f).7q<srGKkE=HIbk<?hsu\X=6VEj*&2!L?dFfThEb#VQsFdp%>g9g@Bj#jeKE%HtUX1'EYu]r'"*=*V4u^fbct]9];lYnZ<%<2\>N&=/G%2E5k'dn(I'TD\RIgRGcscHsIi;@A;Kr;[UPeYYelB?L%T\'Btm(K<&%JT8LXj41D6lW"I@S@ksn^_<3qqPn1Fil%=oqV9WrWe&sfX839(@V@EWI3:])G-FV.Bl2qYh/<4$sg\i/^@.K2&RDZ%_8<TtUQ[RUk!e=uW1aE(\=Y!:U%Z$to>n3PLG7p!IIUI8SG&)]']H1G@sHDs2a%OlF2D]@MI=#5GI@Z<&9'Uj4BYH!d3Qit<fn]m%l9nR.MHRgof$hd;h"4.c"=WEjj#Ua*o4abs[g\7=COi!Lko7K?:7o9pCAL_059JK_<c-V`XT47hf)53.d[CL**X>([0l^Om)/n5O%V\B78&[AiE4CMNLUW2>!$,^#i+nLeG4(3^^Grrs[)TR*8s,M?sq"1,HZDn^#9LdHC_G<4j"$,%<VFD(R7Pl\X'R&f@*Z\c,-"NTe%&pA3P+G#MDV8B.h(pPDH5)c2(p[8m!5>OU*4I7?O*1!mBDKThj$"cop(n\pO)8+of>4c/)Z0`UUd&BAWrF3M6KT+dH>Ep&E*k@^U%_1b`E06_jK>Db'h]VGn^E&`VT#j\LmMTLL(@R<%!ck&NBahLR$qP?Z!Op4<=45bD*Z;8P(ZR-(c0/hNZq6&M3T,[Y`7K!KB@iG=Q%ZfV3PB_m>lXBg5,rkR`S:<#LP1R;_QVn[*Jo<,<W0<YLj@YXh7>5Li<!:aYkZM.'^Dm_-4V\\KAX?uuL,OB6=!n((4#!<Hg"!37/%!X\HiJ5>XBii9^&`5g9r@/rDu8V+lq5]kb%:Kn#lK?%J+.JD;gMgG0tHm2,&4;'1r)0d$Xpgr\f[n%H-h'.TB-jb$_L2+0f!7k98%**S&RdXt/Ba,M`\g1&r)=q-Das)`&H^jAJ(iJ?q5?B,l[fCN]aA-Ol?[DnnRh270YmD5j=X\XS1oPmG5VXSObVO,^%Y1OT6mCT#+%+AUiW.P*7`$i!_6hS`hFNL2[YLjj5N(U)M31b.*<0`[?FE#fhEN!ML]NGBOQ&hm)j$d5:pJaq:^nZurtQQW:'0rW6,-,'W3jo-Ga%79>O8i45+C^MQ^paSi`?b`TmG@b[E1M'[43j>W&Jd&\9."Ql^hgLJ.X.nJEeJ$aYcU&`S]Qaf)7Qb#X$o/&W?.MB^H2NlWPSD&0Q%o-EjK<DQ,AG1f<J@d+bP0R[kfR\TEE&24Yi/X^HH;V9^`3]P9[l,eH:TOhasU:q_]o2TEoS^<<g/&18]oc1f$F&5$58joBA+^da<%)-5XWFs5m``RP"C]F,:4/V](_59Yg5T:f][$&mg='4Mr5clPi5_s;Yb3H1qlqVGuV*nR=WT?T_oiU5[a#kO."n`t1#/_5TB1%l%#%+Su6'P#H3$Y3cE*$#u3]V?@WrrNRdp5X6E/7,!45;N=R8)IpB!R7"1(`ee+#"*(\r@>R^b0[jauUDKQbhYTb(:5#'N"c1*q5mW4b%fqd,.`139<?]]"6bXn$;V"Q3L1cR?`/#$_1,1Reg`Y2dbC?B?%Zl4hVDu5/g"0@d+X-rR&II0E<Zf^S<T>pY@k8AYCR%s+cSAr8D%7-<op^B:fdhZ7t\R#tkD(ru#7EDm:YbM:s";72*A^$c>#621jL%"BARFh%6-,OG3EhY3Ta]P'$P,[K#LNaKg9$sU>FAh\ZCYBAVk%1L&i5-fTCKf9Ul3i--F^.nJu&^or]NJHt:e;)/,HX80.kTJKaqjC8TbUD6D?aa:ZFYMN^aK2)_t(oqNHYZ6ficY+&P$A<otpTZLL%FCr=<-dKXB;J3d5',spi0J?nKG"(b;1uFGB5&@G.+HBjbKdTSG<g\$!D=N;39[nL1D!J/Nc$30AFpUOt3rrC]U,quKS9%*DqiE2=%fuX@W"+@L[bDr1DU5m7p;&W4u`:9q+0g,V4kWg15f;r65C]q>VF#Y"`]ra"&2m-R(%q!D:jt2P4<bMrU*ak?,'d%of%0^8aQhJP>%6WJc-m@IAtWBo"R<T5_[;X!PMok\E7p=gm_Cq\T9'sZVAIPUC8BMSh!\unYm-pMQmmc`\4+[T5$5I!^0Ir>8t]4mlJ%]K'k$n\7k%M=#dWNsMYbp0EdW!Da)Bpb;M9fY&*XdfT0epjot=pas'n>eS]HS0)uH5bF[o#hFutedZ/O/9(')jGVt\n[&m%l@,]lC%\@]!+1TQ%U30i880B!ZS'6F@VMV')^3M*u3VMbF$j6#('08SQ,f&IIUeP_HS&<?j89qNoF55l@#lqCsq;"#7!)`[d^;^n"YYM,B#<:@l5lmri%iVL[/?VG>$/(cu3bbcb)ou[1.AXjti]1XIRU&iRKRYg.Z\GA--1i*eF0cpdMd?hNnSIbR.R@,%05jM^E]Fen/&`sWoKGkn.KGjhG%,a1P(aH0DJ;8aCLAO4?S7DO/\EqBCYC(=+bMeXpS,1HT\7`Yoo5g\T_euL#J&GkO$W8Y1j/iiK(Vub$h$?nJZYXA%M]ElOiG!mVA%\`[?&0T##>X6r84L,i"6[N:7b%1.rC!t7uZ+ER/?Q\Cch&Uod4q<R3D@uil_Cskj,Ankh538C8jW.cb]J=PXemN"e;E9ha<&dEBm%pC-##eVVoB\nV\D'lb(5"qF_Q!?SjEh,_Gp#rqPOCFSo<N:7g,(sNs^O6bMqI4O=HJB#/X^katODjX%np%djNFgk8:_+.e_5qJ)(%"@X;V[iB.C3-7^17a;AD%[\Fj@^taDFOF4*TjL*lSl]3X/$4=h8(;e,X<cR-a*DssPrRgrLdCh7X/W?!4)l5Xqsun3qA.[;jKPLM%ME,&[e/g4_g>s=4HN_e8Fi_o<4(Q]X#<Y`?H7SJ=Vg8h8HsOJK=U2R,P4;T2!U2HOlE3T^nMQj?nB@Xh1_P?EV"TTL5>M=eMSK<:%hmrk"=AA,?=FgPb%nqP01^G(!^_#u:3s-"<\U?TC3p1K9!Y6:pp,ukA54a!-VIC#pB(fs\K7XR>>#C%X7b@_hh=_,AI;.tZfV'Gb%Ih,Qr/Fd'TM_jLTbBXd3c%9cSH7__l'Y)=K`9<B?`5,hi!Ds#tjmt#?bM>'9.@i_a@*'E#I87k*H7ga/4Ypd'(8'LX]\4'3mDVs7%fi<:oqDfK5?GnEt'[En^(@%E%B473^r\TN.oin6NEMDJn-u"o`jU5nN/?=@Yma9&7\hgtWq)%FOe"2S,7B#Y=Rg2oE.\TYr7#p3+%D.<F[@cH)k`g\r3d:7t#`W@-\KbH;6ko',tH6k6R!rT'),mFgQO%an,isMlBEMTkKm>HB]S^)iV)rh+FdJtU#)K5p@Ld?&mog'!;%&FU5eU=SAAo"[lUr9WeaBc$67E^5\e]jcEG4K`QuQ.]'5'FEg^SgtE1a?@1/fenhDblNWC&qX[l+/CN*Pa@"6l+0g]]<iT<,PYD%%@IQIoeFrCMNtt/:Va#SP=SPRI`\2-a%kCCZi4:EaYfr=.jij;+IsQ]IP\,O+:Ocq,U8/Z(PS@.IQ!dLS'Z%ZG74b1/Y\-NsF-LeF%*Do_iF^@(!8tQ$R&tjFcfI`hRXRC\,'$mF*8d\7,7tIK;kpYd7Ah-KBY4===JLG^h,E@p6bY_85'"sS/9L,b:B%cd/JZ&jQV(OGp%.C(k6>c]Aa4-T8=COj9Yl`+i6DS.sk1_r@P(fn+RSZJ,K5hZ=,n?"#Z)A(H89/"E02FAQ[O[JP6=+3`jXCRI,oTG<+&OS%N6<rhu%S'W+@O;Z2H=C*<e(s<$`BC/"S/-m)YnO\ZAU/mJL''f\[TTdBiFe[(hI]a>1c;]([5QQg\ju')P#.E4j587ICP(),7YkoN'o`Qj*%PDHo?*VLU>2SDIEr;"W*(0TK\iHEtJlNDY[nRB025b[GbN6c%:bRK"F1[+P_VFbo@&A-PFGLA#TjosgsDuhDd,Ut;9)QD(gC(HV!%62\8tY+qYWbl$5]#B/l<!<ka[aNXnLme#C91i=ogOPZ/@IOuZb"]VN.B`YaV"[hGS;E#D#>quc"8j)A54Zk/1X=tG'0XVT1QH+@S%UJ'b0f9f&D?J@[2NO8oh1lZdX$9n.u5SRa%_[9RNf;H"L_PG%)+0PB^U<g",dOepta#s4qHoN\1iA6hO1C+]4qIrG(+^ep7qUQE%%ehqB,TXq!d%sEMb#A_\m'[V),XE-4qF_*jSgj^3rX@.-=JR""0B44)dc""CXDCK*1cqF\"el5gTDmh8ZIGtR@KnP-96@u;KJ-R*Z%UCKkL_AYhUADIF%PM@8OWqk?q$[hcWFg``t+hDMdm=bto_)bJsQ'rZFjCeF55\PL`=41JFcIXd6cKo3ILrJ8D_Z@5AgFe4TgOeIk%#4&r@QhDE^pI]V"T+2.J>(>\+'r7t`j"XYOZQ/1=MDU5(Vd&K2bb#OY+k=.g#:oApSVb)c.pceUD4^$jAV3o#05)@<-FdO+$'UQr%4[7`%GR^XIXr&qN=%:o$+To?DGn;^k#JtWCEM$a^GlD)D7Mm"kT\P;.,GV#u+YgmUJ-sK')<//hTAF#;_I>dn,Cb'"^5+#;+hGC4%+u>8Wc03HLd\+&mr@C@9GLfAjfL8Ol&0B#E;Clq-cu$o]%030q#dkX^)"a`sQI:bjWsSnO]+^9/D6O^"94&6G^Ecp3iX7I.:iF?$%i51:,OJ&JEi%i:9$Yk6/>-rL=A,oT4&F"i9.j:R`8>?(ide?b/59#J',eMu)Y<Bt_77-\BGb)Dj'_`fKd_1cEb>qi-&2^GAND,3+%i%e`/V*d+4ZukA^GlGrDiGbRuL_%43dXA>=RGQ,fBWcpu+OQs0?QA/0;9Kb38:2$/.f86l_Zc=scOErU=SE7.*R]iV7nDY"E*kG7%1r>1'IbB8*FCu#;LhK#7f&s)09ZMQDSU<o:n.?d6@g6Qql.6^s([p2*[o3Y-Kt5.>'OR/o.*0MRMPiH9J>s$FP@k.`D0PC8FB)a@%i#g-<#:Phpm-qopc&lYO?'Ck.@DN:r\N"fU_<T6/B%H\X/Gt5M/P*o><k7_)<fMD^)r,0*TsE+N6<B,\UIM2/at6SnMpBU3Wfn7N%Lq"OVDK-9/%CD!go6>]<kmAYL!&@L&k:Buj,:R[tC&!4AIr>O#ReG9`>&Z%5(_JQ/j7CqBJOns_Pg:M(Hb=tJqDeML7140!]=B_Q%g/Fi@='@.Y+nV2j[["uu3h$)5K,G-DA]6L\.Y/=nh<G14P"GGbp!^X[h:X2]Br$;>j>5u+hR!V.dd6/kjm1L/m\H,ObC@qL7@e[K%85Yig(>H"tGdq)9/2.UKX)t-&TS&a?D/\$R=&(d@'HRZe6/-K3h=iBk"R+@[22%rK)WePh,H[3+.<W7DP+h)Le8$^HI$=mBJbH0!%HpH%dKJjZq9(TWG[CZ-I&n?^\23[o*leXu7=DBEaZBdudihhu)fGZB*"<G>I8Kd@[YpD"qM1Cu4EH@bkI9;&FL)?7M,T0Q:Wp66:%VXc@ES?ZH[ltl+27\h5U&$e?*"k$$5IBGqtAW+085\aQq3S&<r3_P8b!C[hOr.S_5U5338m57+hd+J7n;C7$pXVO,lBSY(alEYDK%JUD*17*rj4Q,a<lKNj)5SRPu;aPQaemm_7aPqZ2*2rZ@TEY/1qJ<`Rh3M\9F!V`s"C$+,;pYh0/F^M5=g[TM[\9K[A\$BpKp/DOT%J>>YNRsJD]KS7Cd,cDdC;omnb'*9.4)P/O6U[NK;mk$gD)>=_X4K`HPhFD:(PsoU7YCTWP,h2qhb41'D_[3X&NQT]HomgE_hd-6\%?)'X;F?_jFOlBYDa&6(TcnN.894WW=5r.$H6`EK%`>14.duC)p!J9g`Oa8JMaj*hJ'ZtS69j0oKhS&+#IcTfQ/8=N8`7=;,fU1Qj%^,mSHnF;62X,!K_YqSP6@cPjeVo0EA;['WN;3:A37UGQO=f6AGfQfcR<oW5([ge-kYXa(B>R+Gr*9Z7P?6\H7;gEfm4r&Y-T"j53%Es+@h0s92]$ej]O`N9fTVte:sLLh>o9t%?I1Mnoj[dUBQ&edrU<"GD?)7jASTQq@+-)jI%2nI?:O`#fI$C4U6j9d`CB<$qdQJ#\@%a>LJnoPd(ahi5jjPaq*?U:37\?ZGgEQ"n5?Ihm&,j(kS2>.B%XefkuiT<K"If)k04Ae%<FW7CDe6VV#*)*C=L]q9Io"f^I;LG_YY%iIj1B<$ursL4j@,mt8!jp`Ye7,oDM8&0L!IaHq6=qYEs)5]3Fmn!`[.hA'*L2]6=#^YYtnDWK'[s&c%D3*onQ.>hEpc'q<@ICqjO%M33@[c41c$WZfT+;e5s8bS%HDd%Y#tAkHDt]?QWg"LYa=i[P;c_4]./npLa+W&5_t^U;j2?t\O4`Ih8:Ys3`@o6aJa(!AKig9A2u%nB%oNUhLpCLV!+Y5QtcUX=;;L[\CFVrBH/F@&p%plYu!3FeAq7EZKIbIVLsDls\@h5kC%:QK`,#U2_Ra2mntp(5@O%!?54Q9d,jO%$8s%26,c_6S!V`7?.:1uNC,;Mc?k@W!F_35q)At<VAHA0"A,-VYV<l(7NN)dZ5?H)98<eN/BJ7U'tN723'bfP"R:]JW4)32GjL$Z%4W=RbNoOjPg_u"qA5CZFN$>du:hDL!W@G#Fhd%]m%ui_E6d5W7.oRhK3J*;ONNSD"&;lJno;X4g[%>d"Wh4`9Q%.7UJ\>&n,dPQe%\"T$U+t?!fBIT!1\::ln`)+*R<4\s6RMhW4d@R3;Hq<Jo(hk-_hYTdJ%Ru?]LH!J1#A9&F8Z,:@EM(Zf@=TP?Vo6Tt1a*/$%Y#Pn%<@j69/i6[LL4eIC,+K$3MUgr8b?CeKmH.cWTBhdJSp'[nf'o0F%_5]%^`Q'J_>?17A.E)I<[l%M9WHk.,h$U=AP-:^TM!#,V\U'1%'M`?7.*5.4+C2CDOS_5?+gc'-iNT%-[4k!\2=Y3Kh:N><8is%B'rbn:!Dri-fhl_\mr@Wd'a;.h(0s>o#ba/17[F]eU2&r($IV_f%V^7d.-&UG($Ygb\2'?4rC:e,eT+Wp(VhKit<;$k1#cicD7-uh[GXD=^M+J@bm1Q9p6Dik/0H3cCZq5fmm&%?!ol6BoZQ$bp_O8!c%4F6Gc?B1V=pM\&W(egc[V!PCR&ETm$:KZj65;K>e`dQttQa)2DSJZ-N/$6W'VU>ROV3EYQ8u5&K?S#`H\8Bo>iYZZ?HsX4m%a;;C%8ea3Z7a_t1>@g30ll(>p5l026:\tFRk$fo:DS'6nZNgM:GnhF9)**J%7]OOLd&'_3,mD.f&79AF`@)SP*9_=F^Q3cRa*l_,l"2:C%!ua]'(#Z2^?&\[-4n`tk^I(/5Z]P-uW];?<SeM@ko'b+"8Y,TEjgb-KeDflkql%rS4dpqrbI2_0@iZ`j4<&Ac/aCM2XIKojIV#T8%F(7?Q4tpa>L("s+eu,gXKjd:4R*rj<PansO*?e!*Uo7*s]$Ec_l-QI/0Hi#$m-m&\+4M+pXoX3m8CA<7npgaL#`7&2bXdL4W)F=0%8P9K<JVG@Ye/4d0EIRCD:'Cs]^DY$_ShcPRiAG]Lc%I+;^5:i`24o_l1?_p")2rkmq@2_mS+e(t(DF)ErQU&4=,)DI@2"do@L9bu%c[#k4Tfu]i2dJ:J4;NjYT,/e5+mgbK2jTn>Dp;kY(Y2jLI4]=E_9DNf/?GfZB=iU#Hc2f$YtUrDl>RfnfU>mdL2JKY\UZiCE)$\V%#Z_mr)A9lFfDbVd:TEqf+orAcT<"8/lu]6&KcJN55Rpa$A@K,n]T8t?CKTG4%mLUGHp8[%dm-?R=D^5<M-bN.S?8>c'm)F51/.?0%3<aApDiTD`.U;EeQ8-lW[c9c'\ap(BIl3FR\&Cd9I(gQ)/eKH1Xp5-YjN6S5$f`Z]4fM!\q)m+J<(1AQcFO,Tj,r_hV9u^U398pA%!B73&FiMs%$%Xf_n[aRnN^FHEe:sJlo:5^XR_YlL.go`k20GS/Ld$sH3P>$DToM4)9>7Qt/HQ"p2V19U:!,Z1#7`+Q^G9u9o8p.Z%I>8@G/2JcSd[#EZB;bVKFb424Tc@`YGT<h::(KZt87/$a*A,gZa]>p4-.%2_bo4#kBu3:]K<6bu[l%gs:P@c[q&/cR(nBC+kEE>.%9@hE<A=i3U!m1.\D+cghO41J"WY+Mcj"k&4_D8A,kA..JN98'V-cD#DrloI;[:<9.2X/Eab1NE+O1WB$F+RoOIf<_Dp`mX,OF#:;%3Y$N"RE^EAO?aZcbFL\mk7NWJB`hFnEXRFa8sB\^4LsDJR#k$.E>;1a#*jV<L0'5UY40C=[G1o[Q=9=[RQ1PO)?'>6M->UkN'l8'%T'DDe=qj_'#UQ8s1B.8IqgM.fhr^Shj2%o(G`#@Zgql&*ke1,'CcoE@H%f>rHpk:U9arTnd9&ICr8@IT_nLP,-eqFPp+"]i3K3k.%'@N-[aSUpMea^eLD*:"p7<jR\+G0$)021CDD_BAm17jW),'S@#TL^`7>E5^Llhq7`f#B8T=s[1cj;jOY8GBMG/XGpclot5sk#Ha^%<T]M5M-BeShj\u_]Pm[aI\:$&MXK/@7^Aan<m,a%?bu//1`#?s+][Ld\NL`aD<HVl(j]c;VUGEqIL-OG5/Ook7hB?0,7gJsL7Nr?%"A/qtCmD^T&!k`4EHqgEh5FQ=91&t4YCuPHMRTfIKG*ECmRJO8\5iACB&":jGk83]NtKmFhdT7gX7gSO?9O#/?osfhIj0qYkO[n[%d,/B:cMOWJ@++fN)iYT'f2_R:0?pEjUePjYr-M!3PC-?bG7D`nXZ,-dZWhbcTT6p$*(rGFH3o=;bVm,aI[mr/(G\M-_IA.BA^%SR%6>S=Kh4ef/?L4h[SaFB[O1hh8++MaG`*I$M?*Y8.(n]?p"HL$qZHohC0I0KB==HH_djqFVaq\7q0I)m<SuomfUhZ"r66;)nC="=R%_?:`jb4U!eN'(N0poU!Pkf?3[EU`0aUHlu`@2C]$@8nR;_lBOnLf@rrAs^n)&CSi^,O"=fmKYI-62o0.O'W]Z<"t.>ItNGX$$RLL%@+'\AF-Pi\,(4.kDA3^mYjYguN^l\Lo/[qr8^>q5SWE)s#aLQC5tT]4>q-m><QPNGc=J/O*lo$?D+AcnOA]3TVe:`u\'m,&g;(@8%HW<5N,cH%N),+&bX$7s_BLjbU)=q#uR!X283Y+/bNKE48IpBETHRh<s$[L5!URS8/jBFQ7Dra^HbQgcK"U-ZBk<a_9Yt=.J2&RF8%JJZh5UsE,#-0Zh.Nb+u%]$!AuFb/KdF!rXR*Y.e#9TOH#_ds<=X32N=2d?E6iDm>8*!1Dg#VrT9Va\aSiI-HU,o5n42[:2#]05?:%8.AiO!^`kmMjENG5;9bJg3&F"M\Y,^/f(3`g>=r[iNoU;Yc`U<6[+U?I1Aa7h7@t0!o1@U6H+&>,8MML]'2LVcuPg50RW(Wc>QJ4%*=S2/>_VCoo&:Y@br1GZ-R$rsShPN=J_Ue#aYG!Blo=A1[N@YT9+3rZagO@]$BeHLEi+=B/8'G04tG;>G<,n$a2>NJN[,.ukB*Z_%Vn<*bO8@.bl'Zs]7UimWT9+Kd)76q,1!B'e-p0Ih@?^!^`:'fs0[SF6R[;5TaYFpb*EL(&Jpb*6jH#r(NQ\m3:!7rGgQ]nWd)u`\%0H1`5Yu(PJAi\"DqiX#(;'/gB^am:s(utF1.FI.`f##75aj;i\KOIqINn)Zk_m08a3Ij4d$\6&c0F6+$o?+t\8-6*?]#`LV]Z?3%%M^N$;isF/Ni(s.8]N::[Gm6XRgG_9-,$`%.T^6P*DVghm?n+,C]k05Z03#Q/?3fKOd?D\6OL9L4/FD:%MnK9o,NU&<Rl=Gd?=haN%h+@rkUs0jS"dL7"4.fOIf'WgQo@TYC4anS!Y-H`i/K?A6eiJEQQ*tRX@6]dmFf/b;e'g!nAMBrfKum=9Yo4,>(1%N"5n2MC]QZ$F%^U/8r5,jolCu0EI)2_8n-YV60#n/0'lN,^*:KN&Vh`_>.@2#P-$k0,AXfM.<1P[o#-\4$JU@pV..DjTpnJM*=V;!a\]ab?B_^g<0%oB.dN2Y+TV(g_/(:D\Ef07;AsZq';D:m>'f=<cuQGP1A*ZtW'I+WW^aV:P7U%fG85(u1^.h5LQ34fsCI=T6hs!538e^KloZ<MlKo%)I<^15EF5GXjIc[QrA&Yd^+?<Z:r.h$\#AiO/X.!S_!tkbn9YCJ5k+eH1?A,/j$Hpe5bkZ2bDXfQ43i#b3!o@P+WMJ"1fS/9G6I;%Y3W*aM4%Cp^#bWU:.Xk7--1EULtI-R[$6Rn"N*X&J0lDj#nI<N>0uY^>sH2Q2P5.uiCg0dcp^&flGqAt4N\K3OlF8[p@b9;OLBII%Op6DBRC;ksl%1P/"u'qc+P%etNa<7c:ni^ZM3%Msdj*6D#iU&-Bf*UA_=5H&D>7)!^#JB0<Z$4`3p!JL]cBC:_+I.e1iS`RL]Ek!%jU_NfmC5nMMUdnEnWC?+6ilEIK"c4EJlGj;.p>/)#<E9,`:4';SZVF8`#siiUE@3)5g,;&*oMESGg&ZiT:oapeMe/i:af+L,!],`%5,O%rdlX]gD#dT<VEQ+oIn)`9IlCRpQ2f1>n`+Qep;_[\^M`B5n,Do_qshG8<RcDhWJM%4`$[h.7D89`b31@LQp[EM*d<*&nst8%%5Q'?Prmh&%If0*?`VstO;XYG!H!YYr't+34^DFm-E&"Ndo:0'Nn%cI1p!".WGI.585Q.(dqs2#pgOK.rQ[eq2^\m&os7OG4GXHte%@un@Dq6rTfc2[brJ,RF&r9;8Zr;GOQh8dRNrq[0*oIk^0V18C&J%.00TC2aYGJ7tnMl-1'mb89NkPou-M=fqG*6riiSGAFIaT(eg%!f5?!C+iBh&;cJB![aJ2a:'ODRpH<Xk]dCbeLGuLRY^<s2,:NW0[Z/t,bU\lhOhm2ma\$U8d8j-00*XoK`TGe7imRKm)<[#`CKlL%'g*O)NtPY4l0M$2_Ma\^"=:!/FDEEuKc:'nk=+>RUjg3p>7eanrM'[@8GFR=nXJTo%a!?HA)9NYRgY_Wk)@H*=30g`6gKa-9mCCF%">M4]o<"SS!cbWF]:mVuKU;d]UD&BW)Ud)[pHlPZn\qt9%%>H=eD_cq6#>h"rd5k+^;\38[#r^R.ZP7ja(,%llP_T*p\8%4#<=^1%VmT;b$pq72[-#UmQ!KNZVqsd%T%4%k"]'>`S"f=i!GMr#qt*MfqVD#Fq&R)BY8M*_>J5MJRqAN!>3%*<=;=/<^Rcj^^?W.Bmbl15%A/jjHi]=M18<R%I",TBWT7pZkk^$\a'GqHT"h0[[%;f;WRB':%IbF!ZLA8Za8RL_ndn4@0nHhd-".inj&O5.#a;DAW;Bm;0a!m+C%Xsj;H[nV\@c1l1bbHko,#U4-9:"tQSlW'^90A[3eIp0pXT5>>J"p3lqWD$."#7#n959\3hJ(^)@2f5KdbU[,[SsOpsC'bcYEoll[%L$f^\U`>7=']dq"[2YnV<(G*`UOi$%X5tP;0OnBF_Y8!'nl)+sUpf\'j@,)HL0m_uHLqd`QrP.Q\-2csb6Y/=+EM.r3]`at9eW/A%03%cSQ*tDG+i@Xo4<r'fkg<;*#h#uK]&Gq#ojoR#(W;gsQu6b![fYQkXok2tK7\%-O/Hin_=[P)B?KhY'gf6>HuOH91,JWi5*n2Q%*EVofgb^[tc"[A?@D#ucl%Mj`:I[&@XtuXd?k7/2qN]lo2#2RXL'HD[TBLL>qMO;sT"2QJ<Fg4"T8gZ5Rr5UdBQS>G=$F#E04\M0%oTJP&kcB:u*i!UY(L<XT(LuP%__IP,bp,*a+Wp@qSajfC@3`LRXn-k^"$X-QI)XUl$WG*YIljjbbkjstIB1"J6fpEhlOqnr:'.Lr%Df!%G";&el[f!_\VhSSuCk8oKaToH3UGK(lhR2$9W%KP'gYA[X&K/!WorfkIXm>+e!Ung3-qo!<.piMjgG*OG4c[,&d;AK148:nh%oB)e=V`IbeH0aVJR=,V6F7.;2H3O2P+ecViNb<ttb['840add%*`!2\PGmh\9S.>6$)AL2-e>TrKQ?M2+QfNtO`i!KEXO;t#hh2O%:(oSTk>$^XINl.K.<7t=A1])R:;qXm0/lt9n]diN33<h&q'k_%DM;N*CE_TJ99Q93eA/]n/7hdiI#s/(H=_2C"KrIR9j+UA5@(?[%.o?\%hA&?tc5),04HJWc4$g>lg'4Xk2d7dagWiB<ljVJeQ1tc^q&qM#b%!q.g"X%HLbj)FV/e&*?Xe/fBNRLOgLk^^-U?\4S_1,i%8VM"oT6F?1Y2eU7#LJpbV*2XFFAH/^]JYRReL9[&L.p#/F&G0ten-!g[d,IHO#^L2T]L%."&%t^'I`EY$d>l!Z.bYUZ6?A3W`dhm%IgfZ52Al,Yi+H2S/RQU+24'VNs'-5d,[8nRC[V/U2)VSIB;i'tm$raSh=npZ:,Y%FE08+]aG(01ZBg_KL<bY8'8Jfs2Ss1iQoqGm%BY'g3PN)c\gkG'2R`m]a\*gE-Q\Y0X^XuRW^@$Nu8LsUN#GcZ9H2d)Kq2Nk*'OZ;lCBm394aer$T&b`Ek^_nY)o6A.0:85T@EHl!%BJOZB3&f^e.r0cDn!!Lcp$R*D>[P&8`n;2EkF%>'fV3!DVTiqjjLfb]<o+eIYZo^JfB:2n(jZ&K*),VZ1GsgpSM`J"hRH$qhAb(.%?OaR&0fAaCQDO1qB'"<iH5N6mUB^<"Aa[JH%J2"ffD#2c+'InN.R7&@ni/SJFQS"cRTSG9H:g0fFFXt[9P%$E.)+:`DKauc&1q"n%#sVq20Vr>o7)>SSRk^)_H$>O(NIJl7L@oh,%&4(t3a<aDF_b/k/Yst5,g5V>OIS#ZTY,WFdl5PbD;@_-?-I<`fS=RDGEd@"S%"eW%(,ZG*lA0eq&FG>f6%6rpqq(F8qqU!9X3uia)q6;^D\%H5,G\Y#cZ_e4#2KNi\-es9Q@GoteqXT:p[QP'o`TJq5S"I*9jht?o>nJs%m2cOh[r*>fGWcFX-s%ab7R`l>0YUMG]C#(-p1`CI4puebEn1LF]97.C0-]9LStu@RI3u;3-_[&RW7RCsOtele(2?J-8n:K[T:VFS%Wf1lR*U*%JOu9e:(CRE8L=R*E)q7!Lf6HqPW\_a^6H==UDm#.Wk,Fgq$s-X&_OB,'DTG(iC(%)HXJOk@U63s4aN%+a6PZ<YlicM)%.=FU8KNsKOOD9@pC_)i`"1@C_HD:"QJ>i/V4-&B^iRJYN0(1b'k#rXpFr[G.M3PJm*9?;J6orq@aM99oSeli(r6CW!(9u_9hM`kG%`/i?,"0JEnkrRlFq'WUAV)s^OJ,\+WQFCuegs`)`p)?!J9)ZE[^pP"Pj4nOPCKelQG"/'X?SFA2_U;:tU#8poKp+:'8')?^J&7"]%f`i'"%aV%eahbB1KXiii3RG49%R,jpE7k'`0XK+Cd\oo!PoFq<)<Ugm)l'16*B-&:>o3IRlo=bNV)Y#pPA/kGi=c;mSn8s[/^XXK%N5HbRmjFTECJo#U#jiOMWM(-j/pY_l\1&`_pH\UoTin^NVb;LscgnmHSm*2#H;jp/:Y5:%k3X!S@UH4/8XNlKj6_DpnW_DrRH\p-%F$M'G@H9PD^b78s2tBW*+`:HJ%Pr-(TC&XNqrh7'%OF/"`rOsMC2s&MKR8aLaTW"bin>G<!Tn4)A9C#:RM#Gle_?rD=Yef:K64E5%@>>$=`hsuf7g/<9V"S'_gMJq-0Xp_ldZ@XG?DnMuf8fMcbG8E^PZMUIUj=_ue.B81i@a[nNGh&)@hH\XJ+Z7Up.[(1HHC;NFB;eJ%B=Fc(i7t9Wa3@KPpu*&aBe,T]DCsCSFQTEGNT@`QYBdA'l3A*l]s+kE-e-o<Ve=;7H-NJ%J'YZCjSc^(5FjY[8ZEOi<MKkOUB@$)%oahrs0`<+HC:51j!pF!cU95#2`Y_cF.V&9r-0Pud:LriR7O;=MJcZ)fmfmKS=><Vf(9kEmICIX1WG#UBIRcoOV8<RW(6uHJ5\G/)%.mg&1b9O%V->K5m4bra]9pK7=9)CS+'\2cJg@=#o8DtP3,W7gj0rO;t^(/lAeCgaA-L.,EcnL-BO'.-_?&5R_jd3e7+tl,g+;#Vl%ZV)]U^T=;"X]t)uK#"T*pJqS--8Esagb\1en=c_b+<uAL73.g.2QhHd\&91V1o6.STrP,Ogu<17605hK;*Tb2U#=VBa$3NZ;mGd_%`G@(Jbom[h^&:'g^$kWk5@;$s8<]$A`_7*W5D*Q]O`'j9bXpjM./^X)KWe#01:1/2Zn_7i(VfsZni6$Z'X*Vj!@n!3(!e9uH1r*7%cXqq]G[HOcX[DGm:#lJoPgmoZ:iSqWZ:"^cOD_hYk]@<-ErQ^[ep]U^^H_u.b]C!4D7>-16.rlR>J_5WA_E+,PrnohS*<lbf$,%`%m?2rm.(Vg?>):WIdCs0SIT_KEdm7I:<U2H0jj(U9hN(5u!+S>oYrXl8l\WKjUq$*2$CkN13d-HR.4S_5VB]21F'Zlr!_M,58oD_s%rFJ87>%j\NhkAu>O3nfm9L2S`OG&";^>_`mlala<8@#e9(k2GIO&*UZ5#4kne])"logBbB=UT7"gSTkl`(&:30SSm3>e2MO9B[N@%#qA7k+f((T&2OQuqejt<q+u=V](hq6+?.\6T>O"?h9&0:@NbM-\9GR?F4?:k)!O5=a3lGqV/OiGfHUNOE85\GoYX%*DEKSB75`[!%;2k:]9)Q&5EC:%U\L`+"(pNhqG/rW\,ne0e3s=L.X_8i4!6jk69o3W'jbtO!hZNJ7*f</VCRfJMHDU9%'%TBJ3aj'FTC*b0:qRht%2K"M:$a-l![GEc&qAq]Yi'j+=`q#fnYe/-u8#E9iQ8R>-s0>:</dVg#X![JO$Bb!;Su!)J,3uB]fWO<a@kk.(M/dQjO'+XJPeQP_%KPbbmn`G[;^"\E<m"M1M=\_XJg"]T]Tb(MeB"uPecY>pNq)%BW[*,`29-5,S[1Qp(/eHgO`B#ir4Y&hJkIAQ*c?\L04Be[0jDiMW%]\6K=Pm(X^cNe?OBop=tF84)TI*'XE0Bl\S:\RZ&INVFtIiA!T7cJB%b4UXm`?uFLoDBF6gj7OrB'=Y#f*''RpFR#s<H)M^$@V.F%o>#M5O*'Jg2mF`%`%%mc6eOKghlaSPOMFOa7k+ZLWr.1;>L5fP5OWqM[OlM_lF<Rjm-/>be/h\SFoN'mZJ3:YT8AO??FJRIc*$e1%6L1fA`FI<,PT-KmmgW=iX?RYkrBKs'qt!G4>2e@SQ7%7,\G9ng6t&l`Ml!T31\bf<XL(bUcGHU0W9jgndS1m>\j^UNU`"'4f'*VP%Bf;kVZO\nVp*cM6B5Vl0!54&ei"_.u[S"+"CIGpWLbLc\%`o&j$mrJg4Fq-YU/?n7d^_gVFctdB*#E'+Dn.+@Ps`7fgW"Ot<3BGW%4s$IP>mN&P8:6@J@OiY-5(4F)5eHaQh$:5A_ht_frKnhAX"p+Am&n4W/@-Fip(m4Ec=:]%;$Y9E/?C;'qYok%S(q"H9;g5t%[<sm%ogCItgC\4L\<$TKonk=QY%-M0[1]ELUHh&/o,#MZ<iB/''cG_80$l1:5Z@ff2-.keCC\u$`k0Waj*G%bVh8k\FkiD=)+<hP[ld(0%)RJ.L-//3??p&+H[I`"Y,`+D;i%'H9nn_gU<_bk\VE#BVAjZ,)@Do_#@m]ib:[BkBGM>G!-9UPN\qW<l0fSW&AtJ'$^&a-*1@_:b%:Q-jl&IVL0aD-WTR!VbQH?Ce_n`'DXJN]J^?+ClVcNRri6cpS@h_q;iPCM+;&3e"6k=EcLU!D\K2[`8,#iQ&VeR6kRa$m(O<I5Zk%/m/@f(46'0,CtIRWAc'=jAZdnm:7g^#iAP?"^"UG:?bWhj)/PUa:l&/D&Ur-mk^@P>,o1@lk6?(JPLMa:pO(JkP[&G,k@(r&B]\:%.07X9isU!Tnh8SfH9b3aAGhmMmN+fu4h\Di[iH5,/^mB$Ldt_rlC3A<f0RKqOV)r,p/'QULpqOu-C;bq_bt47BrKs9Ql\&5(#I3_%T@_orVb5kWj_I#Q7H"_Q;AjS]^kLKpd,I`LZA#CW[RHK&htd85))Ym_#1U2!n9tVC*+u@QhWXi@7T$aV(15(mRBXJS0Ym2+BcZ!0%?uHe`Mr*QmY_-PI=M4DD.2i@R]74dXRFm&#;)IFnPaJf8cko%NS]At'\9;<Rgqq+uq1rBur]O(hj5?MK"XaJZFhcNuNc7igP^p_a%jhnmu>rbo`F'jP76&]Z0Ln"1LnijpI@)aR;[T\YdN1YQKqgoS@3f)0R6q0].m5-PM@mb/TYl0Mg.?Zpk6nBa5OHYsNJp=bJ8iGb5%H^WQg('jGs2j_/q>qlUo(9&D%pmfIT#(Ph1C(!om1bq*.*\_Pn#^&-@/R]W5mr&_Qf.lmi)3sn3Yu0n?QXhAGrDG;!J"Sh;k_CnY%$d0(*F?[$(`7%^8ka%kP2.I2.f7c:SmI_DeN`T7?:c-jc'X)^5ous+PkZ]rE)3:G<UOs7_@3sIRe]?C+1H2Q42_XiN*YdHZ,g=,&%_'CF@L5ce?@bZTjA&M4]5&rD&'o(Zc]VTk;i\99V>jqF4[`P;"&4JE1[6];AiHI#O!`c`&i@@>Mb1LP:+i4jZ_<>_F^t\m8U77D;%L$aX?H3sZgG/RDp`a&_[XR17;\OFdT8Yc]5,YYS.O1,@M(]]m8Cm2Ol81Q\`Q8%dXaY!DZG)S."2]$8)@e=Y0*`4RJ)X'gmIXKFK%[4-*F@\:ME2VJeb4J:gOigqU=RR_?3WT:n&p:6-mhognWYpd0k":^P'$:RpCnG&lDO=L!QL3mh(4nda[iXdU0#JAA?c?]/5W[V,0%TF3J5g@!b.GpSpR)TUlpOO"PNR(r#61Z^#Kh\):n<U3jkca3'(X$:.\CpdTKKjK'M)%O2/2jMX:[/%Yq3W:"N808g44(\&'\d'f8%;8A9Z?;<eoLDlO;Iu/&iaH>ZlL,ZU!(=r)+Bf/brBg<bD2K"`DG[-"B3cXK)1^Qj'P81&</[q::Llb(<f*drYE2fn?SH1RXA,9Vu%78EJ=5<AXK,9*V4RhGajdn$+`H("kud!HVYP;Pl;n]C[:p:IP+'NjX9X2`<768q=<AQY:jLc?#SS#<Nlp&sLu_;dB!f43C6qq&nr%^U*&nI\W9'l/"G\=G6@QaZ?<5,@*+^gq$`^5j\PG1Of%6HH"'=#W($WL]%/-\rtlXOH[F'e\@W=-\%eYaK*72lkM<FC@LoFWe5i,%9?3i.#H76Tk=c%k6X\4'I?dN&lOG65,LBiCRIu_a0u91=in8&!&Z'\u/3C4CHlenUjFM#ci4SCV4kCoO(c]tfm;IP!Bj,ZAG?j&k%NT[=Z?+@@6;m(=L9qF%_cLYhubF@`Z$,'<e48fT5luMHqpPJG%:\;9>=F@gDYJdBq0-;C`Lk\E.kLjTa&u>5,ri>[OoBt.=Bj.CJ%9io=G=:\YH-3*TU<U&X+qW82[j###r1oA_19V[*FAU;JOj9]nj]RN#d49thBPBVo5+8sUI\%+D5<s3/a*WgL\$lJ.m>o"'O,#"Zs%MSMi&$c=P1ddV!k`hu.lAXcjYdeG&L=rt@*MuLYn%JB^ddAi?WYKrm7Le.a+m,,'4(#gBb$R]#VP;9d4?F"<^iX<XE*T\)-PT_KA%T72:eJpOS^EdZOY&33tIet3dWVrg\/AG!3.-*2]$h>Bf_jl?%t!Ym>)`oX#?^2"=jKT5">*i4W:IY8'sBX&D.7Pqhf#'s*X.DG>/%ZIO6;qgu,l8-5&XYg8^&`9ad>3LtUJYla#PG45%PTP(FIAIT)l:buC:\Rr*-]3YlLhO_K2p2Eaf:V&g)\B[l'%h\IP,SQFFl!/A6%cOh0e>^t7!NJqu/&s8*.g9sD<<j1KE4rq&Un$<MhA*T*4IJP[-Gc6WEhRnR48Wd"HaU>u'hYeFm6FpN`rBeq_f,jdI]3%"0$<L\M%/e@9?Y#f;?8Ik$?g(AAJ%`]cup57sj!p+<V10Q4?ZR+<?6KC8Vs+;N\[7%NVC4.b/7gTjLXa_M;Z,ZnrW@/IC3,4gION.$uhm7]"%/@_cf/c>!@aR:X/Y?!=LS;%k^7"/^gURN*?0rsA+(rPMm+`L_4+ug[nb9F:U#Z5:5p?iop-[<Ut^?QHfNCG+T-"dU2_I?!ErYr9g%4n+nO!kJc>!]rlYKE?HI9_,_1&%R#U,L/MgQLFS6oS=&MMOAB'6n)kfHLQ3X`nIUHY<>uH%G=rj-SYI5$0*!^Vft"nV[/35*@(,Q%HW/V=N##Cmn:?-ciBZRGK<JFpB]>uM#WP[5V3Zd_BZ1:ChfU4nLHZrn`%$XMCbbQ"d!OAJ(ZASad.$n`L8:HV7:S.NKUu?\6_DTe%_,NLs@;qiOA0@W9e#XI]SGQgm1se$Qj80$4ma7o0of/Zg3d]EOp>]T]oBX]4;()8-#]62Ee$,:_gs9O.*+p\jKU(V2Rf1CFXN\lc%k029R]tX$FjMG`^@WU$1$""A6fOm(%1c:D4VdbkUb!r*kS?EKEqn70m3$_9H4a'I%E]FU+S-&<#LVVi[2eD/j@FE[C2>]D[?.#fZ%[/"V&e2LDF"L[H\@Fu3?L+0aU&C`@b5"me'a'JlpnY1JE)AtHcGVcn)#AT8gos;8s3VB)*5%6&l+pJd<4k0;/SMNXsc2-`#J;qaM%[m?ls]nEtC+*00$o3<M4`bOeN1WD'/_utgdgR=ItFCC)qM$Jp-%"5,s]/kjbie7q?;OA#.qSO2#q^NA#O+$R:Pp[D\Zo#JSGMT`V%:@^C?'Tp#8\7to\l1U!'<(4uu:=*GmDYDrh^%U*Pm%N*J$u#8`R.&Z6iD*G8Q,dkM8+W*%OiQ1QDWNniJV+sJT9sKbSXsocLh)7%%!S:ZMH[k$80=9&k1_%csCY2.+:3k0$BJ"h"WE`N=DO\$ked/25I*Fml!<`JAgrEs6gt4gb1"LG8lQGUSBDE.&;6(SP/UH+CXbg*(%pmL54Tk5.^BqL*-\uI[Q2<X6o1<8kVNNUAk6.)@qX3^pGqph:j3TG'S<19%b1XDpCC1_?._Y9]sFB](DAW$[j'F9LRG6@;2mtLbP%mQ=4qV4aGY/!2PMZUDdW5l&VUNYgsZ4VZ3TL)cRO`2/q6Mo`-Hh@tWm&bJWtLH6mEFgH`IP^,G9:W0lm*oM"C:_[$s+a=O\IGa2H%XOs:9'A@OdKF3R22o*54igAF54*TDM<:dW:!?iO#6L-53.,1?JUqh#@H3N$rhcpqEfq+9!U_D_]D^uU)SV(r%+MQ.L#?1uAVW@]G%ET9ac0m+54i&oa8$[k^WYFme6.!sd"PPdsEjY17tJoZ-i[tO(g47>#>MG:tcjuTOQFG4&9ftq@6LZ;3X!p$RO]DA@\DXl+>?UE!R%%TJ@AB)u6ErA.EDTCG><*R5%H24iP<)uFftW=@tO0OED,8'i8k>?iJI9Z*1UC@"O#b/$eN@`='IrQu;@9s41tfWQeg>4G#DX\\OA%IbSAVSQ:N)J_(\pk-**_D.XeO0O!icDkBib(3@F;V`+S'BCDGp9:nOEqiCdP+5Y)`lu]pkqpIo+8'E58*u3"F3T.1l]I)$7$WGmA%mX>8<DJsPlZY.XBaG`D:ig2VG.UIlVWLSBOL69=_qYP+<7DSMfH5&o4<Uk)die`m2(a%s#hMnlLp_&\0)7DVJmBO6.U.;j1;W-]t%)AcEi'6ajFZV@,oJts))$b)A/Y/Jolg_I1#W;$tq82bX!`tie)3ok0DD5XH!<cTlK8oPe^:8&iH4U[3SL9eUr\JStW"qk&]GG@e2%$.^'0$]9qj7)MVg;E)TT8=oB>G,/kq+X6lYiY1>bbQMfE=9:SdCc9AM*%)Ea';uU.C0r&Gnc\Beb5HGC:LeL]oJZGhnGp(_Imaii%AF`'u2B.90h)0oe98H],]Y_5^*[0,hrtP+TgGB?d4LZ&2BbL.DMGNQ1Sr'rp)`%BgAQ<DK)%/'&,>=$=?Z^i0ZB+1X"/Pj;DC'h7%](d/UMAuAI]RnTnd@W\d)?>sjdDaOGmRW&8kWco1_%=CKjAYnMD\D?JF:K%1(W]<BisBHm4SE2O>mtg^TGh5N"#CjBj$2b=qttpT%<%.)AQRUAJ<M'a&:o%K>nsimE%i1Ej0[&bR<#kXe_l@.t0[!o!"ch<(bj<dja4GZ=$r$05ms4_r9[b!8.U[hsDB*c&?Qt[>#7R6W%Q0JV+>F80)KQ;&Nm)9l,M3DNnb$Yp]D')<:P>*/D[_::8(I(;LM18g=/#i\?!?S.)Pl[]uc$e6kb%b;S=WLiRWDHXE$$Il$'p((E%H[Tk)VKE%_@Bi@CimSoRKfX[d%hp<(<.?2iU@p9J"Y#qM+i@&<BO"tX0sQ83"]e.H$#,>"\o$s6-W$CIo2une8pL[+rcI-^C/**Z%J@qdn_]kY"ed:6a/ThDrm`I2k5(_G7`LNdg/)"IR%CN2V_BTKQ\3(;,iaREA62#0h'S@DW='S6@pD8-IMER@1\&d3RR*D".8%pM)%&KT>+XpQ6NCV1o'BtDa<%?</FYgBA9h/uOKAe=7s%@]E43SC(V+qk&(?_79H+n$Wb.&KM`Fa\&N\e.U/fX8,^99F?hES1Etl/K:$%cOsbQUCNi=J(+;P27cm6*)4[$I$>0F+>LMapJT8i/EDa35/Rd6]8oVgcu4\d,q)8J.5A/u2SM7RO-+EBF9[qjcAW]Y+iHXk&K@Y5%Hsoji<fdEPj#<8!3u:+pM_J)+s8O>];&P&Y(d*Bb>e?cVeV*GSC.Sotal;BD`XZ@;,3clIrEmVlG6U._*gIA8?0a7A*%7))lu3D:%s0;^!3#a]4bX%&;Hjk>YCf-loq#Q*i?H:=Z#QjW)bB(hcUQR9IrtC-'eJd>pc9J!l(8#fSnk.Uu9HWs4HEU7bYt.aV:?4TnC89F%%P(jih`[^ifB>>#+-_UM1B$(@;jEVcf'H;hpWDE]]K9qutR'Kfs?6X$FL5Q=J$+d$p?5OuEJDji$>Z_Fh^U1[A(]EX3eJ^sYR6Q`1%R4^lRcS>0_7Pe9<'&Np4b6L][-rP3T6mYSVkig9L3P^U\3_X%i;2TBeNGBqiR9Hs'P-9V3mae@-plgPE%Frq8kMn_e6K5f0Qp>8#%l0qob-42"apg5]!O(7o#Te[GE5ObXq;aWf551GfB)u4Bj`S3!cZ'XO=YJt^#PCk5DK)V(RB<RZ59M'/)LQ9WOIc<nFC+$'&VAGO-%o>3g[d?g5$.ZfB2aH8j<b4e8Ofi`lrm.1GU_,22&+\@S>%`k)):V[ZV7OYc3?=_bEWcq^/Kp4u>3[_0]Zs[1^(a3h[rr;s`k7S!o%0s)bfcD+h"gt1g_K"BOBP=5+gM.oVh$A1$-3Qb1ubn;7qR:/Kn<l\Sr/98iQm'JkE?FML>O!8YW8,%1o\qX5XEmnGC&N*Z>5qgIk%b8YsTD_gEtR$!FQ'c_]So:)P-Ohae&,[#2(aR/d9"\^oVYQj55N]]h6oC=;[L/iL:Au[k"D*qP:D[er+]3_@OPc(0V<W->AoC]J(%fGgP<_2#l]"3WWID,'bf-at>#M)%--O"3u/PUh\Al*Rq6*,aZK47U$c3YIBr\@)tQa-QVGX7V5\_SRUZG9OVX;CJ&_`TN+3\%eN2%kC3?nra22,$W[l9d8$%Vq'AjOC?HWU'_'g2>QWkSQL^ik_UZ#T2&.-u3(,9cGtP:l4HLX'SjgL6fVR8s$n'XL67U1Z7uh>6+_[QY%%,C*<j(p"N6Qb$"9HBYTJQQsPes#4=S:+o'GO3DIbfi8u01T-:-tgA`%&T)ufr2a.Ipr.PEFu2VE66--k%'mt@3NQS'GU\sQGoJ1%N1D2@rl<tDL@qLT>o.-H+4h3D76NQ1lXub^W<j$q+7`D5]IJ+N74P7QEa:l>W6QgX#"VKJ42+"DV>(sLpj9@+&.t^UduRnCL+^n^%LKtMq0b"F11EmuL.&<g9h?3+T5J^:V@hC8)8u=m==h8l,VFSl_\0BXKJ5`CKFIj#6n?rqc6^?CimE@iSE!<h7E(^S@4.Vd\%OiFn%`IfLl4Z]>46YEu/PlXX/W^T6G5e/![f9>OQ\#:gs"a"7$?Xm,0JB<^tKKmd,,qSeAJ+\4Z?3o!?,3VuWMTfJI6?AaTF0X8=2&rM)%Z"D<4,SfZc/.;ob.uS4Sc"*@9Y1'ZU_QsDH&J@^G!)<eIlqm+Pi$CuHTmC0!5tCU0e.1%?r4pubQ2CNl7:e)fHuXn7E:en&jHj1X%;2>l#2PeP0JcHoKnFVj9r0@A8KYp_1IY*k7[#\A#:fUJ6I"8]h:l5?/&nd/O7`K*%N8*bq&4@s\p),+=(`6Kg.;-Ri$YNX+UVeT>%:&rF4nq<g,7*)jgdoA\/#PP*lhIpVn,$mM>6DFt4&^t<o+Udp0]:ED>.#2-9Md<LDdZJk#fPGKO?gR2?F'#TdrTkbhP>LhH#AfWm%g3Yfe(Q&*;T51H%U4$^O+FB76inLcJbV>DU]"Oe2mpI4l[bDkHfE2H<1/Rj3n"]WFTTl[LBb1".@92Bj15tQp(WM=+g?bAo*ZC!3%^9K;bQYSGZ4_@lcMiA@nU94K35d<(kI=6^N#M=X%L)kj9;MQRCB>nBEEaA4/c*:`0pA+&-LJ(QM@J*pGiD8"1j84Ff:"-^O/W5kA%=]'0`D2-*H,l:-!^P5b1NB"a>UnP;UF`<A#"5(b*QkpA<OUCV"dmndcJgJu,Xl25N.BNkPf<$SMVaV.l=$S<>)c'tW.tUu``spU7%!p>4@*#+.<\nj"A9MI(L5&a?;@fHA_de*BS#;0>4s7X(>qd5B`o^DeMJ%u!P?iToQT0M4^pUgIm%tFH9s7+]*r8XFLpt)u>rUV-1%b9)63i@f[H0sa+DkPP;TnYa/$nXojCTDn]-+929=r6tZNjLuoms5!/Ch7ru^hu8,XlA:/~>%AI9_PrivateDataEnd